{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pierremarieriviere/Code/solidly-master/pages/vote/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Typography, Button, Paper, SvgIcon } from \"@material-ui/core\";\nimport Gauges from '../../components/ssVotes';\nimport Unlock from '../../components/unlock';\nimport classes from './vote.module.css';\nimport stores from '../../stores';\nimport { ACTIONS } from '../../stores/constants';\n\nfunction Vote(_ref) {\n  _s();\n\n  var changeTheme = _ref.changeTheme;\n  var accountStore = stores.accountStore.getStore('account');\n\n  var _useState = useState(accountStore),\n      account = _useState[0],\n      setAccount = _useState[1];\n\n  var _useState2 = useState(false),\n      unlockOpen = _useState2[0],\n      setUnlockOpen = _useState2[1];\n\n  useEffect(function () {\n    var accountConfigure = function accountConfigure() {\n      var accountStore = stores.accountStore.getStore('account');\n      setAccount(accountStore);\n      closeUnlock();\n    };\n\n    var connectWallet = function connectWallet() {\n      onAddressClicked();\n    };\n\n    stores.emitter.on(ACTIONS.ACCOUNT_CONFIGURED, accountConfigure);\n    stores.emitter.on(ACTIONS.CONNECT_WALLET, connectWallet);\n    return function () {\n      stores.emitter.removeListener(ACTIONS.ACCOUNT_CONFIGURED, accountConfigure);\n      stores.emitter.removeListener(ACTIONS.CONNECT_WALLET, connectWallet);\n    };\n  }, []);\n\n  var onAddressClicked = function onAddressClicked() {\n    setUnlockOpen(true);\n  };\n\n  var closeUnlock = function closeUnlock() {\n    setUnlockOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.ffContainer,\n    children: [account && account.address ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.connected,\n      children: /*#__PURE__*/_jsxDEV(Gauges, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.notConnectedContent,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.sphere\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.contentFloat,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.mainHeadingNC,\n          variant: \"h1\",\n          children: \"Vote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.mainDescNC,\n          variant: \"body2\",\n          children: \"Use your veSolid to vote for your selected liquidity pair\\u2019s rewards distribution or create a bribe to encourage others to do the same.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          disableElevation: true,\n          className: classes.buttonConnect,\n          variant: \"contained\",\n          onClick: onAddressClicked,\n          children: [account && account.address && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"\".concat(classes.accountIcon, \" \").concat(classes.metamask)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 46\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: \"Connect Wallet to Continue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), unlockOpen && /*#__PURE__*/_jsxDEV(Unlock, {\n      modalOpen: unlockOpen,\n      closeModal: closeUnlock\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Vote, \"+/hO5b+iyhRtHu75mvlj/viEG+A=\");\n\n_c = Vote;\nexport default Vote;\n\nvar _c;\n\n$RefreshReg$(_c, \"Vote\");","map":{"version":3,"sources":["/Users/pierremarieriviere/Code/solidly-master/pages/vote/index.js"],"names":["React","useState","useEffect","Typography","Button","Paper","SvgIcon","Gauges","Unlock","classes","stores","ACTIONS","Vote","changeTheme","accountStore","getStore","account","setAccount","unlockOpen","setUnlockOpen","accountConfigure","closeUnlock","connectWallet","onAddressClicked","emitter","on","ACCOUNT_CONFIGURED","CONNECT_WALLET","removeListener","ffContainer","address","connected","notConnectedContent","sphere","contentFloat","mainHeadingNC","mainDescNC","buttonConnect","accountIcon","metamask"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Typography, Button, Paper, SvgIcon } from \"@material-ui/core\";\nimport Gauges from '../../components/ssVotes';\nimport Unlock from '../../components/unlock';\nimport classes from './vote.module.css';\n\nimport stores from '../../stores';\nimport { ACTIONS } from '../../stores/constants';\n\nfunction Vote({ changeTheme }) {\n  const accountStore = stores.accountStore.getStore('account');\n  const [account, setAccount] = useState(accountStore);\n  const [unlockOpen, setUnlockOpen] = useState(false);\n\n  useEffect(() => {\n    const accountConfigure = () => {\n      const accountStore = stores.accountStore.getStore('account');\n      setAccount(accountStore);\n      closeUnlock();\n    };\n    const connectWallet = () => {\n      onAddressClicked();\n    };\n\n    stores.emitter.on(ACTIONS.ACCOUNT_CONFIGURED, accountConfigure);\n    stores.emitter.on(ACTIONS.CONNECT_WALLET, connectWallet);\n    return () => {\n      stores.emitter.removeListener(ACTIONS.ACCOUNT_CONFIGURED, accountConfigure);\n      stores.emitter.removeListener(ACTIONS.CONNECT_WALLET, connectWallet);\n    };\n  }, []);\n\n  const onAddressClicked = () => {\n    setUnlockOpen(true);\n  };\n\n  const closeUnlock = () => {\n    setUnlockOpen(false);\n  };\n\n  return (\n    <div className={classes.ffContainer}>\n\n      {account && account.address ?\n        <div className={classes.connected}>\n          <Gauges />\n        </div>\n        :\n        <Paper className={classes.notConnectedContent}>\n          <div className={classes.sphere}></div>\n          <div className={classes.contentFloat}>\n          <Typography className={classes.mainHeadingNC} variant='h1'>Vote</Typography>\n          <Typography className={classes.mainDescNC} variant='body2'>\n            Use your veSolid to vote for your selected liquidity pairâ€™s rewards distribution or create a bribe to encourage others to do the same.\n          </Typography>\n          <Button\n            disableElevation\n            className={classes.buttonConnect}\n            variant=\"contained\"\n            onClick={onAddressClicked}>\n              {account && account.address && <div className={`${classes.accountIcon} ${classes.metamask}`}></div>}\n              <Typography>Connect Wallet to Continue</Typography>\n          </Button>\n          </div>\n        </Paper>\n       }\n       {unlockOpen && <Unlock modalOpen={unlockOpen} closeModal={closeUnlock} />}\n    </div>\n  );\n}\n\nexport default Vote;\n"]},"metadata":{},"sourceType":"module"}