{"ast":null,"code":"import _regeneratorRuntime from \"/Users/pierremarieriviere/Code/solidly-master/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/pierremarieriviere/Code/solidly-master/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/pierremarieriviere/Code/solidly-master/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pierremarieriviere/Code/solidly-master/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"/Users/pierremarieriviere/Code/solidly-master/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport async from 'async';\nimport { ACTIONS, CONTRACTS } from './constants';\nimport Multicall from '@dopex-io/web3-multicall';\nimport { injected, walletconnect, walletlink, network } from './connectors';\nimport Web3 from 'web3';\n\nvar Store = /*#__PURE__*/function () {\n  function Store(dispatcher, emitter) {\n    var _this = this;\n\n    _classCallCheck(this, Store);\n\n    _defineProperty(this, \"configure\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // this.getGasPrices();\n              injected.isAuthorized().then(function (isAuthorized) {\n                var supportedChainIds = injected.supportedChainIds; // fall back to ethereum mainnet if chainId undefined\n\n                var _ref2 = window.ethereum || {},\n                    _ref2$chainId = _ref2.chainId,\n                    chainId = _ref2$chainId === void 0 ? process.env.NEXT_PUBLIC_CHAINID : _ref2$chainId;\n\n                var parsedChainId = parseInt(chainId, 16);\n                var isChainSupported = supportedChainIds.includes(parsedChainId);\n\n                if (!isChainSupported) {\n                  _this.setStore({\n                    chainInvalid: true\n                  });\n\n                  _this.emitter.emit(ACTIONS.ACCOUNT_CHANGED);\n                }\n\n                if (isAuthorized && isChainSupported) {\n                  injected.activate().then(function (a) {\n                    _this.setStore({\n                      account: {\n                        address: a.account\n                      },\n                      web3context: {\n                        library: {\n                          provider: a.provider\n                        }\n                      }\n                    });\n\n                    _this.emitter.emit(ACTIONS.ACCOUNT_CONFIGURED);\n                  }).then(function () {\n                    _this.dispatcher.dispatch({\n                      type: ACTIONS.CONFIGURE_SS,\n                      content: {\n                        connected: true\n                      }\n                    });\n                  })[\"catch\"](function (e) {\n                    _this.emitter.emit(ACTIONS.ERROR, e);\n\n                    _this.emitter.emit(ACTIONS.ACCOUNT_CONFIGURED);\n\n                    _this.dispatcher.dispatch({\n                      type: ACTIONS.CONFIGURE_SS,\n                      content: {\n                        connected: false\n                      }\n                    });\n                  });\n                } else {\n                  //we can ignore if not authorized.\n                  _this.emitter.emit(ACTIONS.ACCOUNT_CONFIGURED);\n\n                  _this.emitter.emit(ACTIONS.CONFIGURED);\n                }\n              });\n\n              if (window.ethereum) {\n                _this.updateAccount();\n              } else {\n                window.removeEventListener('ethereum#initialized', _this.updateAccount);\n                window.addEventListener('ethereum#initialized', _this.updateAccount, {\n                  once: true\n                });\n              }\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    _defineProperty(this, \"updateAccount\", function () {\n      var that = _this;\n      var res = window.ethereum.on('accountsChanged', function (accounts) {\n        that.setStore({\n          account: {\n            address: accounts[0]\n          },\n          web3context: {\n            library: {\n              provider: window.ethereum\n            }\n          }\n        });\n        that.emitter.emit(ACTIONS.ACCOUNT_CHANGED);\n        that.emitter.emit(ACTIONS.ACCOUNT_CONFIGURED);\n        that.dispatcher.dispatch({\n          type: ACTIONS.CONFIGURE_SS,\n          content: {\n            connected: true\n          }\n        });\n      });\n      window.ethereum.on('chainChanged', function (chainId) {\n        var supportedChainIds = [process.env.NEXT_PUBLIC_CHAINID];\n        var parsedChainId = parseInt(chainId + '', 16) + '';\n        var isChainSupported = supportedChainIds.includes(parsedChainId);\n        that.setStore({\n          chainInvalid: !isChainSupported\n        });\n        that.emitter.emit(ACTIONS.ACCOUNT_CHANGED);\n        that.emitter.emit(ACTIONS.ACCOUNT_CONFIGURED);\n        that.configure();\n      });\n    });\n\n    _defineProperty(this, \"getGasPrices\", /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(payload) {\n        var gasPrices, gasSpeed;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return _this._getGasPrices();\n\n              case 2:\n                gasPrices = _context2.sent;\n                gasSpeed = localStorage.getItem('yearn.finance-gas-speed');\n\n                if (!gasSpeed) {\n                  gasSpeed = 'fast';\n                  localStorage.getItem('yearn.finance-gas-speed', 'fast');\n                }\n\n                _this.setStore({\n                  gasPrices: gasPrices,\n                  gasSpeed: gasSpeed\n                });\n\n                _this.emitter.emit(ACTIONS.GAS_PRICES_RETURNED);\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(this, \"_getGasPrices\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var web3, gasPrice, gasPriceInGwei;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return _this.getWeb3Provider();\n\n            case 3:\n              web3 = _context3.sent;\n              _context3.next = 6;\n              return web3.eth.getGasPrice();\n\n            case 6:\n              gasPrice = _context3.sent;\n              gasPriceInGwei = web3.utils.fromWei(gasPrice, \"gwei\");\n              return _context3.abrupt(\"return\", {\n                standard: gasPriceInGwei,\n                fast: gasPriceInGwei,\n                instant: gasPriceInGwei\n              });\n\n            case 11:\n              _context3.prev = 11;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.log(_context3.t0);\n              return _context3.abrupt(\"return\", {});\n\n            case 15:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 11]]);\n    })));\n\n    _defineProperty(this, \"getGasPrice\", /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(speed) {\n        var gasSpeed, web3, gasPrice, gasPriceInGwei;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                gasSpeed = speed;\n\n                if (!speed) {\n                  gasSpeed = _this.getStore('gasSpeed');\n                }\n\n                _context4.prev = 2;\n                _context4.next = 5;\n                return _this.getWeb3Provider();\n\n              case 5:\n                web3 = _context4.sent;\n                _context4.next = 8;\n                return web3.eth.getGasPrice();\n\n              case 8:\n                gasPrice = _context4.sent;\n                gasPriceInGwei = web3.utils.fromWei(gasPrice, \"gwei\");\n                return _context4.abrupt(\"return\", gasPriceInGwei);\n\n              case 13:\n                _context4.prev = 13;\n                _context4.t0 = _context4[\"catch\"](2);\n                console.log(_context4.t0);\n                return _context4.abrupt(\"return\", {});\n\n              case 17:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[2, 13]]);\n      }));\n\n      return function (_x2) {\n        return _ref5.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(this, \"getWeb3Provider\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      var web3context, provider;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              web3context = _this.getStore('web3context');\n              provider = null;\n\n              if (!web3context) {\n                provider = network.providers['1'];\n              } else {\n                provider = web3context.library.provider;\n              }\n\n              if (provider) {\n                _context5.next = 5;\n                break;\n              }\n\n              return _context5.abrupt(\"return\", null);\n\n            case 5:\n              return _context5.abrupt(\"return\", new Web3(provider));\n\n            case 6:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    })));\n\n    _defineProperty(this, \"getMulticall\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n      var web3, multicall;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return _this.getWeb3Provider();\n\n            case 2:\n              web3 = _context6.sent;\n              multicall = new Multicall({\n                multicallAddress: CONTRACTS.MULTICALL_ADDRESS,\n                provider: web3\n              });\n              return _context6.abrupt(\"return\", multicall);\n\n            case 5:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    })));\n\n    this.dispatcher = dispatcher;\n    this.emitter = emitter;\n    this.store = {\n      account: null,\n      chainInvalid: false,\n      web3context: null,\n      tokens: [],\n      connectorsByName: {\n        MetaMask: injected,\n        TrustWallet: injected,\n        WalletConnect: walletconnect,\n        WalletLink: walletlink\n      },\n      gasPrices: {\n        standard: 90,\n        fast: 100,\n        instant: 130\n      },\n      gasSpeed: 'fast',\n      currentBlock: 12906197\n    };\n    dispatcher.register(function (payload) {\n      switch (payload.type) {\n        case ACTIONS.CONFIGURE:\n          this.configure(payload);\n          break;\n\n        default:\n          {}\n      }\n    }.bind(this));\n  }\n\n  _createClass(Store, [{\n    key: \"getStore\",\n    value: function getStore(index) {\n      return this.store[index];\n    }\n  }, {\n    key: \"setStore\",\n    value: function setStore(obj) {\n      this.store = _objectSpread(_objectSpread({}, this.store), obj);\n      console.log(this.store);\n      return this.emitter.emit(ACTIONS.STORE_UPDATED);\n    }\n  }]);\n\n  return Store;\n}();\n\nexport default Store;","map":{"version":3,"sources":["/Users/pierremarieriviere/Code/solidly-master/stores/accountStore.js"],"names":["async","ACTIONS","CONTRACTS","Multicall","injected","walletconnect","walletlink","network","Web3","Store","dispatcher","emitter","isAuthorized","then","supportedChainIds","window","ethereum","chainId","process","env","NEXT_PUBLIC_CHAINID","parsedChainId","parseInt","isChainSupported","includes","setStore","chainInvalid","emit","ACCOUNT_CHANGED","activate","a","account","address","web3context","library","provider","ACCOUNT_CONFIGURED","dispatch","type","CONFIGURE_SS","content","connected","e","ERROR","CONFIGURED","updateAccount","removeEventListener","addEventListener","once","that","res","on","accounts","configure","payload","_getGasPrices","gasPrices","gasSpeed","localStorage","getItem","GAS_PRICES_RETURNED","getWeb3Provider","web3","eth","getGasPrice","gasPrice","gasPriceInGwei","utils","fromWei","standard","fast","instant","console","log","speed","getStore","providers","multicall","multicallAddress","MULTICALL_ADDRESS","store","tokens","connectorsByName","MetaMask","TrustWallet","WalletConnect","WalletLink","currentBlock","register","CONFIGURE","bind","index","obj","STORE_UPDATED"],"mappings":"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","sourcesContent":["import async from 'async';\nimport {\n  ACTIONS,\n  CONTRACTS\n} from './constants';\nimport Multicall from '@dopex-io/web3-multicall';\n\nimport {\n  injected,\n  walletconnect,\n  walletlink,\n  network\n} from './connectors';\n\nimport Web3 from 'web3';\n\nclass Store {\n  constructor(dispatcher, emitter) {\n    this.dispatcher = dispatcher;\n    this.emitter = emitter;\n\n    this.store = {\n      account: null,\n      chainInvalid: false,\n      web3context: null,\n      tokens: [],\n      connectorsByName: {\n        MetaMask: injected,\n        TrustWallet: injected,\n        WalletConnect: walletconnect,\n        WalletLink: walletlink,\n      },\n      gasPrices: {\n        standard: 90,\n        fast: 100,\n        instant: 130,\n      },\n      gasSpeed: 'fast',\n      currentBlock: 12906197,\n    };\n\n    dispatcher.register(\n      function (payload) {\n        switch (payload.type) {\n          case ACTIONS.CONFIGURE:\n            this.configure(payload);\n            break;\n          default: {\n          }\n        }\n      }.bind(this),\n    );\n  }\n\n  getStore(index) {\n    return this.store[index];\n  }\n\n  setStore(obj) {\n    this.store = { ...this.store, ...obj };\n    console.log(this.store);\n    return this.emitter.emit(ACTIONS.STORE_UPDATED);\n  }\n\n  configure = async () => {\n    // this.getGasPrices();\n    injected.isAuthorized().then((isAuthorized) => {\n      const { supportedChainIds } = injected;\n      // fall back to ethereum mainnet if chainId undefined\n      const { chainId = process.env.NEXT_PUBLIC_CHAINID } = window.ethereum || {};\n      const parsedChainId = parseInt(chainId, 16);\n      const isChainSupported = supportedChainIds.includes(parsedChainId);\n      if (!isChainSupported) {\n        this.setStore({ chainInvalid: true });\n        this.emitter.emit(ACTIONS.ACCOUNT_CHANGED);\n      }\n\n      if (isAuthorized && isChainSupported) {\n        injected\n          .activate()\n          .then((a) => {\n            this.setStore({\n              account: { address: a.account },\n              web3context: { library: { provider: a.provider } }\n            });\n            this.emitter.emit(ACTIONS.ACCOUNT_CONFIGURED);\n          })\n          .then(() => {\n            this.dispatcher.dispatch({\n              type: ACTIONS.CONFIGURE_SS,\n              content: { connected: true },\n            });\n          })\n          .catch((e) => {\n            this.emitter.emit(ACTIONS.ERROR, e);\n            this.emitter.emit(ACTIONS.ACCOUNT_CONFIGURED);\n\n            this.dispatcher.dispatch({\n              type: ACTIONS.CONFIGURE_SS,\n              content: { connected: false },\n            });\n          });\n      } else {\n        //we can ignore if not authorized.\n        this.emitter.emit(ACTIONS.ACCOUNT_CONFIGURED);\n        this.emitter.emit(ACTIONS.CONFIGURED);\n      }\n    });\n\n    if (window.ethereum) {\n      this.updateAccount();\n    } else {\n      window.removeEventListener('ethereum#initialized', this.updateAccount);\n      window.addEventListener('ethereum#initialized', this.updateAccount, {\n        once: true,\n      });\n    }\n  };\n\n  updateAccount = () => {\n    const that = this;\n    const res = window.ethereum.on('accountsChanged', function (accounts) {\n      that.setStore({\n        account: { address: accounts[0] },\n        web3context: { library: { provider: window.ethereum } }\n      });\n      that.emitter.emit(ACTIONS.ACCOUNT_CHANGED);\n      that.emitter.emit(ACTIONS.ACCOUNT_CONFIGURED);\n\n      that.dispatcher.dispatch({\n        type: ACTIONS.CONFIGURE_SS,\n        content: { connected: true },\n      });\n    });\n\n    window.ethereum.on('chainChanged', function (chainId) {\n      const supportedChainIds = [process.env.NEXT_PUBLIC_CHAINID];\n      const parsedChainId = (parseInt(chainId+'', 16)+'');\n      const isChainSupported = supportedChainIds.includes(parsedChainId);\n      that.setStore({ chainInvalid: !isChainSupported });\n      that.emitter.emit(ACTIONS.ACCOUNT_CHANGED);\n      that.emitter.emit(ACTIONS.ACCOUNT_CONFIGURED);\n\n      that.configure()\n    });\n  };\n\n  getGasPrices = async (payload) => {\n    const gasPrices = await this._getGasPrices();\n    let gasSpeed = localStorage.getItem('yearn.finance-gas-speed');\n\n    if (!gasSpeed) {\n      gasSpeed = 'fast';\n      localStorage.getItem('yearn.finance-gas-speed', 'fast');\n    }\n\n    this.setStore({ gasPrices: gasPrices, gasSpeed: gasSpeed });\n    this.emitter.emit(ACTIONS.GAS_PRICES_RETURNED);\n  };\n\n  _getGasPrices = async () => {\n    try {\n      const web3 = await this.getWeb3Provider();\n      const gasPrice = await web3.eth.getGasPrice();\n      const gasPriceInGwei = web3.utils.fromWei(gasPrice, \"gwei\");\n      return {\n        standard: gasPriceInGwei,\n        fast: gasPriceInGwei,\n        instant: gasPriceInGwei,\n      };\n    } catch (e) {\n      console.log(e);\n      return {\n\n      }\n    }\n  };\n\n  getGasPrice = async (speed) => {\n    let gasSpeed = speed;\n    if (!speed) {\n      gasSpeed = this.getStore('gasSpeed');\n    }\n\n    try {\n      const web3 = await this.getWeb3Provider();\n      const gasPrice = await web3.eth.getGasPrice();\n      const gasPriceInGwei = web3.utils.fromWei(gasPrice, \"gwei\");\n      return gasPriceInGwei;\n    } catch (e) {\n      console.log(e);\n      return {};\n    }\n  };\n\n  getWeb3Provider = async () => {\n    let web3context = this.getStore('web3context');\n    let provider = null;\n\n    if (!web3context) {\n      provider = network.providers['1'];\n    } else {\n      provider = web3context.library.provider;\n    }\n\n    if (!provider) {\n      return null;\n    }\n    return new Web3(provider);\n  };\n\n  getMulticall = async () => {\n    const web3 = await this.getWeb3Provider()\n    const multicall = new Multicall({\n      multicallAddress: CONTRACTS.MULTICALL_ADDRESS,\n      provider: web3,\n    })\n    return multicall\n  };\n}\n\nexport default Store;\n"]},"metadata":{},"sourceType":"module"}