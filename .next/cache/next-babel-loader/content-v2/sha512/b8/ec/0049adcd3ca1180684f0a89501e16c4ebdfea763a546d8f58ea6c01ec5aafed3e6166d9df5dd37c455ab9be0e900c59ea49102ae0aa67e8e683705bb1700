{"ast":null,"code":"import _toConsumableArray from \"/Users/pierremarieriviere/Code/solidly-master/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/pierremarieriviere/Code/solidly-master/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"/Users/pierremarieriviere/Code/solidly-master/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/pierremarieriviere/Code/solidly-master/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/pierremarieriviere/Code/solidly-master/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _defineProperty from \"/Users/pierremarieriviere/Code/solidly-master/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport async from \"promise-async\";\nimport { MAX_UINT256, ZERO_ADDRESS, ACTIONS, CONTRACTS } from \"./constants\";\nimport { v4 as uuidv4 } from 'uuid';\nimport * as moment from \"moment\";\nimport { formatCurrency } from '../utils';\nimport stores from \"./\";\nimport BigNumber from \"bignumber.js\";\n\nvar fetch = require(\"node-fetch\");\n\nvar Store = function Store(dispatcher, emitter) {\n  var _this = this;\n\n  _classCallCheck(this, Store);\n\n  _defineProperty(this, \"getStore\", function (index) {\n    return _this.store[index];\n  });\n\n  _defineProperty(this, \"setStore\", function (obj) {\n    _this.store = _objectSpread(_objectSpread({}, _this.store), obj);\n    console.log(_this.store);\n    return _this.emitter.emit(ACTIONS.STORE_UPDATED);\n  });\n\n  _defineProperty(this, \"getAsset\", function (address) {\n    var assets = _this.store.assets;\n\n    if (!assets || assets.length === 0) {\n      return null;\n    }\n\n    var theAsset = assets.filter(function (ass) {\n      if (!ass) {\n        return false;\n      }\n\n      return ass.address.toLowerCase() === address.toLowerCase();\n    });\n\n    if (!theAsset || theAsset.length === 0) {\n      return null;\n    }\n\n    return theAsset[0];\n  });\n\n  _defineProperty(this, \"getNFTByID\", /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id) {\n      var vestNFTs, theNFT, _web, account, veToken, govToken, vestingContract, nftsLength, arr, nfts;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              vestNFTs = _this.getStore('vestNFTs');\n              theNFT = vestNFTs.filter(function (vestNFT) {\n                return vestNFT.id == id;\n              });\n\n              if (!(theNFT.length > 0)) {\n                _context2.next = 5;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", theNFT[0]);\n\n            case 5:\n              _context2.next = 7;\n              return stores.accountStore.getWeb3Provider();\n\n            case 7:\n              _web = _context2.sent;\n\n              if (_web) {\n                _context2.next = 11;\n                break;\n              }\n\n              console.warn('web3 not found');\n              return _context2.abrupt(\"return\", null);\n\n            case 11:\n              account = stores.accountStore.getStore(\"account\");\n\n              if (account) {\n                _context2.next = 15;\n                break;\n              }\n\n              console.warn('account not found');\n              return _context2.abrupt(\"return\", null);\n\n            case 15:\n              veToken = _this.getStore('veToken');\n              govToken = _this.getStore('govToken');\n              vestingContract = new _web.eth.Contract(CONTRACTS.VE_TOKEN_ABI, CONTRACTS.VE_TOKEN_ADDRESS);\n              _context2.next = 20;\n              return vestingContract.methods.balanceOf(account.address).call();\n\n            case 20:\n              nftsLength = _context2.sent;\n              arr = Array.from({\n                length: parseInt(nftsLength)\n              }, function (v, i) {\n                return i;\n              });\n              _context2.next = 24;\n              return Promise.all(arr.map( /*#__PURE__*/function () {\n                var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(idx) {\n                  var tokenIndex, locked, lockValue;\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          _context.next = 2;\n                          return vestingContract.methods.tokenOfOwnerByIndex(account.address, idx).call();\n\n                        case 2:\n                          tokenIndex = _context.sent;\n                          _context.next = 5;\n                          return vestingContract.methods.locked(tokenIndex).call();\n\n                        case 5:\n                          locked = _context.sent;\n                          _context.next = 8;\n                          return vestingContract.methods.balanceOfNFT(tokenIndex).call();\n\n                        case 8:\n                          lockValue = _context.sent;\n                          return _context.abrupt(\"return\", {\n                            id: tokenIndex,\n                            lockEnds: locked.end,\n                            lockAmount: BigNumber(locked.amount).div(Math.pow(10, govToken.decimals)).toFixed(govToken.decimals),\n                            lockValue: BigNumber(lockValue).div(Math.pow(10, veToken.decimals)).toFixed(veToken.decimals)\n                          });\n\n                        case 10:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                return function (_x2) {\n                  return _ref2.apply(this, arguments);\n                };\n              }()));\n\n            case 24:\n              nfts = _context2.sent;\n\n              _this.setStore({\n                vestNFTs: nfts\n              });\n\n              theNFT = nfts.filter(function (nft) {\n                return nft.id == id;\n              });\n\n              if (!(theNFT.length > 0)) {\n                _context2.next = 29;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", theNFT[0]);\n\n            case 29:\n              return _context2.abrupt(\"return\", null);\n\n            case 32:\n              _context2.prev = 32;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log(_context2.t0);\n              return _context2.abrupt(\"return\", null);\n\n            case 36:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 32]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }());\n\n  _defineProperty(this, \"_updateVestNFTByID\", /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(id) {\n      var vestNFTs, theNFT, _web2, account, veToken, govToken, vestingContract, locked, lockValue, newVestNFTs;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              vestNFTs = _this.getStore('vestNFTs');\n              theNFT = vestNFTs.filter(function (vestNFT) {\n                return vestNFT.id == id;\n              });\n\n              if (!(theNFT.length == 0)) {\n                _context3.next = 5;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", null);\n\n            case 5:\n              _context3.next = 7;\n              return stores.accountStore.getWeb3Provider();\n\n            case 7:\n              _web2 = _context3.sent;\n\n              if (_web2) {\n                _context3.next = 11;\n                break;\n              }\n\n              console.warn('web3 not found');\n              return _context3.abrupt(\"return\", null);\n\n            case 11:\n              account = stores.accountStore.getStore(\"account\");\n\n              if (account) {\n                _context3.next = 15;\n                break;\n              }\n\n              console.warn('account not found');\n              return _context3.abrupt(\"return\", null);\n\n            case 15:\n              veToken = _this.getStore('veToken');\n              govToken = _this.getStore('govToken');\n              vestingContract = new _web2.eth.Contract(CONTRACTS.VE_TOKEN_ABI, CONTRACTS.VE_TOKEN_ADDRESS);\n              _context3.next = 20;\n              return vestingContract.methods.locked(id).call();\n\n            case 20:\n              locked = _context3.sent;\n              _context3.next = 23;\n              return vestingContract.methods.balanceOfNFT(id).call();\n\n            case 23:\n              lockValue = _context3.sent;\n              newVestNFTs = vestNFTs.map(function (nft) {\n                if (nft.id == id) {\n                  return {\n                    id: id,\n                    lockEnds: locked.end,\n                    lockAmount: BigNumber(locked.amount).div(Math.pow(10, govToken.decimals)).toFixed(govToken.decimals),\n                    lockValue: BigNumber(lockValue).div(Math.pow(10, veToken.decimals)).toFixed(veToken.decimals)\n                  };\n                }\n\n                return nft;\n              });\n\n              _this.setStore({\n                vestNFTs: newVestNFTs\n              });\n\n              _this.emitter.emit(ACTIONS.UPDATED);\n\n              return _context3.abrupt(\"return\", null);\n\n            case 30:\n              _context3.prev = 30;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.log(_context3.t0);\n              return _context3.abrupt(\"return\", null);\n\n            case 34:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 30]]);\n    }));\n\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }());\n\n  _defineProperty(this, \"getPairByAddress\", /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(pairAddress) {\n      var _web3, account, pairs, thePair, pc, _yield$Promise$all, _yield$Promise$all2, _totalSupply, _reserve, _reserve2, _balanceOf, returnPair, pairContract, gaugesContract, _yield$Promise$all3, _yield$Promise$all4, totalWeight, _yield$Promise$all5, _yield$Promise$all6, token0, token1, totalSupply, symbol, reserve0, reserve1, decimals, balanceOf, stable, gaugeAddress, gaugeWeight, claimable0, claimable1, token0Contract, token1Contract, _yield$Promise$all7, _yield$Promise$all8, token0Symbol, token0Decimals, token0Balance, token1Symbol, token1Decimals, token1Balance, gaugeContract, _yield$Promise$all9, _yield$Promise$all10, _totalSupply2, gaugeBalance, bribeAddress, bribeContract, tokensLength, arry, bribes;\n\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.next = 3;\n              return stores.accountStore.getWeb3Provider();\n\n            case 3:\n              _web3 = _context5.sent;\n\n              if (_web3) {\n                _context5.next = 7;\n                break;\n              }\n\n              console.warn('web3 not found');\n              return _context5.abrupt(\"return\", null);\n\n            case 7:\n              account = stores.accountStore.getStore(\"account\");\n\n              if (account) {\n                _context5.next = 11;\n                break;\n              }\n\n              console.warn('account not found');\n              return _context5.abrupt(\"return\", null);\n\n            case 11:\n              pairs = _this.getStore('pairs');\n              thePair = pairs.filter(function (pair) {\n                return pair.address.toLowerCase() == pairAddress.toLowerCase();\n              });\n\n              if (!(thePair.length > 0)) {\n                _context5.next = 29;\n                break;\n              }\n\n              pc = new _web3.eth.Contract(CONTRACTS.PAIR_ABI, pairAddress);\n              _context5.next = 17;\n              return Promise.all([pc.methods.totalSupply().call(), pc.methods.reserve0().call(), pc.methods.reserve1().call(), pc.methods.balanceOf(account.address).call()]);\n\n            case 17:\n              _yield$Promise$all = _context5.sent;\n              _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 4);\n              _totalSupply = _yield$Promise$all2[0];\n              _reserve = _yield$Promise$all2[1];\n              _reserve2 = _yield$Promise$all2[2];\n              _balanceOf = _yield$Promise$all2[3];\n              returnPair = thePair[0];\n              returnPair.balance = BigNumber(_balanceOf).div(Math.pow(10, returnPair.decimals)).toFixed(parseInt(returnPair.decimals));\n              returnPair.totalSupply = BigNumber(_totalSupply).div(Math.pow(10, returnPair.decimals)).toFixed(parseInt(returnPair.decimals));\n              returnPair.reserve0 = BigNumber(_reserve).div(Math.pow(10, returnPair.token0.decimals)).toFixed(parseInt(returnPair.token0.decimals));\n              returnPair.reserve1 = BigNumber(_reserve2).div(Math.pow(10, returnPair.token1.decimals)).toFixed(parseInt(returnPair.token1.decimals));\n              return _context5.abrupt(\"return\", returnPair);\n\n            case 29:\n              pairContract = new _web3.eth.Contract(CONTRACTS.PAIR_ABI, pairAddress);\n              gaugesContract = new _web3.eth.Contract(CONTRACTS.VOTER_ABI, CONTRACTS.VOTER_ADDRESS);\n              _context5.next = 33;\n              return Promise.all([gaugesContract.methods.totalWeight().call()]);\n\n            case 33:\n              _yield$Promise$all3 = _context5.sent;\n              _yield$Promise$all4 = _slicedToArray(_yield$Promise$all3, 1);\n              totalWeight = _yield$Promise$all4[0];\n              _context5.next = 38;\n              return Promise.all([pairContract.methods.token0().call(), pairContract.methods.token1().call(), pairContract.methods.totalSupply().call(), pairContract.methods.symbol().call(), pairContract.methods.reserve0().call(), pairContract.methods.reserve1().call(), pairContract.methods.decimals().call(), pairContract.methods.balanceOf(account.address).call(), pairContract.methods.stable().call(), gaugesContract.methods.gauges(pairAddress).call(), gaugesContract.methods.weights(pairAddress).call(), pairContract.methods.claimable0(account.address).call(), pairContract.methods.claimable1(account.address).call()]);\n\n            case 38:\n              _yield$Promise$all5 = _context5.sent;\n              _yield$Promise$all6 = _slicedToArray(_yield$Promise$all5, 13);\n              token0 = _yield$Promise$all6[0];\n              token1 = _yield$Promise$all6[1];\n              totalSupply = _yield$Promise$all6[2];\n              symbol = _yield$Promise$all6[3];\n              reserve0 = _yield$Promise$all6[4];\n              reserve1 = _yield$Promise$all6[5];\n              decimals = _yield$Promise$all6[6];\n              balanceOf = _yield$Promise$all6[7];\n              stable = _yield$Promise$all6[8];\n              gaugeAddress = _yield$Promise$all6[9];\n              gaugeWeight = _yield$Promise$all6[10];\n              claimable0 = _yield$Promise$all6[11];\n              claimable1 = _yield$Promise$all6[12];\n              token0Contract = new _web3.eth.Contract(CONTRACTS.ERC20_ABI, token0);\n              token1Contract = new _web3.eth.Contract(CONTRACTS.ERC20_ABI, token1);\n              _context5.next = 57;\n              return Promise.all([token0Contract.methods.symbol().call(), token0Contract.methods.decimals().call(), token0Contract.methods.balanceOf(account.address).call(), token1Contract.methods.symbol().call(), token1Contract.methods.decimals().call(), token1Contract.methods.balanceOf(account.address).call()]);\n\n            case 57:\n              _yield$Promise$all7 = _context5.sent;\n              _yield$Promise$all8 = _slicedToArray(_yield$Promise$all7, 6);\n              token0Symbol = _yield$Promise$all8[0];\n              token0Decimals = _yield$Promise$all8[1];\n              token0Balance = _yield$Promise$all8[2];\n              token1Symbol = _yield$Promise$all8[3];\n              token1Decimals = _yield$Promise$all8[4];\n              token1Balance = _yield$Promise$all8[5];\n              thePair = {\n                address: pairAddress,\n                symbol: symbol,\n                decimals: parseInt(decimals),\n                isStable: stable,\n                token0: {\n                  address: token0,\n                  symbol: token0Symbol,\n                  balance: BigNumber(token0Balance).div(Math.pow(10, token0Decimals)).toFixed(parseInt(token0Decimals)),\n                  decimals: parseInt(token0Decimals)\n                },\n                token1: {\n                  address: token1,\n                  symbol: token1Symbol,\n                  balance: BigNumber(token1Balance).div(Math.pow(10, token1Decimals)).toFixed(parseInt(token1Decimals)),\n                  decimals: parseInt(token1Decimals)\n                },\n                balance: BigNumber(balanceOf).div(Math.pow(10, decimals)).toFixed(parseInt(decimals)),\n                totalSupply: BigNumber(totalSupply).div(Math.pow(10, decimals)).toFixed(parseInt(decimals)),\n                reserve0: BigNumber(reserve0).div(Math.pow(10, token0Decimals)).toFixed(parseInt(token0Decimals)),\n                reserve1: BigNumber(reserve1).div(Math.pow(10, token1Decimals)).toFixed(parseInt(token1Decimals)),\n                claimable0: BigNumber(claimable0).div(Math.pow(10, token0Decimals)).toFixed(parseInt(token0Decimals)),\n                claimable1: BigNumber(claimable1).div(Math.pow(10, token1Decimals)).toFixed(parseInt(token1Decimals))\n              };\n\n              if (!(gaugeAddress !== ZERO_ADDRESS)) {\n                _context5.next = 84;\n                break;\n              }\n\n              gaugeContract = new _web3.eth.Contract(CONTRACTS.GAUGE_ABI, gaugeAddress);\n              _context5.next = 70;\n              return Promise.all([gaugeContract.methods.totalSupply().call(), gaugeContract.methods.balanceOf(account.address).call(), gaugesContract.methods.bribes(gaugeAddress).call()]);\n\n            case 70:\n              _yield$Promise$all9 = _context5.sent;\n              _yield$Promise$all10 = _slicedToArray(_yield$Promise$all9, 3);\n              _totalSupply2 = _yield$Promise$all10[0];\n              gaugeBalance = _yield$Promise$all10[1];\n              bribeAddress = _yield$Promise$all10[2];\n              bribeContract = new _web3.eth.Contract(CONTRACTS.BRIBE_ABI, bribeAddress);\n              _context5.next = 78;\n              return bribeContract.methods.rewardsListLength().call();\n\n            case 78:\n              tokensLength = _context5.sent;\n              arry = Array.from({\n                length: parseInt(tokensLength)\n              }, function (v, i) {\n                return i;\n              });\n              _context5.next = 82;\n              return Promise.all(arry.map( /*#__PURE__*/function () {\n                var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(idx) {\n                  var tokenAddress, token, _yield$Promise$all11, _yield$Promise$all12, rewardRate;\n\n                  return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n                    while (1) {\n                      switch (_context4.prev = _context4.next) {\n                        case 0:\n                          _context4.next = 2;\n                          return bribeContract.methods.rewards(idx).call();\n\n                        case 2:\n                          tokenAddress = _context4.sent;\n                          _context4.next = 5;\n                          return _this.getBaseAsset(tokenAddress);\n\n                        case 5:\n                          token = _context4.sent;\n                          _context4.next = 8;\n                          return Promise.all([bribeContract.methods.rewardRate(tokenAddress).call()]);\n\n                        case 8:\n                          _yield$Promise$all11 = _context4.sent;\n                          _yield$Promise$all12 = _slicedToArray(_yield$Promise$all11, 1);\n                          rewardRate = _yield$Promise$all12[0];\n                          return _context4.abrupt(\"return\", {\n                            token: token,\n                            rewardRate: BigNumber(rewardRate).div(Math.pow(10, token.decimals)).toFixed(token.decimals),\n                            rewardAmount: BigNumber(rewardRate).times(604800).div(Math.pow(10, token.decimals)).toFixed(token.decimals)\n                          });\n\n                        case 12:\n                        case \"end\":\n                          return _context4.stop();\n                      }\n                    }\n                  }, _callee4);\n                }));\n\n                return function (_x5) {\n                  return _ref5.apply(this, arguments);\n                };\n              }()));\n\n            case 82:\n              bribes = _context5.sent;\n              thePair.gauge = {\n                address: gaugeAddress,\n                bribeAddress: bribeAddress,\n                decimals: 18,\n                balance: BigNumber(gaugeBalance).div(Math.pow(10, 18)).toFixed(18),\n                totalSupply: BigNumber(_totalSupply2).div(Math.pow(10, 18)).toFixed(18),\n                weight: BigNumber(gaugeWeight).div(Math.pow(10, 18)).toFixed(18),\n                weightPercent: BigNumber(gaugeWeight).times(100).div(totalWeight).toFixed(2),\n                bribes: bribes\n              };\n\n            case 84:\n              pairs.push(thePair);\n\n              _this.setStore({\n                pairs: pairs\n              });\n\n              return _context5.abrupt(\"return\", thePair);\n\n            case 89:\n              _context5.prev = 89;\n              _context5.t0 = _context5[\"catch\"](0);\n              console.log(_context5.t0);\n              return _context5.abrupt(\"return\", null);\n\n            case 93:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[0, 89]]);\n    }));\n\n    return function (_x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }());\n\n  _defineProperty(this, \"getPair\", /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(addressA, addressB, stab) {\n      var web3, account, pairs, thePair, pc, _yield$Promise$all13, _yield$Promise$all14, totalSupply, reserve0, reserve1, balanceOf, returnPair, factoryContract, pairAddress, pairContract, gaugesContract, _yield$Promise$all15, _yield$Promise$all16, totalWeight, _yield$Promise$all17, _yield$Promise$all18, token0, token1, _totalSupply3, symbol, _reserve3, _reserve4, decimals, _balanceOf2, stable, gaugeAddress, gaugeWeight, claimable0, claimable1, token0Contract, token1Contract, _yield$Promise$all19, _yield$Promise$all20, token0Symbol, token0Decimals, token0Balance, token1Symbol, token1Decimals, token1Balance, gaugeContract, _yield$Promise$all21, _yield$Promise$all22, _totalSupply4, gaugeBalance, bribeAddress, bribeContract, tokensLength, arry, bribes;\n\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              if (addressA === 'FTM') {\n                addressA = CONTRACTS.WFTM_ADDRESS;\n              }\n\n              if (addressB === 'FTM') {\n                addressB = CONTRACTS.WFTM_ADDRESS;\n              }\n\n              _context7.next = 4;\n              return stores.accountStore.getWeb3Provider();\n\n            case 4:\n              web3 = _context7.sent;\n\n              if (web3) {\n                _context7.next = 8;\n                break;\n              }\n\n              console.warn('web3 not found');\n              return _context7.abrupt(\"return\", null);\n\n            case 8:\n              account = stores.accountStore.getStore(\"account\");\n\n              if (account) {\n                _context7.next = 12;\n                break;\n              }\n\n              console.warn('account not found');\n              return _context7.abrupt(\"return\", null);\n\n            case 12:\n              pairs = _this.getStore('pairs');\n              thePair = pairs.filter(function (pair) {\n                return pair.token0.address.toLowerCase() == addressA.toLowerCase() && pair.token1.address.toLowerCase() == addressB.toLowerCase() && pair.isStable == stab || pair.token0.address.toLowerCase() == addressB.toLowerCase() && pair.token1.address.toLowerCase() == addressA.toLowerCase() && pair.isStable == stab;\n              });\n\n              if (!(thePair.length > 0)) {\n                _context7.next = 30;\n                break;\n              }\n\n              pc = new web3.eth.Contract(CONTRACTS.PAIR_ABI, thePair[0].address);\n              _context7.next = 18;\n              return Promise.all([pc.methods.totalSupply().call(), pc.methods.reserve0().call(), pc.methods.reserve1().call(), pc.methods.balanceOf(account.address).call()]);\n\n            case 18:\n              _yield$Promise$all13 = _context7.sent;\n              _yield$Promise$all14 = _slicedToArray(_yield$Promise$all13, 4);\n              totalSupply = _yield$Promise$all14[0];\n              reserve0 = _yield$Promise$all14[1];\n              reserve1 = _yield$Promise$all14[2];\n              balanceOf = _yield$Promise$all14[3];\n              returnPair = thePair[0];\n              returnPair.balance = BigNumber(balanceOf).div(Math.pow(10, returnPair.decimals)).toFixed(parseInt(returnPair.decimals));\n              returnPair.totalSupply = BigNumber(totalSupply).div(Math.pow(10, returnPair.decimals)).toFixed(parseInt(returnPair.decimals));\n              returnPair.reserve0 = BigNumber(reserve0).div(Math.pow(10, returnPair.token0.decimals)).toFixed(parseInt(returnPair.token0.decimals));\n              returnPair.reserve1 = BigNumber(reserve1).div(Math.pow(10, returnPair.token1.decimals)).toFixed(parseInt(returnPair.token1.decimals));\n              return _context7.abrupt(\"return\", returnPair);\n\n            case 30:\n              factoryContract = new web3.eth.Contract(CONTRACTS.FACTORY_ABI, CONTRACTS.FACTORY_ADDRESS);\n              _context7.next = 33;\n              return factoryContract.methods.getPair(addressA, addressB, stab).call();\n\n            case 33:\n              pairAddress = _context7.sent;\n\n              if (!(pairAddress && pairAddress != ZERO_ADDRESS)) {\n                _context7.next = 93;\n                break;\n              }\n\n              pairContract = new web3.eth.Contract(CONTRACTS.PAIR_ABI, pairAddress);\n              gaugesContract = new web3.eth.Contract(CONTRACTS.VOTER_ABI, CONTRACTS.VOTER_ADDRESS);\n              _context7.next = 39;\n              return Promise.all([gaugesContract.methods.totalWeight().call()]);\n\n            case 39:\n              _yield$Promise$all15 = _context7.sent;\n              _yield$Promise$all16 = _slicedToArray(_yield$Promise$all15, 1);\n              totalWeight = _yield$Promise$all16[0];\n              _context7.next = 44;\n              return Promise.all([pairContract.methods.token0().call(), pairContract.methods.token1().call(), pairContract.methods.totalSupply().call(), pairContract.methods.symbol().call(), pairContract.methods.reserve0().call(), pairContract.methods.reserve1().call(), pairContract.methods.decimals().call(), pairContract.methods.balanceOf(account.address).call(), pairContract.methods.stable().call(), gaugesContract.methods.gauges(pairAddress).call(), gaugesContract.methods.weights(pairAddress).call(), pairContract.methods.claimable0(account.address).call(), pairContract.methods.claimable1(account.address).call()]);\n\n            case 44:\n              _yield$Promise$all17 = _context7.sent;\n              _yield$Promise$all18 = _slicedToArray(_yield$Promise$all17, 13);\n              token0 = _yield$Promise$all18[0];\n              token1 = _yield$Promise$all18[1];\n              _totalSupply3 = _yield$Promise$all18[2];\n              symbol = _yield$Promise$all18[3];\n              _reserve3 = _yield$Promise$all18[4];\n              _reserve4 = _yield$Promise$all18[5];\n              decimals = _yield$Promise$all18[6];\n              _balanceOf2 = _yield$Promise$all18[7];\n              stable = _yield$Promise$all18[8];\n              gaugeAddress = _yield$Promise$all18[9];\n              gaugeWeight = _yield$Promise$all18[10];\n              claimable0 = _yield$Promise$all18[11];\n              claimable1 = _yield$Promise$all18[12];\n              token0Contract = new web3.eth.Contract(CONTRACTS.ERC20_ABI, token0);\n              token1Contract = new web3.eth.Contract(CONTRACTS.ERC20_ABI, token1);\n              _context7.next = 63;\n              return Promise.all([token0Contract.methods.symbol().call(), token0Contract.methods.decimals().call(), token0Contract.methods.balanceOf(account.address).call(), token1Contract.methods.symbol().call(), token1Contract.methods.decimals().call(), token1Contract.methods.balanceOf(account.address).call()]);\n\n            case 63:\n              _yield$Promise$all19 = _context7.sent;\n              _yield$Promise$all20 = _slicedToArray(_yield$Promise$all19, 6);\n              token0Symbol = _yield$Promise$all20[0];\n              token0Decimals = _yield$Promise$all20[1];\n              token0Balance = _yield$Promise$all20[2];\n              token1Symbol = _yield$Promise$all20[3];\n              token1Decimals = _yield$Promise$all20[4];\n              token1Balance = _yield$Promise$all20[5];\n              thePair = {\n                address: pairAddress,\n                symbol: symbol,\n                decimals: parseInt(decimals),\n                isStable: stable,\n                token0: {\n                  address: token0,\n                  symbol: token0Symbol,\n                  balance: BigNumber(token0Balance).div(Math.pow(10, token0Decimals)).toFixed(parseInt(token0Decimals)),\n                  decimals: parseInt(token0Decimals)\n                },\n                token1: {\n                  address: token1,\n                  symbol: token1Symbol,\n                  balance: BigNumber(token1Balance).div(Math.pow(10, token1Decimals)).toFixed(parseInt(token1Decimals)),\n                  decimals: parseInt(token1Decimals)\n                },\n                balance: BigNumber(_balanceOf2).div(Math.pow(10, decimals)).toFixed(parseInt(decimals)),\n                totalSupply: BigNumber(_totalSupply3).div(Math.pow(10, decimals)).toFixed(parseInt(decimals)),\n                reserve0: BigNumber(_reserve3).div(Math.pow(10, token0Decimals)).toFixed(parseInt(token0Decimals)),\n                reserve1: BigNumber(_reserve4).div(Math.pow(10, token1Decimals)).toFixed(parseInt(token1Decimals)),\n                claimable0: BigNumber(claimable0).div(Math.pow(10, token0Decimals)).toFixed(parseInt(token0Decimals)),\n                claimable1: BigNumber(claimable1).div(Math.pow(10, token1Decimals)).toFixed(parseInt(token1Decimals))\n              };\n\n              if (!(gaugeAddress !== ZERO_ADDRESS)) {\n                _context7.next = 90;\n                break;\n              }\n\n              gaugeContract = new web3.eth.Contract(CONTRACTS.GAUGE_ABI, gaugeAddress);\n              _context7.next = 76;\n              return Promise.all([gaugeContract.methods.totalSupply().call(), gaugeContract.methods.balanceOf(account.address).call(), gaugesContract.methods.bribes(gaugeAddress).call()]);\n\n            case 76:\n              _yield$Promise$all21 = _context7.sent;\n              _yield$Promise$all22 = _slicedToArray(_yield$Promise$all21, 3);\n              _totalSupply4 = _yield$Promise$all22[0];\n              gaugeBalance = _yield$Promise$all22[1];\n              bribeAddress = _yield$Promise$all22[2];\n              bribeContract = new web3.eth.Contract(CONTRACTS.BRIBE_ABI, bribeAddress);\n              _context7.next = 84;\n              return bribeContract.methods.rewardsListLength().call();\n\n            case 84:\n              tokensLength = _context7.sent;\n              arry = Array.from({\n                length: parseInt(tokensLength)\n              }, function (v, i) {\n                return i;\n              });\n              _context7.next = 88;\n              return Promise.all(arry.map( /*#__PURE__*/function () {\n                var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(idx) {\n                  var tokenAddress, token, _yield$Promise$all23, _yield$Promise$all24, rewardRate;\n\n                  return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n                    while (1) {\n                      switch (_context6.prev = _context6.next) {\n                        case 0:\n                          _context6.next = 2;\n                          return bribeContract.methods.rewards(idx).call();\n\n                        case 2:\n                          tokenAddress = _context6.sent;\n                          _context6.next = 5;\n                          return _this.getBaseAsset(tokenAddress);\n\n                        case 5:\n                          token = _context6.sent;\n                          _context6.next = 8;\n                          return Promise.all([bribeContract.methods.rewardRate(tokenAddress).call()]);\n\n                        case 8:\n                          _yield$Promise$all23 = _context6.sent;\n                          _yield$Promise$all24 = _slicedToArray(_yield$Promise$all23, 1);\n                          rewardRate = _yield$Promise$all24[0];\n                          return _context6.abrupt(\"return\", {\n                            token: token,\n                            rewardRate: BigNumber(rewardRate).div(Math.pow(10, token.decimals)).toFixed(token.decimals),\n                            rewardAmount: BigNumber(rewardRate).times(604800).div(Math.pow(10, token.decimals)).toFixed(token.decimals)\n                          });\n\n                        case 12:\n                        case \"end\":\n                          return _context6.stop();\n                      }\n                    }\n                  }, _callee6);\n                }));\n\n                return function (_x9) {\n                  return _ref7.apply(this, arguments);\n                };\n              }()));\n\n            case 88:\n              bribes = _context7.sent;\n              thePair.gauge = {\n                address: gaugeAddress,\n                bribeAddress: bribeAddress,\n                decimals: 18,\n                balance: BigNumber(gaugeBalance).div(Math.pow(10, 18)).toFixed(18),\n                totalSupply: BigNumber(_totalSupply4).div(Math.pow(10, 18)).toFixed(18),\n                weight: BigNumber(gaugeWeight).div(Math.pow(10, 18)).toFixed(18),\n                weightPercent: BigNumber(gaugeWeight).times(100).div(totalWeight).toFixed(2),\n                bribes: bribes\n              };\n\n            case 90:\n              pairs.push(thePair);\n\n              _this.setStore({\n                pairs: pairs\n              });\n\n              return _context7.abrupt(\"return\", thePair);\n\n            case 93:\n              return _context7.abrupt(\"return\", null);\n\n            case 94:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n\n    return function (_x6, _x7, _x8) {\n      return _ref6.apply(this, arguments);\n    };\n  }());\n\n  _defineProperty(this, \"removeBaseAsset\", function (asset) {\n    try {\n      var localBaseAssets = [];\n      var localBaseAssetsString = localStorage.getItem('stableSwap-assets');\n\n      if (localBaseAssetsString && localBaseAssetsString !== '') {\n        localBaseAssets = JSON.parse(localBaseAssetsString);\n        localBaseAssets = localBaseAssets.filter(function (obj) {\n          return obj.address.toLowerCase() !== asset.address.toLowerCase();\n        });\n        localStorage.setItem('stableSwap-assets', JSON.stringify(localBaseAssets));\n\n        var baseAssets = _this.getStore('baseAssets');\n\n        baseAssets = baseAssets.filter(function (obj) {\n          return obj.address.toLowerCase() !== asset.address.toLowerCase() && asset.local === true;\n        });\n\n        _this.setStore({\n          baseAssets: baseAssets\n        });\n\n        _this.emitter.emit(ACTIONS.BASE_ASSETS_UPDATED, baseAssets);\n      }\n    } catch (ex) {\n      console.log(ex);\n      return null;\n    }\n  });\n\n  _defineProperty(this, \"getLocalAssets\", function () {\n    try {\n      var localBaseAssets = [];\n      var localBaseAssetsString = localStorage.getItem('stableSwap-assets');\n\n      if (localBaseAssetsString && localBaseAssetsString !== '') {\n        localBaseAssets = JSON.parse(localBaseAssetsString);\n      }\n\n      return localBaseAssets;\n    } catch (ex) {\n      console.log(ex);\n      return [];\n    }\n  });\n\n  _defineProperty(this, \"getBaseAsset\", /*#__PURE__*/function () {\n    var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(address, save, getBalance) {\n      var baseAssets, theBaseAsset, _web4, baseAssetContract, _yield$Promise$all25, _yield$Promise$all26, symbol, decimals, name, newBaseAsset, account, balanceOf, localBaseAssets, _baseAssets, storeBaseAssets;\n\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.prev = 0;\n              baseAssets = _this.getStore('baseAssets');\n              theBaseAsset = baseAssets.filter(function (as) {\n                return as.address.toLowerCase() === address.toLowerCase();\n              });\n\n              if (!(theBaseAsset.length > 0)) {\n                _context8.next = 5;\n                break;\n              }\n\n              return _context8.abrupt(\"return\", theBaseAsset[0]);\n\n            case 5:\n              _context8.next = 7;\n              return stores.accountStore.getWeb3Provider();\n\n            case 7:\n              _web4 = _context8.sent;\n\n              if (_web4) {\n                _context8.next = 11;\n                break;\n              }\n\n              console.warn('web3 not found');\n              return _context8.abrupt(\"return\", null);\n\n            case 11:\n              baseAssetContract = new _web4.eth.Contract(CONTRACTS.ERC20_ABI, address);\n              _context8.next = 14;\n              return Promise.all([baseAssetContract.methods.symbol().call(), baseAssetContract.methods.decimals().call(), baseAssetContract.methods.name().call()]);\n\n            case 14:\n              _yield$Promise$all25 = _context8.sent;\n              _yield$Promise$all26 = _slicedToArray(_yield$Promise$all25, 3);\n              symbol = _yield$Promise$all26[0];\n              decimals = _yield$Promise$all26[1];\n              name = _yield$Promise$all26[2];\n              newBaseAsset = {\n                address: address,\n                symbol: symbol,\n                name: name,\n                decimals: parseInt(decimals),\n                logoURI: null,\n                local: true\n              };\n\n              if (!getBalance) {\n                _context8.next = 27;\n                break;\n              }\n\n              account = stores.accountStore.getStore(\"account\");\n\n              if (!account) {\n                _context8.next = 27;\n                break;\n              }\n\n              _context8.next = 25;\n              return baseAssetContract.methods.balanceOf(account.address).call();\n\n            case 25:\n              balanceOf = _context8.sent;\n              newBaseAsset.balance = BigNumber(balanceOf).div(Math.pow(10, newBaseAsset.decimals)).toFixed(newBaseAsset.decimals);\n\n            case 27:\n              // GET BACK HERE\n              //only save when a user adds it. don't for when we lookup a pair and find he asset.\n              if (save) {\n                localBaseAssets = _this.getLocalAssets();\n                localBaseAssets = [].concat(_toConsumableArray(localBaseAssets), [newBaseAsset]);\n                localStorage.setItem('stableSwap-assets', JSON.stringify(localBaseAssets));\n                _baseAssets = _this.getStore('baseAssets');\n                storeBaseAssets = [].concat(_toConsumableArray(_baseAssets), [newBaseAsset]);\n\n                _this.setStore({\n                  baseAssets: storeBaseAssets\n                });\n\n                _this.emitter.emit(ACTIONS.BASE_ASSETS_UPDATED, storeBaseAssets);\n              }\n\n              return _context8.abrupt(\"return\", newBaseAsset);\n\n            case 31:\n              _context8.prev = 31;\n              _context8.t0 = _context8[\"catch\"](0);\n              console.log(_context8.t0); // this.emitter.emit(ACTIONS.ERROR, ex)\n\n              return _context8.abrupt(\"return\", null);\n\n            case 35:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8, null, [[0, 31]]);\n    }));\n\n    return function (_x10, _x11, _x12) {\n      return _ref8.apply(this, arguments);\n    };\n  }());\n\n  _defineProperty(this, \"configure\", /*#__PURE__*/function () {\n    var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(payload) {\n      return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.prev = 0;\n\n              _this.setStore({\n                govToken: _this._getGovTokenBase()\n              });\n\n              _this.setStore({\n                veToken: _this._getVeTokenBase()\n              });\n\n              _context9.t0 = _this;\n              _context9.next = 6;\n              return _this._getBaseAssets();\n\n            case 6:\n              _context9.t1 = _context9.sent;\n              _context9.t2 = {\n                baseAssets: _context9.t1\n              };\n\n              _context9.t0.setStore.call(_context9.t0, _context9.t2);\n\n              _context9.t3 = _this;\n              _context9.next = 12;\n              return _this._getRouteAssets();\n\n            case 12:\n              _context9.t4 = _context9.sent;\n              _context9.t5 = {\n                routeAssets: _context9.t4\n              };\n\n              _context9.t3.setStore.call(_context9.t3, _context9.t5);\n\n              _context9.t6 = _this;\n              _context9.next = 18;\n              return _this._getPairs();\n\n            case 18:\n              _context9.t7 = _context9.sent;\n              _context9.t8 = {\n                pairs: _context9.t7\n              };\n\n              _context9.t6.setStore.call(_context9.t6, _context9.t8);\n\n              _this.emitter.emit(ACTIONS.UPDATED);\n\n              _this.emitter.emit(ACTIONS.CONFIGURED_SS);\n\n              setTimeout(function () {\n                _this.dispatcher.dispatch({\n                  type: ACTIONS.GET_BALANCES\n                });\n              }, 1);\n              _context9.next = 30;\n              break;\n\n            case 26:\n              _context9.prev = 26;\n              _context9.t9 = _context9[\"catch\"](0);\n              console.log(_context9.t9);\n\n              _this.emitter.emit(ACTIONS.ERROR, _context9.t9);\n\n            case 30:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9, null, [[0, 26]]);\n    }));\n\n    return function (_x13) {\n      return _ref9.apply(this, arguments);\n    };\n  }());\n\n  _defineProperty(this, \"_getBaseAssets\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10() {\n    var response, baseAssetsCall, baseAssets, nativeFTM, localBaseAssets;\n    return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            _context10.prev = 0;\n            _context10.next = 3;\n            return fetch(\"\".concat(process.env.NEXT_PUBLIC_API, \"//v1/baseAssets\"), {\n              method: 'get',\n              headers: {\n                'Authorization': \"Basic \".concat(process.env.NEXT_PUBLIC_API_TOKEN)\n              }\n            });\n\n          case 3:\n            response = _context10.sent;\n            _context10.next = 6;\n            return response.json();\n\n          case 6:\n            baseAssetsCall = _context10.sent;\n            baseAssets = baseAssetsCall.data;\n            nativeFTM = {\n              address: CONTRACTS.FTM_ADDRESS,\n              decimals: CONTRACTS.FTM_DECIMALS,\n              logoURI: CONTRACTS.FTM_LOGO,\n              name: CONTRACTS.FTM_NAME,\n              symbol: CONTRACTS.FTM_SYMBOL\n            };\n            baseAssets.unshift(nativeFTM);\n            localBaseAssets = _this.getLocalAssets();\n            return _context10.abrupt(\"return\", [].concat(_toConsumableArray(baseAssets), _toConsumableArray(localBaseAssets)));\n\n          case 14:\n            _context10.prev = 14;\n            _context10.t0 = _context10[\"catch\"](0);\n            console.log(_context10.t0);\n            return _context10.abrupt(\"return\", []);\n\n          case 18:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10, null, [[0, 14]]);\n  })));\n\n  _defineProperty(this, \"_getRouteAssets\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11() {\n    var response, routeAssetsCall;\n    return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            _context11.prev = 0;\n            _context11.next = 3;\n            return fetch(\"\".concat(process.env.NEXT_PUBLIC_API, \"/api/v1/routeAssets\"), {\n              method: 'get',\n              headers: {\n                'Authorization': \"Basic \".concat(process.env.NEXT_PUBLIC_API_TOKEN)\n              }\n            });\n\n          case 3:\n            response = _context11.sent;\n            _context11.next = 6;\n            return response.json();\n\n          case 6:\n            routeAssetsCall = _context11.sent;\n            return _context11.abrupt(\"return\", routeAssetsCall.data);\n\n          case 10:\n            _context11.prev = 10;\n            _context11.t0 = _context11[\"catch\"](0);\n            console.log(_context11.t0);\n            return _context11.abrupt(\"return\", []);\n\n          case 14:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11, null, [[0, 10]]);\n  })));\n\n  _defineProperty(this, \"_getPairs\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12() {\n    var response, pairsCall;\n    return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            _context12.prev = 0;\n            _context12.next = 3;\n            return fetch(\"\".concat(process.env.NEXT_PUBLIC_API, \"/api/v1/pairs\"), {\n              method: 'get',\n              headers: {\n                'Authorization': \"Basic \".concat(process.env.NEXT_PUBLIC_API_TOKEN)\n              }\n            });\n\n          case 3:\n            response = _context12.sent;\n            _context12.next = 6;\n            return response.json();\n\n          case 6:\n            pairsCall = _context12.sent;\n            return _context12.abrupt(\"return\", pairsCall.data);\n\n          case 10:\n            _context12.prev = 10;\n            _context12.t0 = _context12[\"catch\"](0);\n            console.log(_context12.t0);\n            return _context12.abrupt(\"return\", []);\n\n          case 14:\n          case \"end\":\n            return _context12.stop();\n        }\n      }\n    }, _callee12, null, [[0, 10]]);\n  })));\n\n  _defineProperty(this, \"_getGovTokenBase\", function () {\n    return {\n      address: CONTRACTS.GOV_TOKEN_ADDRESS,\n      name: CONTRACTS.GOV_TOKEN_NAME,\n      symbol: CONTRACTS.GOV_TOKEN_SYMBOL,\n      decimals: CONTRACTS.GOV_TOKEN_DECIMALS,\n      logoURI: CONTRACTS.GOV_TOKEN_LOGO\n    };\n  });\n\n  _defineProperty(this, \"_getVeTokenBase\", function () {\n    return {\n      address: CONTRACTS.VE_TOKEN_ADDRESS,\n      name: CONTRACTS.VE_TOKEN_NAME,\n      symbol: CONTRACTS.VE_TOKEN_SYMBOL,\n      decimals: CONTRACTS.VE_TOKEN_DECIMALS,\n      logoURI: CONTRACTS.VE_TOKEN_LOGO\n    };\n  });\n\n  _defineProperty(this, \"getBalances\", /*#__PURE__*/function () {\n    var _ref13 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13(payload) {\n      var account, _web5;\n\n      return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n        while (1) {\n          switch (_context13.prev = _context13.next) {\n            case 0:\n              _context13.prev = 0;\n              account = stores.accountStore.getStore(\"account\");\n\n              if (account) {\n                _context13.next = 5;\n                break;\n              }\n\n              console.warn('account not found');\n              return _context13.abrupt(\"return\", null);\n\n            case 5:\n              _context13.next = 7;\n              return stores.accountStore.getWeb3Provider();\n\n            case 7:\n              _web5 = _context13.sent;\n\n              if (_web5) {\n                _context13.next = 11;\n                break;\n              }\n\n              console.warn('web3 not found');\n              return _context13.abrupt(\"return\", null);\n\n            case 11:\n              _this._getGovTokenInfo(_web5, account);\n\n              _context13.next = 14;\n              return _this._getBaseAssetInfo(_web5, account);\n\n            case 14:\n              _context13.next = 16;\n              return _this._getPairInfo(_web5, account);\n\n            case 16:\n              _context13.next = 22;\n              break;\n\n            case 18:\n              _context13.prev = 18;\n              _context13.t0 = _context13[\"catch\"](0);\n              console.log(_context13.t0);\n\n              _this.emitter.emit(ACTIONS.ERROR, _context13.t0);\n\n            case 22:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n      }, _callee13, null, [[0, 18]]);\n    }));\n\n    return function (_x14) {\n      return _ref13.apply(this, arguments);\n    };\n  }());\n\n  _defineProperty(this, \"_getVestNFTs\", /*#__PURE__*/function () {\n    var _ref14 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee15(web3, account) {\n      var veToken, govToken, vestingContract, nftsLength, arr, nfts;\n      return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n        while (1) {\n          switch (_context15.prev = _context15.next) {\n            case 0:\n              _context15.prev = 0;\n              veToken = _this.getStore('veToken');\n              govToken = _this.getStore('govToken');\n              vestingContract = new web3.eth.Contract(CONTRACTS.VE_TOKEN_ABI, CONTRACTS.VE_TOKEN_ADDRESS);\n              _context15.next = 6;\n              return vestingContract.methods.balanceOf(account.address).call();\n\n            case 6:\n              nftsLength = _context15.sent;\n              arr = Array.from({\n                length: parseInt(nftsLength)\n              }, function (v, i) {\n                return i;\n              });\n              _context15.next = 10;\n              return Promise.all(arr.map( /*#__PURE__*/function () {\n                var _ref15 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee14(idx) {\n                  var tokenIndex, locked, lockValue;\n                  return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n                    while (1) {\n                      switch (_context14.prev = _context14.next) {\n                        case 0:\n                          _context14.next = 2;\n                          return vestingContract.methods.tokenOfOwnerByIndex(account.address, idx).call();\n\n                        case 2:\n                          tokenIndex = _context14.sent;\n                          _context14.next = 5;\n                          return vestingContract.methods.locked(tokenIndex).call();\n\n                        case 5:\n                          locked = _context14.sent;\n                          _context14.next = 8;\n                          return vestingContract.methods.balanceOfNFT(tokenIndex).call();\n\n                        case 8:\n                          lockValue = _context14.sent;\n                          return _context14.abrupt(\"return\", {\n                            id: tokenIndex,\n                            lockEnds: locked.end,\n                            lockAmount: BigNumber(locked.amount).div(Math.pow(10, govToken.decimals)).toFixed(govToken.decimals),\n                            lockValue: BigNumber(lockValue).div(Math.pow(10, veToken.decimals)).toFixed(veToken.decimals)\n                          });\n\n                        case 10:\n                        case \"end\":\n                          return _context14.stop();\n                      }\n                    }\n                  }, _callee14);\n                }));\n\n                return function (_x17) {\n                  return _ref15.apply(this, arguments);\n                };\n              }()));\n\n            case 10:\n              nfts = _context15.sent;\n\n              _this.setStore({\n                vestNFTs: nfts\n              });\n\n              _this.emitter.emit(ACTIONS.UPDATED);\n\n              _context15.next = 19;\n              break;\n\n            case 15:\n              _context15.prev = 15;\n              _context15.t0 = _context15[\"catch\"](0);\n              console.error(_context15.t0);\n\n              _this.emitter.emit(ACTIONS.ERROR, _context15.t0);\n\n            case 19:\n            case \"end\":\n              return _context15.stop();\n          }\n        }\n      }, _callee15, null, [[0, 15]]);\n    }));\n\n    return function (_x15, _x16) {\n      return _ref14.apply(this, arguments);\n    };\n  }());\n\n  _defineProperty(this, \"_getGovTokenInfo\", /*#__PURE__*/function () {\n    var _ref16 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee16(web3, account) {\n      var govToken, veTokenContract, _yield$Promise$all27, _yield$Promise$all28, balanceOf;\n\n      return _regeneratorRuntime.wrap(function _callee16$(_context16) {\n        while (1) {\n          switch (_context16.prev = _context16.next) {\n            case 0:\n              _context16.prev = 0;\n              govToken = _this.getStore('govToken');\n\n              if (govToken) {\n                _context16.next = 5;\n                break;\n              }\n\n              console.warn('govToken not found');\n              return _context16.abrupt(\"return\", null);\n\n            case 5:\n              veTokenContract = new web3.eth.Contract(CONTRACTS.GOV_TOKEN_ABI, CONTRACTS.GOV_TOKEN_ADDRESS);\n              _context16.next = 8;\n              return Promise.all([veTokenContract.methods.balanceOf(account.address).call()]);\n\n            case 8:\n              _yield$Promise$all27 = _context16.sent;\n              _yield$Promise$all28 = _slicedToArray(_yield$Promise$all27, 1);\n              balanceOf = _yield$Promise$all28[0];\n              govToken.balanceOf = balanceOf;\n              govToken.balance = BigNumber(balanceOf).div(Math.pow(10, govToken.decimals)).toFixed(govToken.decimals);\n\n              _this.setStore({\n                govToken: govToken\n              });\n\n              _this.emitter.emit(ACTIONS.UPDATED);\n\n              _this._getVestNFTs(web3, account);\n\n              _context16.next = 21;\n              break;\n\n            case 18:\n              _context16.prev = 18;\n              _context16.t0 = _context16[\"catch\"](0);\n              console.log(_context16.t0);\n\n            case 21:\n            case \"end\":\n              return _context16.stop();\n          }\n        }\n      }, _callee16, null, [[0, 18]]);\n    }));\n\n    return function (_x18, _x19) {\n      return _ref16.apply(this, arguments);\n    };\n  }());\n\n  _defineProperty(this, \"_getPairInfo\", /*#__PURE__*/function () {\n    var _ref17 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee20(web3, account, overridePairs) {\n      var multicall, pairs, factoryContract, gaugesContract, _yield$Promise$all29, _yield$Promise$all30, allPairsLength, totalWeight, ps, ps1;\n\n      return _regeneratorRuntime.wrap(function _callee20$(_context20) {\n        while (1) {\n          switch (_context20.prev = _context20.next) {\n            case 0:\n              _context20.prev = 0;\n              _context20.next = 3;\n              return stores.accountStore.getMulticall();\n\n            case 3:\n              multicall = _context20.sent;\n              pairs = [];\n\n              if (overridePairs) {\n                pairs = overridePairs;\n              } else {\n                pairs = _this.getStore('pairs');\n              }\n\n              factoryContract = new web3.eth.Contract(CONTRACTS.FACTORY_ABI, CONTRACTS.FACTORY_ADDRESS);\n              gaugesContract = new web3.eth.Contract(CONTRACTS.VOTER_ABI, CONTRACTS.VOTER_ADDRESS);\n              _context20.next = 10;\n              return Promise.all([factoryContract.methods.allPairsLength().call(), gaugesContract.methods.totalWeight().call()]);\n\n            case 10:\n              _yield$Promise$all29 = _context20.sent;\n              _yield$Promise$all30 = _slicedToArray(_yield$Promise$all29, 2);\n              allPairsLength = _yield$Promise$all30[0];\n              totalWeight = _yield$Promise$all30[1];\n              _context20.next = 16;\n              return Promise.all(pairs.map( /*#__PURE__*/function () {\n                var _ref18 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee17(pair) {\n                  var pairContract, token0Contract, token1Contract, token0, token1, _yield$multicall$aggr, _yield$multicall$aggr2, totalSupply, reserves, balanceOf, claimable0, claimable1;\n\n                  return _regeneratorRuntime.wrap(function _callee17$(_context17) {\n                    while (1) {\n                      switch (_context17.prev = _context17.next) {\n                        case 0:\n                          _context17.prev = 0;\n                          pairContract = new web3.eth.Contract(CONTRACTS.PAIR_ABI, pair.address);\n                          token0Contract = new web3.eth.Contract(CONTRACTS.ERC20_ABI, pair.token0.address);\n                          token1Contract = new web3.eth.Contract(CONTRACTS.ERC20_ABI, pair.token1.address);\n                          _context17.next = 6;\n                          return _this.getBaseAsset(pair.token0.address, false, true);\n\n                        case 6:\n                          token0 = _context17.sent;\n                          _context17.next = 9;\n                          return _this.getBaseAsset(pair.token1.address, false, true);\n\n                        case 9:\n                          token1 = _context17.sent;\n                          _context17.next = 12;\n                          return multicall.aggregate([pairContract.methods.totalSupply(), pairContract.methods.getReserves(), pairContract.methods.balanceOf(account.address), pairContract.methods.claimable0(account.address), pairContract.methods.claimable1(account.address)]);\n\n                        case 12:\n                          _yield$multicall$aggr = _context17.sent;\n                          _yield$multicall$aggr2 = _slicedToArray(_yield$multicall$aggr, 5);\n                          totalSupply = _yield$multicall$aggr2[0];\n                          reserves = _yield$multicall$aggr2[1];\n                          balanceOf = _yield$multicall$aggr2[2];\n                          claimable0 = _yield$multicall$aggr2[3];\n                          claimable1 = _yield$multicall$aggr2[4];\n                          pair.token0 = token0 != null ? token0 : pair.token0;\n                          pair.token1 = token1 != null ? token1 : pair.token1;\n                          pair.balance = BigNumber(balanceOf).div(Math.pow(10, pair.decimals)).toFixed(parseInt(pair.decimals));\n                          pair.totalSupply = BigNumber(totalSupply).div(Math.pow(10, pair.decimals)).toFixed(parseInt(pair.decimals));\n                          pair.reserve0 = BigNumber(reserves[0]).div(Math.pow(10, pair.token0.decimals)).toFixed(parseInt(pair.token0.decimals));\n                          pair.reserve1 = BigNumber(reserves[1]).div(Math.pow(10, pair.token1.decimals)).toFixed(parseInt(pair.token1.decimals));\n                          pair.claimable0 = BigNumber(claimable0).div(Math.pow(10, pair.token0.decimals)).toFixed(pair.token0.decimals);\n                          pair.claimable1 = BigNumber(claimable1).div(Math.pow(10, pair.token1.decimals)).toFixed(pair.token1.decimals);\n                          return _context17.abrupt(\"return\", pair);\n\n                        case 30:\n                          _context17.prev = 30;\n                          _context17.t0 = _context17[\"catch\"](0);\n                          console.log('EXCEPTION 1');\n                          console.log(pair);\n                          console.log(_context17.t0);\n                          return _context17.abrupt(\"return\", pair);\n\n                        case 36:\n                        case \"end\":\n                          return _context17.stop();\n                      }\n                    }\n                  }, _callee17, null, [[0, 30]]);\n                }));\n\n                return function (_x23) {\n                  return _ref18.apply(this, arguments);\n                };\n              }()));\n\n            case 16:\n              ps = _context20.sent;\n\n              _this.setStore({\n                pairs: ps\n              });\n\n              _this.emitter.emit(ACTIONS.UPDATED);\n\n              _context20.next = 21;\n              return Promise.all(ps.map( /*#__PURE__*/function () {\n                var _ref19 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee19(pair) {\n                  var gaugeContract, _yield$multicall$aggr3, _yield$multicall$aggr4, totalSupply, gaugeBalance, gaugeWeight, bribeContract, bribes;\n\n                  return _regeneratorRuntime.wrap(function _callee19$(_context19) {\n                    while (1) {\n                      switch (_context19.prev = _context19.next) {\n                        case 0:\n                          _context19.prev = 0;\n\n                          if (!(pair.gauge && pair.gauge.address !== ZERO_ADDRESS)) {\n                            _context19.next = 21;\n                            break;\n                          }\n\n                          gaugeContract = new web3.eth.Contract(CONTRACTS.GAUGE_ABI, pair.gauge.address);\n                          _context19.next = 5;\n                          return multicall.aggregate([gaugeContract.methods.totalSupply(), gaugeContract.methods.balanceOf(account.address), gaugesContract.methods.weights(pair.address)]);\n\n                        case 5:\n                          _yield$multicall$aggr3 = _context19.sent;\n                          _yield$multicall$aggr4 = _slicedToArray(_yield$multicall$aggr3, 3);\n                          totalSupply = _yield$multicall$aggr4[0];\n                          gaugeBalance = _yield$multicall$aggr4[1];\n                          gaugeWeight = _yield$multicall$aggr4[2];\n                          bribeContract = new web3.eth.Contract(CONTRACTS.BRIBE_ABI, pair.gauge.bribeAddress);\n                          _context19.next = 13;\n                          return Promise.all(pair.gauge.bribes.map( /*#__PURE__*/function () {\n                            var _ref20 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee18(bribe, idx) {\n                              var _yield$Promise$all31, _yield$Promise$all32, rewardRate;\n\n                              return _regeneratorRuntime.wrap(function _callee18$(_context18) {\n                                while (1) {\n                                  switch (_context18.prev = _context18.next) {\n                                    case 0:\n                                      _context18.next = 2;\n                                      return Promise.all([bribeContract.methods.rewardRate(bribe.token.address).call()]);\n\n                                    case 2:\n                                      _yield$Promise$all31 = _context18.sent;\n                                      _yield$Promise$all32 = _slicedToArray(_yield$Promise$all31, 1);\n                                      rewardRate = _yield$Promise$all32[0];\n                                      bribe.rewardRate = BigNumber(rewardRate).div(Math.pow(10, bribe.token.decimals)).toFixed(bribe.token.decimals);\n                                      bribe.rewardAmount = BigNumber(rewardRate).times(604800).div(Math.pow(10, bribe.token.decimals)).toFixed(bribe.token.decimals);\n                                      return _context18.abrupt(\"return\", bribe);\n\n                                    case 8:\n                                    case \"end\":\n                                      return _context18.stop();\n                                  }\n                                }\n                              }, _callee18);\n                            }));\n\n                            return function (_x25, _x26) {\n                              return _ref20.apply(this, arguments);\n                            };\n                          }()));\n\n                        case 13:\n                          bribes = _context19.sent;\n                          pair.gauge.balance = BigNumber(gaugeBalance).div(Math.pow(10, 18)).toFixed(18);\n                          pair.gauge.totalSupply = BigNumber(totalSupply).div(Math.pow(10, 18)).toFixed(18);\n                          pair.gauge.reserve0 = pair.totalSupply > 0 ? BigNumber(pair.reserve0).times(pair.gauge.totalSupply).div(pair.totalSupply).toFixed(pair.token0.decimals) : '0';\n                          pair.gauge.reserve1 = pair.totalSupply > 0 ? BigNumber(pair.reserve1).times(pair.gauge.totalSupply).div(pair.totalSupply).toFixed(pair.token1.decimals) : '0';\n                          pair.gauge.weight = BigNumber(gaugeWeight).div(Math.pow(10, 18)).toFixed(18);\n                          pair.gauge.weightPercent = BigNumber(gaugeWeight).times(100).div(totalWeight).toFixed(2);\n                          pair.gaugebribes = bribes;\n\n                        case 21:\n                          return _context19.abrupt(\"return\", pair);\n\n                        case 24:\n                          _context19.prev = 24;\n                          _context19.t0 = _context19[\"catch\"](0);\n                          console.log('EXCEPTION 2');\n                          console.log(pair);\n                          console.log(_context19.t0);\n                          return _context19.abrupt(\"return\", pair);\n\n                        case 30:\n                        case \"end\":\n                          return _context19.stop();\n                      }\n                    }\n                  }, _callee19, null, [[0, 24]]);\n                }));\n\n                return function (_x24) {\n                  return _ref19.apply(this, arguments);\n                };\n              }()));\n\n            case 21:\n              ps1 = _context20.sent;\n\n              _this.setStore({\n                pairs: ps1\n              });\n\n              _this.emitter.emit(ACTIONS.UPDATED);\n\n              _context20.next = 29;\n              break;\n\n            case 26:\n              _context20.prev = 26;\n              _context20.t0 = _context20[\"catch\"](0);\n              console.log(_context20.t0);\n\n            case 29:\n            case \"end\":\n              return _context20.stop();\n          }\n        }\n      }, _callee20, null, [[0, 26]]);\n    }));\n\n    return function (_x20, _x21, _x22) {\n      return _ref17.apply(this, arguments);\n    };\n  }());\n\n  _defineProperty(this, \"_getBaseAssetInfo\", /*#__PURE__*/function () {\n    var _ref21 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee22(web3, account) {\n      var baseAssets, voterContract, baseAssetsBalances, i;\n      return _regeneratorRuntime.wrap(function _callee22$(_context22) {\n        while (1) {\n          switch (_context22.prev = _context22.next) {\n            case 0:\n              _context22.prev = 0;\n              baseAssets = _this.getStore(\"baseAssets\");\n\n              if (baseAssets) {\n                _context22.next = 5;\n                break;\n              }\n\n              console.warn('baseAssets not found');\n              return _context22.abrupt(\"return\", null);\n\n            case 5:\n              voterContract = new web3.eth.Contract(CONTRACTS.VOTER_ABI, CONTRACTS.VOTER_ADDRESS);\n              _context22.next = 8;\n              return Promise.all(baseAssets.map( /*#__PURE__*/function () {\n                var _ref22 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee21(asset) {\n                  var bal, assetContract, _yield$Promise$all33, _yield$Promise$all34, isWhitelisted, balanceOf;\n\n                  return _regeneratorRuntime.wrap(function _callee21$(_context21) {\n                    while (1) {\n                      switch (_context21.prev = _context21.next) {\n                        case 0:\n                          _context21.prev = 0;\n\n                          if (!(asset.address === 'FTM')) {\n                            _context21.next = 6;\n                            break;\n                          }\n\n                          _context21.next = 4;\n                          return web3.eth.getBalance(account.address);\n\n                        case 4:\n                          bal = _context21.sent;\n                          return _context21.abrupt(\"return\", {\n                            balanceOf: bal,\n                            isWhitelisted: true\n                          });\n\n                        case 6:\n                          assetContract = new web3.eth.Contract(CONTRACTS.ERC20_ABI, asset.address);\n                          _context21.next = 9;\n                          return Promise.all([voterContract.methods.isWhitelisted(asset.address).call(), assetContract.methods.balanceOf(account.address).call()]);\n\n                        case 9:\n                          _yield$Promise$all33 = _context21.sent;\n                          _yield$Promise$all34 = _slicedToArray(_yield$Promise$all33, 2);\n                          isWhitelisted = _yield$Promise$all34[0];\n                          balanceOf = _yield$Promise$all34[1];\n                          return _context21.abrupt(\"return\", {\n                            balanceOf: balanceOf,\n                            isWhitelisted: isWhitelisted\n                          });\n\n                        case 16:\n                          _context21.prev = 16;\n                          _context21.t0 = _context21[\"catch\"](0);\n                          console.log(\"EXCEPTION 3\");\n                          console.log(asset);\n                          console.log(_context21.t0);\n                          return _context21.abrupt(\"return\", {\n                            balanceOf: '0',\n                            isWhitelisted: false\n                          });\n\n                        case 22:\n                        case \"end\":\n                          return _context21.stop();\n                      }\n                    }\n                  }, _callee21, null, [[0, 16]]);\n                }));\n\n                return function (_x29) {\n                  return _ref22.apply(this, arguments);\n                };\n              }()));\n\n            case 8:\n              baseAssetsBalances = _context22.sent;\n\n              for (i = 0; i < baseAssets.length; i++) {\n                baseAssets[i].balance = BigNumber(baseAssetsBalances[i].balanceOf).div(Math.pow(10, baseAssets[i].decimals)).toFixed(baseAssets[i].decimals);\n                baseAssets[i].isWhitelisted = baseAssetsBalances[i].isWhitelisted;\n              }\n\n              _this.setStore({\n                baseAssets: baseAssets\n              });\n\n              _this.emitter.emit(ACTIONS.UPDATED);\n\n              _context22.next = 17;\n              break;\n\n            case 14:\n              _context22.prev = 14;\n              _context22.t0 = _context22[\"catch\"](0);\n              console.log(_context22.t0);\n\n            case 17:\n            case \"end\":\n              return _context22.stop();\n          }\n        }\n      }, _callee22, null, [[0, 14]]);\n    }));\n\n    return function (_x27, _x28) {\n      return _ref21.apply(this, arguments);\n    };\n  }());\n\n  _defineProperty(this, \"searchBaseAsset\", /*#__PURE__*/function () {\n    var _ref23 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee23(payload) {\n      var localBaseAssets, localBaseAssetsString, theBaseAsset, baseAssetContract, _yield$Promise$all35, _yield$Promise$all36, symbol, decimals, name, newBaseAsset, baseAssets, storeBaseAssets;\n\n      return _regeneratorRuntime.wrap(function _callee23$(_context23) {\n        while (1) {\n          switch (_context23.prev = _context23.next) {\n            case 0:\n              _context23.prev = 0;\n              localBaseAssets = [];\n              localBaseAssetsString = localStorage.getItem('stableSwap-assets');\n\n              if (localBaseAssetsString && localBaseAssetsString !== '') {\n                localBaseAssets = JSON.parse(localBaseAssetsString);\n              }\n\n              theBaseAsset = localBaseAssets.filter(function (as) {\n                return as.address.toLowerCase() === payload.content.address.toLowerCase();\n              });\n\n              if (!(theBaseAsset.length > 0)) {\n                _context23.next = 8;\n                break;\n              }\n\n              _this.emitter.emit(ACTIONS.ASSET_SEARCHED, theBaseAsset);\n\n              return _context23.abrupt(\"return\");\n\n            case 8:\n              baseAssetContract = new web3.eth.Contract(CONTRACTS.ERC20_ABI, payload.content.address);\n              _context23.next = 11;\n              return Promise.all([baseAssetContract.methods.symbol().call(), baseAssetContract.methods.decimals().call(), baseAssetContract.methods.name().call()]);\n\n            case 11:\n              _yield$Promise$all35 = _context23.sent;\n              _yield$Promise$all36 = _slicedToArray(_yield$Promise$all35, 3);\n              symbol = _yield$Promise$all36[0];\n              decimals = _yield$Promise$all36[1];\n              name = _yield$Promise$all36[2];\n              newBaseAsset = {\n                address: payload.content.address,\n                symbol: symbol,\n                name: name,\n                decimals: parseInt(decimals)\n              };\n              localBaseAssets = [].concat(_toConsumableArray(localBaseAssets), [newBaseAsset]);\n              localStorage.setItem('stableSwap-assets', JSON.stringify(localBaseAssets));\n              baseAssets = _this.getStore('baseAssets');\n              storeBaseAssets = [].concat(_toConsumableArray(baseAssets), _toConsumableArray(localBaseAssets));\n\n              _this.setStore({\n                baseAssets: storeBaseAssets\n              });\n\n              _this.emitter.emit(ACTIONS.ASSET_SEARCHED, newBaseAsset);\n\n              _context23.next = 29;\n              break;\n\n            case 25:\n              _context23.prev = 25;\n              _context23.t0 = _context23[\"catch\"](0);\n              console.log(_context23.t0);\n\n              _this.emitter.emit(ACTIONS.ERROR, _context23.t0);\n\n            case 29:\n            case \"end\":\n              return _context23.stop();\n          }\n        }\n      }, _callee23, null, [[0, 25]]);\n    }));\n\n    return function (_x30) {\n      return _ref23.apply(this, arguments);\n    };\n  }());\n\n  _defineProperty(this, \"createPairStake\", /*#__PURE__*/function () {\n    var _ref24 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee27(payload) {\n      var context, account, _web6, _payload$content, token0, token1, amount0, amount1, isStable, token, slippage, toki0, toki1, factoryContract, pairFor, allowance0TXID, allowance1TXID, depositTXID, createGaugeTXID, stakeAllowanceTXID, stakeTXID, allowance0, allowance1, gasPrice, allowanceCallsPromises, tokenContract, tokenPromise, _tokenContract, _tokenPromise, done, sendSlippage, sendAmount0, sendAmount1, deadline, sendAmount0Min, sendAmount1Min, func, params, sendValue, routerContract;\n\n      return _regeneratorRuntime.wrap(function _callee27$(_context27) {\n        while (1) {\n          switch (_context27.prev = _context27.next) {\n            case 0:\n              _context27.prev = 0;\n              context = _this;\n              account = stores.accountStore.getStore(\"account\");\n\n              if (account) {\n                _context27.next = 6;\n                break;\n              }\n\n              console.warn('account not found');\n              return _context27.abrupt(\"return\", null);\n\n            case 6:\n              _context27.next = 8;\n              return stores.accountStore.getWeb3Provider();\n\n            case 8:\n              _web6 = _context27.sent;\n\n              if (_web6) {\n                _context27.next = 12;\n                break;\n              }\n\n              console.warn('web3 not found');\n              return _context27.abrupt(\"return\", null);\n\n            case 12:\n              _payload$content = payload.content, token0 = _payload$content.token0, token1 = _payload$content.token1, amount0 = _payload$content.amount0, amount1 = _payload$content.amount1, isStable = _payload$content.isStable, token = _payload$content.token, slippage = _payload$content.slippage;\n              toki0 = token0.address;\n              toki1 = token1.address;\n\n              if (token0.address === 'FTM') {\n                toki0 = CONTRACTS.WFTM_ADDRESS;\n              }\n\n              if (token1.address === 'FTM') {\n                toki1 = CONTRACTS.WFTM_ADDRESS;\n              }\n\n              factoryContract = new _web6.eth.Contract(CONTRACTS.FACTORY_ABI, CONTRACTS.FACTORY_ADDRESS);\n              _context27.next = 20;\n              return factoryContract.methods.getPair(toki0, toki1, isStable).call();\n\n            case 20:\n              pairFor = _context27.sent;\n\n              if (!(pairFor && pairFor != ZERO_ADDRESS)) {\n                _context27.next = 26;\n                break;\n              }\n\n              _context27.next = 24;\n              return context.updatePairsCall(_web6, account);\n\n            case 24:\n              _this.emitter.emit(ACTIONS.ERROR, 'Pair already exists');\n\n              return _context27.abrupt(\"return\", null);\n\n            case 26:\n              // ADD TRNASCTIONS TO TRANSACTION QUEUE DISPLAY\n              allowance0TXID = _this.getTXUUID();\n              allowance1TXID = _this.getTXUUID();\n              depositTXID = _this.getTXUUID();\n              createGaugeTXID = _this.getTXUUID();\n              stakeAllowanceTXID = _this.getTXUUID();\n              stakeTXID = _this.getTXUUID(); //DOD A CHECK FOR IF THE POOL ALREADY EXISTS\n\n              _this.emitter.emit(ACTIONS.TX_ADDED, {\n                title: \"Create liquidity pool for \".concat(token0.symbol, \"/\").concat(token1.symbol),\n                type: 'Liquidity',\n                verb: 'Liquidity Pool Created',\n                transactions: [{\n                  uuid: allowance0TXID,\n                  description: \"Checking your \".concat(token0.symbol, \" allowance\"),\n                  status: 'WAITING'\n                }, {\n                  uuid: allowance1TXID,\n                  description: \"Checking your \".concat(token1.symbol, \" allowance\"),\n                  status: 'WAITING'\n                }, {\n                  uuid: depositTXID,\n                  description: \"Create liquidity pool\",\n                  status: 'WAITING'\n                }, {\n                  uuid: createGaugeTXID,\n                  description: \"Create gauge\",\n                  status: 'WAITING'\n                }, {\n                  uuid: stakeAllowanceTXID,\n                  description: \"Checking your pool allowance\",\n                  status: 'WAITING'\n                }, {\n                  uuid: stakeTXID,\n                  description: \"Stake LP tokens in the gauge\",\n                  status: 'WAITING'\n                }]\n              });\n\n              allowance0 = 0;\n              allowance1 = 0; // CHECK ALLOWANCES AND SET TX DISPLAY\n\n              if (!(token0.address !== 'FTM')) {\n                _context27.next = 42;\n                break;\n              }\n\n              _context27.next = 38;\n              return _this._getDepositAllowance(_web6, token0, account);\n\n            case 38:\n              allowance0 = _context27.sent;\n\n              if (BigNumber(allowance0).lt(amount0)) {\n                _this.emitter.emit(ACTIONS.TX_STATUS, {\n                  uuid: allowance0TXID,\n                  description: \"Allow the router to spend your \".concat(token0.symbol)\n                });\n              } else {\n                _this.emitter.emit(ACTIONS.TX_STATUS, {\n                  uuid: allowance0TXID,\n                  description: \"Allowance on \".concat(token0.symbol, \" sufficient\"),\n                  status: 'DONE'\n                });\n              }\n\n              _context27.next = 44;\n              break;\n\n            case 42:\n              allowance0 = MAX_UINT256;\n\n              _this.emitter.emit(ACTIONS.TX_STATUS, {\n                uuid: allowance0TXID,\n                description: \"Allowance on \".concat(token0.symbol, \" sufficient\"),\n                status: 'DONE'\n              });\n\n            case 44:\n              if (!(token1.address !== 'FTM')) {\n                _context27.next = 51;\n                break;\n              }\n\n              _context27.next = 47;\n              return _this._getDepositAllowance(_web6, token1, account);\n\n            case 47:\n              allowance1 = _context27.sent;\n\n              if (BigNumber(allowance1).lt(amount1)) {\n                _this.emitter.emit(ACTIONS.TX_STATUS, {\n                  uuid: allowance1TXID,\n                  description: \"Allow the router to spend your \".concat(token1.symbol)\n                });\n              } else {\n                _this.emitter.emit(ACTIONS.TX_STATUS, {\n                  uuid: allowance1TXID,\n                  description: \"Allowance on \".concat(token1.symbol, \" sufficient\"),\n                  status: 'DONE'\n                });\n              }\n\n              _context27.next = 53;\n              break;\n\n            case 51:\n              allowance1 = MAX_UINT256;\n\n              _this.emitter.emit(ACTIONS.TX_STATUS, {\n                uuid: allowance1TXID,\n                description: \"Allowance on \".concat(token1.symbol, \" sufficient\"),\n                status: 'DONE'\n              });\n\n            case 53:\n              _context27.next = 55;\n              return stores.accountStore.getGasPrice();\n\n            case 55:\n              gasPrice = _context27.sent;\n              allowanceCallsPromises = []; // SUBMIT REQUIRED ALLOWANCE TRANSACTIONS\n\n              if (BigNumber(allowance0).lt(amount0)) {\n                tokenContract = new _web6.eth.Contract(CONTRACTS.ERC20_ABI, token0.address);\n                tokenPromise = new Promise(function (resolve, reject) {\n                  context._callContractWait(_web6, tokenContract, 'approve', [CONTRACTS.ROUTER_ADDRESS, MAX_UINT256], account, gasPrice, null, null, allowance0TXID, function (err) {\n                    if (err) {\n                      reject(err);\n                      return;\n                    }\n\n                    resolve();\n                  });\n                });\n                allowanceCallsPromises.push(tokenPromise);\n              }\n\n              if (BigNumber(allowance1).lt(amount1)) {\n                _tokenContract = new _web6.eth.Contract(CONTRACTS.ERC20_ABI, token1.address);\n                _tokenPromise = new Promise(function (resolve, reject) {\n                  context._callContractWait(_web6, _tokenContract, 'approve', [CONTRACTS.ROUTER_ADDRESS, MAX_UINT256], account, gasPrice, null, null, allowance1TXID, function (err) {\n                    if (err) {\n                      reject(err);\n                      return;\n                    }\n\n                    resolve();\n                  });\n                });\n                allowanceCallsPromises.push(_tokenPromise);\n              }\n\n              _context27.next = 61;\n              return Promise.all(allowanceCallsPromises);\n\n            case 61:\n              done = _context27.sent;\n              // SUBMIT DEPOSIT TRANSACTION\n              sendSlippage = BigNumber(100).minus(slippage).div(100);\n              sendAmount0 = BigNumber(amount0).times(Math.pow(10, token0.decimals)).toFixed(0);\n              sendAmount1 = BigNumber(amount1).times(Math.pow(10, token1.decimals)).toFixed(0);\n              deadline = '' + moment().add(600, 'seconds').unix();\n              sendAmount0Min = BigNumber(amount0).times(sendSlippage).times(Math.pow(10, token0.decimals)).toFixed(0);\n              sendAmount1Min = BigNumber(amount1).times(sendSlippage).times(Math.pow(10, token1.decimals)).toFixed(0);\n              func = 'addLiquidity';\n              params = [token0.address, token1.address, isStable, sendAmount0, sendAmount1, sendAmount0Min, sendAmount1Min, account.address, deadline];\n              sendValue = null;\n\n              if (token0.address === 'FTM') {\n                func = 'addLiquidityFTM';\n                params = [token1.address, isStable, sendAmount1, sendAmount1Min, sendAmount0Min, account.address, deadline];\n                sendValue = sendAmount0;\n              }\n\n              if (token1.address === 'FTM') {\n                func = 'addLiquidityFTM';\n                params = [token0.address, isStable, sendAmount0, sendAmount0Min, sendAmount1Min, account.address, deadline];\n                sendValue = sendAmount1;\n              }\n\n              routerContract = new _web6.eth.Contract(CONTRACTS.ROUTER_ABI, CONTRACTS.ROUTER_ADDRESS);\n\n              _this._callContractWait(_web6, routerContract, func, params, account, gasPrice, null, null, depositTXID, /*#__PURE__*/function () {\n                var _ref25 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee26(err) {\n                  var tok0, tok1, pairFor, gaugesContract;\n                  return _regeneratorRuntime.wrap(function _callee26$(_context26) {\n                    while (1) {\n                      switch (_context26.prev = _context26.next) {\n                        case 0:\n                          if (!err) {\n                            _context26.next = 2;\n                            break;\n                          }\n\n                          return _context26.abrupt(\"return\", _this.emitter.emit(ACTIONS.ERROR, err));\n\n                        case 2:\n                          // GET PAIR FOR NEWLY CREATED LIQUIDITY POOL\n                          tok0 = token0.address;\n                          tok1 = token1.address;\n\n                          if (token0.address === 'FTM') {\n                            tok0 = CONTRACTS.WFTM_ADDRESS;\n                          }\n\n                          if (token1.address === 'FTM') {\n                            tok1 = CONTRACTS.WFTM_ADDRESS;\n                          }\n\n                          _context26.next = 8;\n                          return factoryContract.methods.getPair(tok0, tok1, isStable).call();\n\n                        case 8:\n                          pairFor = _context26.sent;\n                          // SUBMIT CREATE GAUGE TRANSACTION\n                          gaugesContract = new _web6.eth.Contract(CONTRACTS.VOTER_ABI, CONTRACTS.VOTER_ADDRESS);\n\n                          _this._callContractWait(_web6, gaugesContract, 'createGauge', [pairFor], account, gasPrice, null, null, createGaugeTXID, /*#__PURE__*/function () {\n                            var _ref26 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee25(err) {\n                              var gaugeAddress, pairContract, gaugeContract, balanceOf, pair, stakeAllowance, allowanceCallsPromise, stakePromise, done, sendTok;\n                              return _regeneratorRuntime.wrap(function _callee25$(_context25) {\n                                while (1) {\n                                  switch (_context25.prev = _context25.next) {\n                                    case 0:\n                                      if (!err) {\n                                        _context25.next = 2;\n                                        break;\n                                      }\n\n                                      return _context25.abrupt(\"return\", _this.emitter.emit(ACTIONS.ERROR, err));\n\n                                    case 2:\n                                      _context25.next = 4;\n                                      return gaugesContract.methods.gauges(pairFor).call();\n\n                                    case 4:\n                                      gaugeAddress = _context25.sent;\n                                      pairContract = new _web6.eth.Contract(CONTRACTS.PAIR_ABI, pairFor);\n                                      gaugeContract = new _web6.eth.Contract(CONTRACTS.GAUGE_ABI, gaugeAddress);\n                                      _context25.next = 9;\n                                      return pairContract.methods.balanceOf(account.address).call();\n\n                                    case 9:\n                                      balanceOf = _context25.sent;\n                                      _context25.next = 12;\n                                      return _this.getPairByAddress(pairFor);\n\n                                    case 12:\n                                      pair = _context25.sent;\n                                      _context25.next = 15;\n                                      return _this._getStakeAllowance(_web6, pair, account);\n\n                                    case 15:\n                                      stakeAllowance = _context25.sent;\n\n                                      if (BigNumber(stakeAllowance).lt(BigNumber(balanceOf).div(Math.pow(10, pair.decimals)).toFixed(pair.decimals))) {\n                                        _this.emitter.emit(ACTIONS.TX_STATUS, {\n                                          uuid: stakeAllowanceTXID,\n                                          description: \"Allow the router to spend your \".concat(pair.symbol)\n                                        });\n                                      } else {\n                                        _this.emitter.emit(ACTIONS.TX_STATUS, {\n                                          uuid: stakeAllowanceTXID,\n                                          description: \"Allowance on \".concat(pair.symbol, \" sufficient\"),\n                                          status: 'DONE'\n                                        });\n                                      }\n\n                                      allowanceCallsPromise = [];\n\n                                      if (BigNumber(stakeAllowance).lt(BigNumber(balanceOf).div(Math.pow(10, pair.decimals)).toFixed(pair.decimals))) {\n                                        stakePromise = new Promise(function (resolve, reject) {\n                                          context._callContractWait(_web6, pairContract, 'approve', [pair.gauge.address, MAX_UINT256], account, gasPrice, null, null, stakeAllowanceTXID, function (err) {\n                                            if (err) {\n                                              reject(err);\n                                              return;\n                                            }\n\n                                            resolve();\n                                          });\n                                        });\n                                        allowanceCallsPromise.push(stakePromise);\n                                      }\n\n                                      _context25.next = 21;\n                                      return Promise.all(allowanceCallsPromise);\n\n                                    case 21:\n                                      done = _context25.sent;\n                                      sendTok = '0';\n\n                                      if (token && token.id) {\n                                        sendTok = token.id;\n                                      }\n\n                                      _this._callContractWait(_web6, gaugeContract, 'deposit', [balanceOf, sendTok], account, gasPrice, null, null, stakeTXID, /*#__PURE__*/function () {\n                                        var _ref27 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee24(err) {\n                                          return _regeneratorRuntime.wrap(function _callee24$(_context24) {\n                                            while (1) {\n                                              switch (_context24.prev = _context24.next) {\n                                                case 0:\n                                                  if (!err) {\n                                                    _context24.next = 2;\n                                                    break;\n                                                  }\n\n                                                  return _context24.abrupt(\"return\", _this.emitter.emit(ACTIONS.ERROR, err));\n\n                                                case 2:\n                                                  _context24.next = 4;\n                                                  return context.updatePairsCall(_web6, account);\n\n                                                case 4:\n                                                  _this.emitter.emit(ACTIONS.PAIR_CREATED, pairFor);\n\n                                                case 5:\n                                                case \"end\":\n                                                  return _context24.stop();\n                                              }\n                                            }\n                                          }, _callee24);\n                                        }));\n\n                                        return function (_x34) {\n                                          return _ref27.apply(this, arguments);\n                                        };\n                                      }());\n\n                                    case 25:\n                                    case \"end\":\n                                      return _context25.stop();\n                                  }\n                                }\n                              }, _callee25);\n                            }));\n\n                            return function (_x33) {\n                              return _ref26.apply(this, arguments);\n                            };\n                          }());\n\n                        case 11:\n                        case \"end\":\n                          return _context26.stop();\n                      }\n                    }\n                  }, _callee26);\n                }));\n\n                return function (_x32) {\n                  return _ref25.apply(this, arguments);\n                };\n              }(), null, sendValue);\n\n              _context27.next = 81;\n              break;\n\n            case 77:\n              _context27.prev = 77;\n              _context27.t0 = _context27[\"catch\"](0);\n              console.error(_context27.t0);\n\n              _this.emitter.emit(ACTIONS.ERROR, _context27.t0);\n\n            case 81:\n            case \"end\":\n              return _context27.stop();\n          }\n        }\n      }, _callee27, null, [[0, 77]]);\n    }));\n\n    return function (_x31) {\n      return _ref24.apply(this, arguments);\n    };\n  }());\n\n  _defineProperty(this, \"createPairDeposit\", /*#__PURE__*/function () {\n    var _ref28 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee30(payload) {\n      var context, account, _web7, _payload$content2, token0, token1, amount0, amount1, isStable, slippage, toki0, toki1, factoryContract, pairFor, allowance0TXID, allowance1TXID, depositTXID, createGaugeTXID, allowance0, allowance1, gasPrice, allowanceCallsPromises, tokenContract, tokenPromise, _tokenContract2, _tokenPromise2, done, sendSlippage, sendAmount0, sendAmount1, deadline, sendAmount0Min, sendAmount1Min, func, params, sendValue, routerContract;\n\n      return _regeneratorRuntime.wrap(function _callee30$(_context30) {\n        while (1) {\n          switch (_context30.prev = _context30.next) {\n            case 0:\n              _context30.prev = 0;\n              context = _this;\n              account = stores.accountStore.getStore(\"account\");\n\n              if (account) {\n                _context30.next = 6;\n                break;\n              }\n\n              console.warn('account not found');\n              return _context30.abrupt(\"return\", null);\n\n            case 6:\n              _context30.next = 8;\n              return stores.accountStore.getWeb3Provider();\n\n            case 8:\n              _web7 = _context30.sent;\n\n              if (_web7) {\n                _context30.next = 12;\n                break;\n              }\n\n              console.warn('web3 not found');\n              return _context30.abrupt(\"return\", null);\n\n            case 12:\n              _payload$content2 = payload.content, token0 = _payload$content2.token0, token1 = _payload$content2.token1, amount0 = _payload$content2.amount0, amount1 = _payload$content2.amount1, isStable = _payload$content2.isStable, slippage = _payload$content2.slippage;\n              toki0 = token0.address;\n              toki1 = token1.address;\n\n              if (token0.address === 'FTM') {\n                toki0 = CONTRACTS.WFTM_ADDRESS;\n              }\n\n              if (token1.address === 'FTM') {\n                toki1 = CONTRACTS.WFTM_ADDRESS;\n              }\n\n              factoryContract = new _web7.eth.Contract(CONTRACTS.FACTORY_ABI, CONTRACTS.FACTORY_ADDRESS);\n              _context30.next = 20;\n              return factoryContract.methods.getPair(toki0, toki1, isStable).call();\n\n            case 20:\n              pairFor = _context30.sent;\n\n              if (!(pairFor && pairFor != ZERO_ADDRESS)) {\n                _context30.next = 26;\n                break;\n              }\n\n              _context30.next = 24;\n              return context.updatePairsCall(_web7, account);\n\n            case 24:\n              _this.emitter.emit(ACTIONS.ERROR, 'Pair already exists');\n\n              return _context30.abrupt(\"return\", null);\n\n            case 26:\n              // ADD TRNASCTIONS TO TRANSACTION QUEUE DISPLAY\n              allowance0TXID = _this.getTXUUID();\n              allowance1TXID = _this.getTXUUID();\n              depositTXID = _this.getTXUUID();\n              createGaugeTXID = _this.getTXUUID(); //DOD A CHECK FOR IF THE POOL ALREADY EXISTS\n\n              _this.emitter.emit(ACTIONS.TX_ADDED, {\n                title: \"Create liquidity pool for \".concat(token0.symbol, \"/\").concat(token1.symbol),\n                type: 'Liquidity',\n                verb: 'Liquidity Pool Created',\n                transactions: [{\n                  uuid: allowance0TXID,\n                  description: \"Checking your \".concat(token0.symbol, \" allowance\"),\n                  status: 'WAITING'\n                }, {\n                  uuid: allowance1TXID,\n                  description: \"Checking your \".concat(token1.symbol, \" allowance\"),\n                  status: 'WAITING'\n                }, {\n                  uuid: depositTXID,\n                  description: \"Create liquidity pool\",\n                  status: 'WAITING'\n                }, {\n                  uuid: createGaugeTXID,\n                  description: \"Create gauge\",\n                  status: 'WAITING'\n                }]\n              });\n\n              allowance0 = 0;\n              allowance1 = 0; // CHECK ALLOWANCES AND SET TX DISPLAY\n\n              if (!(token0.address !== 'FTM')) {\n                _context30.next = 40;\n                break;\n              }\n\n              _context30.next = 36;\n              return _this._getDepositAllowance(_web7, token0, account);\n\n            case 36:\n              allowance0 = _context30.sent;\n\n              if (BigNumber(allowance0).lt(amount0)) {\n                _this.emitter.emit(ACTIONS.TX_STATUS, {\n                  uuid: allowance0TXID,\n                  description: \"Allow the router to spend your \".concat(token0.symbol)\n                });\n              } else {\n                _this.emitter.emit(ACTIONS.TX_STATUS, {\n                  uuid: allowance0TXID,\n                  description: \"Allowance on \".concat(token0.symbol, \" sufficient\"),\n                  status: 'DONE'\n                });\n              }\n\n              _context30.next = 42;\n              break;\n\n            case 40:\n              allowance0 = MAX_UINT256;\n\n              _this.emitter.emit(ACTIONS.TX_STATUS, {\n                uuid: allowance0TXID,\n                description: \"Allowance on \".concat(token0.symbol, \" sufficient\"),\n                status: 'DONE'\n              });\n\n            case 42:\n              if (!(token1.address !== 'FTM')) {\n                _context30.next = 49;\n                break;\n              }\n\n              _context30.next = 45;\n              return _this._getDepositAllowance(_web7, token1, account);\n\n            case 45:\n              allowance1 = _context30.sent;\n\n              if (BigNumber(allowance1).lt(amount1)) {\n                _this.emitter.emit(ACTIONS.TX_STATUS, {\n                  uuid: allowance1TXID,\n                  description: \"Allow the router to spend your \".concat(token1.symbol)\n                });\n              } else {\n                _this.emitter.emit(ACTIONS.TX_STATUS, {\n                  uuid: allowance1TXID,\n                  description: \"Allowance on \".concat(token1.symbol, \" sufficient\"),\n                  status: 'DONE'\n                });\n              }\n\n              _context30.next = 51;\n              break;\n\n            case 49:\n              allowance1 = MAX_UINT256;\n\n              _this.emitter.emit(ACTIONS.TX_STATUS, {\n                uuid: allowance1TXID,\n                description: \"Allowance on \".concat(token1.symbol, \" sufficient\"),\n                status: 'DONE'\n              });\n\n            case 51:\n              _context30.next = 53;\n              return stores.accountStore.getGasPrice();\n\n            case 53:\n              gasPrice = _context30.sent;\n              allowanceCallsPromises = []; // SUBMIT REQUIRED ALLOWANCE TRANSACTIONS\n\n              if (BigNumber(allowance0).lt(amount0)) {\n                tokenContract = new _web7.eth.Contract(CONTRACTS.ERC20_ABI, token0.address);\n                tokenPromise = new Promise(function (resolve, reject) {\n                  context._callContractWait(_web7, tokenContract, 'approve', [CONTRACTS.ROUTER_ADDRESS, MAX_UINT256], account, gasPrice, null, null, allowance0TXID, function (err) {\n                    if (err) {\n                      reject(err);\n                      return;\n                    }\n\n                    resolve();\n                  });\n                });\n                allowanceCallsPromises.push(tokenPromise);\n              }\n\n              if (BigNumber(allowance1).lt(amount1)) {\n                _tokenContract2 = new _web7.eth.Contract(CONTRACTS.ERC20_ABI, token1.address);\n                _tokenPromise2 = new Promise(function (resolve, reject) {\n                  context._callContractWait(_web7, _tokenContract2, 'approve', [CONTRACTS.ROUTER_ADDRESS, MAX_UINT256], account, gasPrice, null, null, allowance1TXID, function (err) {\n                    if (err) {\n                      reject(err);\n                      return;\n                    }\n\n                    resolve();\n                  });\n                });\n                allowanceCallsPromises.push(_tokenPromise2);\n              }\n\n              _context30.next = 59;\n              return Promise.all(allowanceCallsPromises);\n\n            case 59:\n              done = _context30.sent;\n              // SUBMIT DEPOSIT TRANSACTION\n              sendSlippage = BigNumber(100).minus(slippage).div(100);\n              sendAmount0 = BigNumber(amount0).times(Math.pow(10, token0.decimals)).toFixed(0);\n              sendAmount1 = BigNumber(amount1).times(Math.pow(10, token1.decimals)).toFixed(0);\n              deadline = '' + moment().add(600, 'seconds').unix();\n              sendAmount0Min = BigNumber(amount0).times(sendSlippage).times(Math.pow(10, token0.decimals)).toFixed(0);\n              sendAmount1Min = BigNumber(amount1).times(sendSlippage).times(Math.pow(10, token1.decimals)).toFixed(0);\n              func = 'addLiquidity';\n              params = [token0.address, token1.address, isStable, sendAmount0, sendAmount1, sendAmount0Min, sendAmount1Min, account.address, deadline];\n              sendValue = null;\n\n              if (token0.address === 'FTM') {\n                func = 'addLiquidityFTM';\n                params = [token1.address, isStable, sendAmount1, sendAmount1Min, sendAmount0Min, account.address, deadline];\n                sendValue = sendAmount0;\n              }\n\n              if (token1.address === 'FTM') {\n                func = 'addLiquidityFTM';\n                params = [token0.address, isStable, sendAmount0, sendAmount0Min, sendAmount1Min, account.address, deadline];\n                sendValue = sendAmount1;\n              }\n\n              routerContract = new _web7.eth.Contract(CONTRACTS.ROUTER_ABI, CONTRACTS.ROUTER_ADDRESS);\n\n              _this._callContractWait(_web7, routerContract, func, params, account, gasPrice, null, null, depositTXID, /*#__PURE__*/function () {\n                var _ref29 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee29(err) {\n                  var tok0, tok1, pairFor, gaugesContract;\n                  return _regeneratorRuntime.wrap(function _callee29$(_context29) {\n                    while (1) {\n                      switch (_context29.prev = _context29.next) {\n                        case 0:\n                          if (!err) {\n                            _context29.next = 2;\n                            break;\n                          }\n\n                          return _context29.abrupt(\"return\", _this.emitter.emit(ACTIONS.ERROR, err));\n\n                        case 2:\n                          // GET PAIR FOR NEWLY CREATED LIQUIDITY POOL\n                          tok0 = token0.address;\n                          tok1 = token1.address;\n\n                          if (token0.address === 'FTM') {\n                            tok0 = CONTRACTS.WFTM_ADDRESS;\n                          }\n\n                          if (token1.address === 'FTM') {\n                            tok1 = CONTRACTS.WFTM_ADDRESS;\n                          }\n\n                          _context29.next = 8;\n                          return factoryContract.methods.getPair(tok0, tok1, isStable).call();\n\n                        case 8:\n                          pairFor = _context29.sent;\n                          // SUBMIT CREATE GAUGE TRANSACTION\n                          gaugesContract = new _web7.eth.Contract(CONTRACTS.VOTER_ABI, CONTRACTS.VOTER_ADDRESS);\n\n                          _this._callContractWait(_web7, gaugesContract, 'createGauge', [pairFor], account, gasPrice, null, null, createGaugeTXID, /*#__PURE__*/function () {\n                            var _ref30 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee28(err) {\n                              return _regeneratorRuntime.wrap(function _callee28$(_context28) {\n                                while (1) {\n                                  switch (_context28.prev = _context28.next) {\n                                    case 0:\n                                      if (!err) {\n                                        _context28.next = 2;\n                                        break;\n                                      }\n\n                                      return _context28.abrupt(\"return\", _this.emitter.emit(ACTIONS.ERROR, err));\n\n                                    case 2:\n                                      _context28.next = 4;\n                                      return context.updatePairsCall(_web7, account);\n\n                                    case 4:\n                                      _this.emitter.emit(ACTIONS.PAIR_CREATED, pairFor);\n\n                                    case 5:\n                                    case \"end\":\n                                      return _context28.stop();\n                                  }\n                                }\n                              }, _callee28);\n                            }));\n\n                            return function (_x37) {\n                              return _ref30.apply(this, arguments);\n                            };\n                          }());\n\n                        case 11:\n                        case \"end\":\n                          return _context29.stop();\n                      }\n                    }\n                  }, _callee29);\n                }));\n\n                return function (_x36) {\n                  return _ref29.apply(this, arguments);\n                };\n              }(), null, sendValue);\n\n              _context30.next = 79;\n              break;\n\n            case 75:\n              _context30.prev = 75;\n              _context30.t0 = _context30[\"catch\"](0);\n              console.error(_context30.t0);\n\n              _this.emitter.emit(ACTIONS.ERROR, _context30.t0);\n\n            case 79:\n            case \"end\":\n              return _context30.stop();\n          }\n        }\n      }, _callee30, null, [[0, 75]]);\n    }));\n\n    return function (_x35) {\n      return _ref28.apply(this, arguments);\n    };\n  }());\n\n  _defineProperty(this, \"updatePairsCall\", /*#__PURE__*/function () {\n    var _ref31 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee31(web3, account) {\n      var response, pairsCall;\n      return _regeneratorRuntime.wrap(function _callee31$(_context31) {\n        while (1) {\n          switch (_context31.prev = _context31.next) {\n            case 0:\n              _context31.prev = 0;\n              _context31.next = 3;\n              return fetch(\"\".concat(process.env.NEXT_PUBLIC_API, \"/api/v1/updatePairs\"), {\n                method: 'get',\n                headers: {\n                  'Authorization': \"Basic \".concat(process.env.NEXT_PUBLIC_API_TOKEN)\n                }\n              });\n\n            case 3:\n              response = _context31.sent;\n              _context31.next = 6;\n              return response.json();\n\n            case 6:\n              pairsCall = _context31.sent;\n\n              _this.setStore({\n                pairs: pairsCall.data\n              });\n\n              _context31.next = 10;\n              return _this._getPairInfo(web3, account, pairsCall.data);\n\n            case 10:\n              _context31.next = 15;\n              break;\n\n            case 12:\n              _context31.prev = 12;\n              _context31.t0 = _context31[\"catch\"](0);\n              console.log(_context31.t0);\n\n            case 15:\n            case \"end\":\n              return _context31.stop();\n          }\n        }\n      }, _callee31, null, [[0, 12]]);\n    }));\n\n    return function (_x38, _x39) {\n      return _ref31.apply(this, arguments);\n    };\n  }());\n\n  _defineProperty(this, \"sleep\", function (ms) {\n    return new Promise(function (resolve) {\n      return setTimeout(resolve, ms);\n    });\n  });\n\n  _defineProperty(this, \"getTXUUID\", function () {\n    return uuidv4();\n  });\n\n  _defineProperty(this, \"addLiquidity\", /*#__PURE__*/function () {\n    var _ref32 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee32(payload) {\n      var context, account, _web8, _payload$content3, token0, token1, amount0, amount1, minLiquidity, pair, slippage, allowance0TXID, allowance1TXID, depositTXID, allowance0, allowance1, gasPrice, allowanceCallsPromises, tokenContract, tokenPromise, _tokenContract3, _tokenPromise3, done, sendSlippage, sendAmount0, sendAmount1, deadline, sendAmount0Min, sendAmount1Min, routerContract, func, params, sendValue;\n\n      return _regeneratorRuntime.wrap(function _callee32$(_context32) {\n        while (1) {\n          switch (_context32.prev = _context32.next) {\n            case 0:\n              _context32.prev = 0;\n              context = _this;\n              account = stores.accountStore.getStore(\"account\");\n\n              if (account) {\n                _context32.next = 6;\n                break;\n              }\n\n              console.warn('account not found');\n              return _context32.abrupt(\"return\", null);\n\n            case 6:\n              _context32.next = 8;\n              return stores.accountStore.getWeb3Provider();\n\n            case 8:\n              _web8 = _context32.sent;\n\n              if (_web8) {\n                _context32.next = 12;\n                break;\n              }\n\n              console.warn('web3 not found');\n              return _context32.abrupt(\"return\", null);\n\n            case 12:\n              _payload$content3 = payload.content, token0 = _payload$content3.token0, token1 = _payload$content3.token1, amount0 = _payload$content3.amount0, amount1 = _payload$content3.amount1, minLiquidity = _payload$content3.minLiquidity, pair = _payload$content3.pair, slippage = _payload$content3.slippage; // ADD TRNASCTIONS TO TRANSACTION QUEUE DISPLAY\n\n              allowance0TXID = _this.getTXUUID();\n              allowance1TXID = _this.getTXUUID();\n              depositTXID = _this.getTXUUID();\n\n              _this.emitter.emit(ACTIONS.TX_ADDED, {\n                title: \"Add liquidity to \".concat(pair.symbol),\n                verb: 'Liquidity Added',\n                type: 'Liquidity',\n                transactions: [{\n                  uuid: allowance0TXID,\n                  description: \"Checking your \".concat(token0.symbol, \" allowance\"),\n                  status: 'WAITING'\n                }, {\n                  uuid: allowance1TXID,\n                  description: \"Checking your \".concat(token1.symbol, \" allowance\"),\n                  status: 'WAITING'\n                }, {\n                  uuid: depositTXID,\n                  description: \"Deposit tokens in the pool\",\n                  status: 'WAITING'\n                }]\n              });\n\n              allowance0 = 0;\n              allowance1 = 0; // CHECK ALLOWANCES AND SET TX DISPLAY\n\n              if (!(token0.address !== 'FTM')) {\n                _context32.next = 26;\n                break;\n              }\n\n              _context32.next = 22;\n              return _this._getDepositAllowance(_web8, token0, account);\n\n            case 22:\n              allowance0 = _context32.sent;\n\n              if (BigNumber(allowance0).lt(amount0)) {\n                _this.emitter.emit(ACTIONS.TX_STATUS, {\n                  uuid: allowance0TXID,\n                  description: \"Allow the router to spend your \".concat(token0.symbol)\n                });\n              } else {\n                _this.emitter.emit(ACTIONS.TX_STATUS, {\n                  uuid: allowance0TXID,\n                  description: \"Allowance on \".concat(token0.symbol, \" sufficient\"),\n                  status: 'DONE'\n                });\n              }\n\n              _context32.next = 28;\n              break;\n\n            case 26:\n              allowance0 = MAX_UINT256;\n\n              _this.emitter.emit(ACTIONS.TX_STATUS, {\n                uuid: allowance0TXID,\n                description: \"Allowance on \".concat(token0.symbol, \" sufficient\"),\n                status: 'DONE'\n              });\n\n            case 28:\n              if (!(token1.address !== 'FTM')) {\n                _context32.next = 35;\n                break;\n              }\n\n              _context32.next = 31;\n              return _this._getDepositAllowance(_web8, token1, account);\n\n            case 31:\n              allowance1 = _context32.sent;\n\n              if (BigNumber(allowance1).lt(amount1)) {\n                _this.emitter.emit(ACTIONS.TX_STATUS, {\n                  uuid: allowance1TXID,\n                  description: \"Allow the router to spend your \".concat(token1.symbol)\n                });\n              } else {\n                _this.emitter.emit(ACTIONS.TX_STATUS, {\n                  uuid: allowance1TXID,\n                  description: \"Allowance on \".concat(token1.symbol, \" sufficient\"),\n                  status: 'DONE'\n                });\n              }\n\n              _context32.next = 37;\n              break;\n\n            case 35:\n              allowance1 = MAX_UINT256;\n\n              _this.emitter.emit(ACTIONS.TX_STATUS, {\n                uuid: allowance1TXID,\n                description: \"Allowance on \".concat(token1.symbol, \" sufficient\"),\n                status: 'DONE'\n              });\n\n            case 37:\n              _context32.next = 39;\n              return stores.accountStore.getGasPrice();\n\n            case 39:\n              gasPrice = _context32.sent;\n              allowanceCallsPromises = []; // SUBMIT REQUIRED ALLOWANCE TRANSACTIONS\n\n              if (BigNumber(allowance0).lt(amount0)) {\n                tokenContract = new _web8.eth.Contract(CONTRACTS.ERC20_ABI, token0.address);\n                tokenPromise = new Promise(function (resolve, reject) {\n                  context._callContractWait(_web8, tokenContract, 'approve', [CONTRACTS.ROUTER_ADDRESS, MAX_UINT256], account, gasPrice, null, null, allowance0TXID, function (err) {\n                    if (err) {\n                      console.log(err);\n                      reject(err);\n                      return;\n                    }\n\n                    resolve();\n                  });\n                });\n                allowanceCallsPromises.push(tokenPromise);\n              }\n\n              if (BigNumber(allowance1).lt(amount1)) {\n                _tokenContract3 = new _web8.eth.Contract(CONTRACTS.ERC20_ABI, token1.address);\n                _tokenPromise3 = new Promise(function (resolve, reject) {\n                  context._callContractWait(_web8, _tokenContract3, 'approve', [CONTRACTS.ROUTER_ADDRESS, MAX_UINT256], account, gasPrice, null, null, allowance1TXID, function (err) {\n                    if (err) {\n                      console.log(err);\n                      reject(err);\n                      return;\n                    }\n\n                    resolve();\n                  });\n                });\n                allowanceCallsPromises.push(_tokenPromise3);\n              }\n\n              _context32.next = 45;\n              return Promise.all(allowanceCallsPromises);\n\n            case 45:\n              done = _context32.sent;\n              // SUBMIT DEPOSIT TRANSACTION\n              sendSlippage = BigNumber(100).minus(slippage).div(100);\n              sendAmount0 = BigNumber(amount0).times(Math.pow(10, token0.decimals)).toFixed(0);\n              sendAmount1 = BigNumber(amount1).times(Math.pow(10, token1.decimals)).toFixed(0);\n              deadline = '' + moment().add(600, 'seconds').unix();\n              sendAmount0Min = BigNumber(amount0).times(sendSlippage).times(Math.pow(10, token0.decimals)).toFixed(0);\n              sendAmount1Min = BigNumber(amount1).times(sendSlippage).times(Math.pow(10, token1.decimals)).toFixed(0);\n              routerContract = new _web8.eth.Contract(CONTRACTS.ROUTER_ABI, CONTRACTS.ROUTER_ADDRESS);\n              func = 'addLiquidity';\n              params = [token0.address, token1.address, pair.isStable, sendAmount0, sendAmount1, sendAmount0Min, sendAmount1Min, account.address, deadline];\n              sendValue = null;\n\n              if (token0.address === 'FTM') {\n                func = 'addLiquidityFTM';\n                params = [token1.address, pair.isStable, sendAmount1, sendAmount1Min, sendAmount0Min, account.address, deadline];\n                sendValue = sendAmount0;\n              }\n\n              if (token1.address === 'FTM') {\n                func = 'addLiquidityFTM';\n                params = [token0.address, pair.isStable, sendAmount0, sendAmount0Min, sendAmount1Min, account.address, deadline];\n                sendValue = sendAmount1;\n              }\n\n              _this._callContractWait(_web8, routerContract, func, params, account, gasPrice, null, null, depositTXID, function (err) {\n                if (err) {\n                  return _this.emitter.emit(ACTIONS.ERROR, err);\n                }\n\n                _this._getPairInfo(_web8, account);\n\n                _this.emitter.emit(ACTIONS.LIQUIDITY_ADDED);\n              }, null, sendValue);\n\n              _context32.next = 65;\n              break;\n\n            case 61:\n              _context32.prev = 61;\n              _context32.t0 = _context32[\"catch\"](0);\n              console.error(_context32.t0);\n\n              _this.emitter.emit(ACTIONS.ERROR, _context32.t0);\n\n            case 65:\n            case \"end\":\n              return _context32.stop();\n          }\n        }\n      }, _callee32, null, [[0, 61]]);\n    }));\n\n    return function (_x40) {\n      return _ref32.apply(this, arguments);\n    };\n  }());\n\n  _defineProperty(this, \"stakeLiquidity\", /*#__PURE__*/function () {\n    var _ref33 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee33(payload) {\n      var context, account, _web9, _payload$content4, pair, token, stakeAllowanceTXID, stakeTXID, stakeAllowance, pairContract, balanceOf, gasPrice, allowanceCallsPromises, stakePromise, done, gaugeContract, sendTok;\n\n      return _regeneratorRuntime.wrap(function _callee33$(_context33) {\n        while (1) {\n          switch (_context33.prev = _context33.next) {\n            case 0:\n              _context33.prev = 0;\n              context = _this;\n              account = stores.accountStore.getStore(\"account\");\n\n              if (account) {\n                _context33.next = 6;\n                break;\n              }\n\n              console.warn('account not found');\n              return _context33.abrupt(\"return\", null);\n\n            case 6:\n              _context33.next = 8;\n              return stores.accountStore.getWeb3Provider();\n\n            case 8:\n              _web9 = _context33.sent;\n\n              if (_web9) {\n                _context33.next = 12;\n                break;\n              }\n\n              console.warn('web3 not found');\n              return _context33.abrupt(\"return\", null);\n\n            case 12:\n              _payload$content4 = payload.content, pair = _payload$content4.pair, token = _payload$content4.token;\n              stakeAllowanceTXID = _this.getTXUUID();\n              stakeTXID = _this.getTXUUID();\n\n              _this.emitter.emit(ACTIONS.TX_ADDED, {\n                title: \"Stake \".concat(pair.symbol, \" in the gauge\"),\n                type: 'Liquidity',\n                verb: 'Liquidity Staked',\n                transactions: [{\n                  uuid: stakeAllowanceTXID,\n                  description: \"Checking your \".concat(pair.symbol, \" allowance\"),\n                  status: 'WAITING'\n                }, {\n                  uuid: stakeTXID,\n                  description: \"Stake LP tokens in the gauge\",\n                  status: 'WAITING'\n                }]\n              });\n\n              _context33.next = 18;\n              return _this._getStakeAllowance(_web9, pair, account);\n\n            case 18:\n              stakeAllowance = _context33.sent;\n              pairContract = new _web9.eth.Contract(CONTRACTS.PAIR_ABI, pair.address);\n              _context33.next = 22;\n              return pairContract.methods.balanceOf(account.address).call();\n\n            case 22:\n              balanceOf = _context33.sent;\n\n              if (BigNumber(stakeAllowance).lt(BigNumber(balanceOf).div(Math.pow(10, pair.decimals)).toFixed(pair.decimals))) {\n                _this.emitter.emit(ACTIONS.TX_STATUS, {\n                  uuid: stakeAllowanceTXID,\n                  description: \"Allow the router to spend your \".concat(pair.symbol)\n                });\n              } else {\n                _this.emitter.emit(ACTIONS.TX_STATUS, {\n                  uuid: stakeAllowanceTXID,\n                  description: \"Allowance on \".concat(pair.symbol, \" sufficient\"),\n                  status: 'DONE'\n                });\n              }\n\n              _context33.next = 26;\n              return stores.accountStore.getGasPrice();\n\n            case 26:\n              gasPrice = _context33.sent;\n              allowanceCallsPromises = [];\n\n              if (BigNumber(stakeAllowance).lt(BigNumber(balanceOf).div(Math.pow(10, pair.decimals)).toFixed(pair.decimals))) {\n                stakePromise = new Promise(function (resolve, reject) {\n                  context._callContractWait(_web9, pairContract, 'approve', [pair.gauge.address, MAX_UINT256], account, gasPrice, null, null, stakeAllowanceTXID, function (err) {\n                    if (err) {\n                      reject(err);\n                      return;\n                    }\n\n                    resolve();\n                  });\n                });\n                allowanceCallsPromises.push(stakePromise);\n              }\n\n              _context33.next = 31;\n              return Promise.all(allowanceCallsPromises);\n\n            case 31:\n              done = _context33.sent;\n              gaugeContract = new _web9.eth.Contract(CONTRACTS.GAUGE_ABI, pair.gauge.address);\n              sendTok = '0';\n\n              if (token && token.id) {\n                sendTok = token.id;\n              }\n\n              _this._callContractWait(_web9, gaugeContract, 'deposit', [balanceOf, sendTok], account, gasPrice, null, null, stakeTXID, function (err) {\n                if (err) {\n                  return _this.emitter.emit(ACTIONS.ERROR, err);\n                }\n\n                _this._getPairInfo(_web9, account);\n\n                _this.emitter.emit(ACTIONS.LIQUIDITY_STAKED);\n              });\n\n              _context33.next = 42;\n              break;\n\n            case 38:\n              _context33.prev = 38;\n              _context33.t0 = _context33[\"catch\"](0);\n              console.error(_context33.t0);\n\n              _this.emitter.emit(ACTIONS.ERROR, _context33.t0);\n\n            case 42:\n            case \"end\":\n              return _context33.stop();\n          }\n        }\n      }, _callee33, null, [[0, 38]]);\n    }));\n\n    return function (_x41) {\n      return _ref33.apply(this, arguments);\n    };\n  }());\n\n  _defineProperty(this, \"addLiquidityAndStake\", /*#__PURE__*/function () {\n    var _ref34 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee35(payload) {\n      var context, account, _web10, _payload$content5, token0, token1, amount0, amount1, minLiquidity, pair, token, slippage, allowance0TXID, allowance1TXID, stakeAllowanceTXID, depositTXID, stakeTXID, allowance0, allowance1, stakeAllowance, gasPrice, allowanceCallsPromises, tokenContract, tokenPromise, _tokenContract4, _tokenPromise4, _pairContract, stakePromise, done, sendSlippage, sendAmount0, sendAmount1, deadline, sendAmount0Min, sendAmount1Min, routerContract, gaugeContract, pairContract, func, params, sendValue;\n\n      return _regeneratorRuntime.wrap(function _callee35$(_context35) {\n        while (1) {\n          switch (_context35.prev = _context35.next) {\n            case 0:\n              _context35.prev = 0;\n              context = _this;\n              account = stores.accountStore.getStore(\"account\");\n\n              if (account) {\n                _context35.next = 6;\n                break;\n              }\n\n              console.warn('account not found');\n              return _context35.abrupt(\"return\", null);\n\n            case 6:\n              _context35.next = 8;\n              return stores.accountStore.getWeb3Provider();\n\n            case 8:\n              _web10 = _context35.sent;\n\n              if (_web10) {\n                _context35.next = 12;\n                break;\n              }\n\n              console.warn('web3 not found');\n              return _context35.abrupt(\"return\", null);\n\n            case 12:\n              _payload$content5 = payload.content, token0 = _payload$content5.token0, token1 = _payload$content5.token1, amount0 = _payload$content5.amount0, amount1 = _payload$content5.amount1, minLiquidity = _payload$content5.minLiquidity, pair = _payload$content5.pair, token = _payload$content5.token, slippage = _payload$content5.slippage; // ADD TRNASCTIONS TO TRANSACTION QUEUE DISPLAY\n\n              allowance0TXID = _this.getTXUUID();\n              allowance1TXID = _this.getTXUUID();\n              stakeAllowanceTXID = _this.getTXUUID();\n              depositTXID = _this.getTXUUID();\n              stakeTXID = _this.getTXUUID();\n\n              _this.emitter.emit(ACTIONS.TX_ADDED, {\n                title: \"Add liquidity to \".concat(pair.symbol),\n                type: 'Liquidity',\n                verb: 'Liquidity Added',\n                transactions: [{\n                  uuid: allowance0TXID,\n                  description: \"Checking your \".concat(token0.symbol, \" allowance\"),\n                  status: 'WAITING'\n                }, {\n                  uuid: allowance1TXID,\n                  description: \"Checking your \".concat(token1.symbol, \" allowance\"),\n                  status: 'WAITING'\n                }, {\n                  uuid: stakeAllowanceTXID,\n                  description: \"Checking your \".concat(pair.symbol, \" allowance\"),\n                  status: 'WAITING'\n                }, {\n                  uuid: depositTXID,\n                  description: \"Deposit tokens in the pool\",\n                  status: 'WAITING'\n                }, {\n                  uuid: stakeTXID,\n                  description: \"Stake LP tokens in the gauge\",\n                  status: 'WAITING'\n                }]\n              });\n\n              allowance0 = 0;\n              allowance1 = 0; // CHECK ALLOWANCES AND SET TX DISPLAY\n\n              if (!(token0.address !== 'FTM')) {\n                _context35.next = 28;\n                break;\n              }\n\n              _context35.next = 24;\n              return _this._getDepositAllowance(_web10, token0, account);\n\n            case 24:\n              allowance0 = _context35.sent;\n\n              if (BigNumber(allowance0).lt(amount0)) {\n                _this.emitter.emit(ACTIONS.TX_STATUS, {\n                  uuid: allowance0TXID,\n                  description: \"Allow the router to spend your \".concat(token0.symbol)\n                });\n              } else {\n                _this.emitter.emit(ACTIONS.TX_STATUS, {\n                  uuid: allowance0TXID,\n                  description: \"Allowance on \".concat(token0.symbol, \" sufficient\"),\n                  status: 'DONE'\n                });\n              }\n\n              _context35.next = 30;\n              break;\n\n            case 28:\n              allowance0 = MAX_UINT256;\n\n              _this.emitter.emit(ACTIONS.TX_STATUS, {\n                uuid: allowance0TXID,\n                description: \"Allowance on \".concat(token0.symbol, \" sufficient\"),\n                status: 'DONE'\n              });\n\n            case 30:\n              if (!(token1.address !== 'FTM')) {\n                _context35.next = 37;\n                break;\n              }\n\n              _context35.next = 33;\n              return _this._getDepositAllowance(_web10, token1, account);\n\n            case 33:\n              allowance1 = _context35.sent;\n\n              if (BigNumber(allowance1).lt(amount1)) {\n                _this.emitter.emit(ACTIONS.TX_STATUS, {\n                  uuid: allowance1TXID,\n                  description: \"Allow the router to spend your \".concat(token1.symbol)\n                });\n              } else {\n                _this.emitter.emit(ACTIONS.TX_STATUS, {\n                  uuid: allowance1TXID,\n                  description: \"Allowance on \".concat(token1.symbol, \" sufficient\"),\n                  status: 'DONE'\n                });\n              }\n\n              _context35.next = 39;\n              break;\n\n            case 37:\n              allowance1 = MAX_UINT256;\n\n              _this.emitter.emit(ACTIONS.TX_STATUS, {\n                uuid: allowance1TXID,\n                description: \"Allowance on \".concat(token1.symbol, \" sufficient\"),\n                status: 'DONE'\n              });\n\n            case 39:\n              _context35.next = 41;\n              return _this._getStakeAllowance(_web10, pair, account);\n\n            case 41:\n              stakeAllowance = _context35.sent;\n\n              if (BigNumber(stakeAllowance).lt(minLiquidity)) {\n                _this.emitter.emit(ACTIONS.TX_STATUS, {\n                  uuid: stakeAllowanceTXID,\n                  description: \"Allow the router to spend your \".concat(pair.symbol)\n                });\n              } else {\n                _this.emitter.emit(ACTIONS.TX_STATUS, {\n                  uuid: stakeAllowanceTXID,\n                  description: \"Allowance on \".concat(pair.symbol, \" sufficient\"),\n                  status: 'DONE'\n                });\n              }\n\n              _context35.next = 45;\n              return stores.accountStore.getGasPrice();\n\n            case 45:\n              gasPrice = _context35.sent;\n              allowanceCallsPromises = []; // SUBMIT REQUIRED ALLOWANCE TRANSACTIONS\n\n              if (BigNumber(allowance0).lt(amount0)) {\n                tokenContract = new _web10.eth.Contract(CONTRACTS.ERC20_ABI, token0.address);\n                tokenPromise = new Promise(function (resolve, reject) {\n                  context._callContractWait(_web10, tokenContract, 'approve', [CONTRACTS.ROUTER_ADDRESS, MAX_UINT256], account, gasPrice, null, null, allowance0TXID, function (err) {\n                    if (err) {\n                      reject(err);\n                      return;\n                    }\n\n                    resolve();\n                  });\n                });\n                allowanceCallsPromises.push(tokenPromise);\n              }\n\n              if (BigNumber(allowance1).lt(amount1)) {\n                _tokenContract4 = new _web10.eth.Contract(CONTRACTS.ERC20_ABI, token1.address);\n                _tokenPromise4 = new Promise(function (resolve, reject) {\n                  context._callContractWait(_web10, _tokenContract4, 'approve', [CONTRACTS.ROUTER_ADDRESS, MAX_UINT256], account, gasPrice, null, null, allowance1TXID, function (err) {\n                    if (err) {\n                      reject(err);\n                      return;\n                    }\n\n                    resolve();\n                  });\n                });\n                allowanceCallsPromises.push(_tokenPromise4);\n              }\n\n              if (BigNumber(stakeAllowance).lt(minLiquidity)) {\n                _pairContract = new _web10.eth.Contract(CONTRACTS.ERC20_ABI, pair.address);\n                stakePromise = new Promise(function (resolve, reject) {\n                  context._callContractWait(_web10, _pairContract, 'approve', [pair.gauge.address, MAX_UINT256], account, gasPrice, null, null, stakeAllowanceTXID, function (err) {\n                    if (err) {\n                      reject(err);\n                      return;\n                    }\n\n                    resolve();\n                  });\n                });\n                allowanceCallsPromises.push(stakePromise);\n              }\n\n              _context35.next = 52;\n              return Promise.all(allowanceCallsPromises);\n\n            case 52:\n              done = _context35.sent;\n              // SUBMIT DEPOSIT TRANSACTION\n              sendSlippage = BigNumber(100).minus(slippage).div(100);\n              sendAmount0 = BigNumber(amount0).times(Math.pow(10, token0.decimals)).toFixed(0);\n              sendAmount1 = BigNumber(amount1).times(Math.pow(10, token1.decimals)).toFixed(0);\n              deadline = '' + moment().add(600, 'seconds').unix();\n              sendAmount0Min = BigNumber(amount0).times(sendSlippage).times(Math.pow(10, token0.decimals)).toFixed(0);\n              sendAmount1Min = BigNumber(amount1).times(sendSlippage).times(Math.pow(10, token1.decimals)).toFixed(0);\n              routerContract = new _web10.eth.Contract(CONTRACTS.ROUTER_ABI, CONTRACTS.ROUTER_ADDRESS);\n              gaugeContract = new _web10.eth.Contract(CONTRACTS.GAUGE_ABI, pair.gauge.address);\n              pairContract = new _web10.eth.Contract(CONTRACTS.PAIR_ABI, pair.address);\n              func = 'addLiquidity';\n              params = [token0.address, token1.address, pair.isStable, sendAmount0, sendAmount1, sendAmount0Min, sendAmount1Min, account.address, deadline];\n              sendValue = null;\n\n              if (token0.address === 'FTM') {\n                func = 'addLiquidityFTM';\n                params = [token1.address, pair.isStable, sendAmount1, sendAmount1Min, sendAmount0Min, account.address, deadline];\n                sendValue = sendAmount0;\n              }\n\n              if (token1.address === 'FTM') {\n                func = 'addLiquidityFTM';\n                params = [token0.address, pair.isStable, sendAmount0, sendAmount0Min, sendAmount1Min, account.address, deadline];\n                sendValue = sendAmount1;\n              }\n\n              _this._callContractWait(_web10, routerContract, func, params, account, gasPrice, null, null, depositTXID, /*#__PURE__*/function () {\n                var _ref35 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee34(err) {\n                  var balanceOf, sendTok;\n                  return _regeneratorRuntime.wrap(function _callee34$(_context34) {\n                    while (1) {\n                      switch (_context34.prev = _context34.next) {\n                        case 0:\n                          if (!err) {\n                            _context34.next = 2;\n                            break;\n                          }\n\n                          return _context34.abrupt(\"return\", _this.emitter.emit(ACTIONS.ERROR, err));\n\n                        case 2:\n                          _context34.next = 4;\n                          return pairContract.methods.balanceOf(account.address).call();\n\n                        case 4:\n                          balanceOf = _context34.sent;\n                          sendTok = '0';\n\n                          if (token && token.id) {\n                            sendTok = token.id;\n                          }\n\n                          _this._callContractWait(_web10, gaugeContract, 'deposit', [balanceOf, sendTok], account, gasPrice, null, null, stakeTXID, function (err) {\n                            if (err) {\n                              return _this.emitter.emit(ACTIONS.ERROR, err);\n                            }\n\n                            _this._getPairInfo(_web10, account);\n\n                            _this.emitter.emit(ACTIONS.ADD_LIQUIDITY_AND_STAKED);\n                          });\n\n                        case 8:\n                        case \"end\":\n                          return _context34.stop();\n                      }\n                    }\n                  }, _callee34);\n                }));\n\n                return function (_x43) {\n                  return _ref35.apply(this, arguments);\n                };\n              }(), null, sendValue);\n\n              _context35.next = 74;\n              break;\n\n            case 70:\n              _context35.prev = 70;\n              _context35.t0 = _context35[\"catch\"](0);\n              console.error(_context35.t0);\n\n              _this.emitter.emit(ACTIONS.ERROR, _context35.t0);\n\n            case 74:\n            case \"end\":\n              return _context35.stop();\n          }\n        }\n      }, _callee35, null, [[0, 70]]);\n    }));\n\n    return function (_x42) {\n      return _ref34.apply(this, arguments);\n    };\n  }());\n\n  _defineProperty(this, \"_getDepositAllowance\", /*#__PURE__*/function () {\n    var _ref36 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee36(web3, token, account) {\n      var tokenContract, allowance;\n      return _regeneratorRuntime.wrap(function _callee36$(_context36) {\n        while (1) {\n          switch (_context36.prev = _context36.next) {\n            case 0:\n              _context36.prev = 0;\n              tokenContract = new web3.eth.Contract(CONTRACTS.ERC20_ABI, token.address);\n              _context36.next = 4;\n              return tokenContract.methods.allowance(account.address, CONTRACTS.ROUTER_ADDRESS).call();\n\n            case 4:\n              allowance = _context36.sent;\n              return _context36.abrupt(\"return\", BigNumber(allowance).div(Math.pow(10, token.decimals)).toFixed(token.decimals));\n\n            case 8:\n              _context36.prev = 8;\n              _context36.t0 = _context36[\"catch\"](0);\n              console.error(_context36.t0);\n              return _context36.abrupt(\"return\", null);\n\n            case 12:\n            case \"end\":\n              return _context36.stop();\n          }\n        }\n      }, _callee36, null, [[0, 8]]);\n    }));\n\n    return function (_x44, _x45, _x46) {\n      return _ref36.apply(this, arguments);\n    };\n  }());\n\n  _defineProperty(this, \"_getStakeAllowance\", /*#__PURE__*/function () {\n    var _ref37 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee37(web3, pair, account) {\n      var tokenContract, allowance;\n      return _regeneratorRuntime.wrap(function _callee37$(_context37) {\n        while (1) {\n          switch (_context37.prev = _context37.next) {\n            case 0:\n              _context37.prev = 0;\n              tokenContract = new web3.eth.Contract(CONTRACTS.ERC20_ABI, pair.address);\n              _context37.next = 4;\n              return tokenContract.methods.allowance(account.address, pair.gauge.address).call();\n\n            case 4:\n              allowance = _context37.sent;\n              return _context37.abrupt(\"return\", BigNumber(allowance).div(Math.pow(10, pair.decimals)).toFixed(pair.decimals));\n\n            case 8:\n              _context37.prev = 8;\n              _context37.t0 = _context37[\"catch\"](0);\n              console.error(_context37.t0);\n              return _context37.abrupt(\"return\", null);\n\n            case 12:\n            case \"end\":\n              return _context37.stop();\n          }\n        }\n      }, _callee37, null, [[0, 8]]);\n    }));\n\n    return function (_x47, _x48, _x49) {\n      return _ref37.apply(this, arguments);\n    };\n  }());\n\n  _defineProperty(this, \"_getWithdrawAllowance\", /*#__PURE__*/function () {\n    var _ref38 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee38(web3, pair, account) {\n      var tokenContract, allowance;\n      return _regeneratorRuntime.wrap(function _callee38$(_context38) {\n        while (1) {\n          switch (_context38.prev = _context38.next) {\n            case 0:\n              _context38.prev = 0;\n              tokenContract = new web3.eth.Contract(CONTRACTS.ERC20_ABI, pair.address);\n              _context38.next = 4;\n              return tokenContract.methods.allowance(account.address, CONTRACTS.ROUTER_ADDRESS).call();\n\n            case 4:\n              allowance = _context38.sent;\n              return _context38.abrupt(\"return\", BigNumber(allowance).div(Math.pow(10, pair.decimals)).toFixed(pair.decimals));\n\n            case 8:\n              _context38.prev = 8;\n              _context38.t0 = _context38[\"catch\"](0);\n              console.error(_context38.t0);\n              return _context38.abrupt(\"return\", null);\n\n            case 12:\n            case \"end\":\n              return _context38.stop();\n          }\n        }\n      }, _callee38, null, [[0, 8]]);\n    }));\n\n    return function (_x50, _x51, _x52) {\n      return _ref38.apply(this, arguments);\n    };\n  }());\n\n  _defineProperty(this, \"quoteAddLiquidity\", /*#__PURE__*/function () {\n    var _ref39 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee39(payload) {\n      var account, _web11, _payload$content6, pair, token0, token1, amount0, amount1, gasPrice, routerContract, sendAmount0, sendAmount1, addy0, addy1, res, returnVal;\n\n      return _regeneratorRuntime.wrap(function _callee39$(_context39) {\n        while (1) {\n          switch (_context39.prev = _context39.next) {\n            case 0:\n              _context39.prev = 0;\n              account = stores.accountStore.getStore(\"account\");\n\n              if (account) {\n                _context39.next = 5;\n                break;\n              }\n\n              console.warn('account not found');\n              return _context39.abrupt(\"return\", null);\n\n            case 5:\n              _context39.next = 7;\n              return stores.accountStore.getWeb3Provider();\n\n            case 7:\n              _web11 = _context39.sent;\n\n              if (_web11) {\n                _context39.next = 11;\n                break;\n              }\n\n              console.warn('web3 not found');\n              return _context39.abrupt(\"return\", null);\n\n            case 11:\n              _payload$content6 = payload.content, pair = _payload$content6.pair, token0 = _payload$content6.token0, token1 = _payload$content6.token1, amount0 = _payload$content6.amount0, amount1 = _payload$content6.amount1;\n\n              if (!(!pair || !token0 || !token1 || amount0 == '' || amount1 == '')) {\n                _context39.next = 14;\n                break;\n              }\n\n              return _context39.abrupt(\"return\", null);\n\n            case 14:\n              _context39.next = 16;\n              return stores.accountStore.getGasPrice();\n\n            case 16:\n              gasPrice = _context39.sent;\n              routerContract = new _web11.eth.Contract(CONTRACTS.ROUTER_ABI, CONTRACTS.ROUTER_ADDRESS);\n              sendAmount0 = BigNumber(amount0).times(Math.pow(10, token0.decimals)).toFixed(0);\n              sendAmount1 = BigNumber(amount1).times(Math.pow(10, token1.decimals)).toFixed(0);\n              addy0 = token0.address;\n              addy1 = token1.address;\n\n              if (token0.address === 'FTM') {\n                addy0 = CONTRACTS.WFTM_ADDRESS;\n              }\n\n              if (token1.address === 'FTM') {\n                addy1 = CONTRACTS.WFTM_ADDRESS;\n              }\n\n              _context39.next = 26;\n              return routerContract.methods.quoteAddLiquidity(addy0, addy1, pair.isStable, sendAmount0, sendAmount1).call();\n\n            case 26:\n              res = _context39.sent;\n              returnVal = {\n                inputs: {\n                  token0: token0,\n                  token1: token1,\n                  amount0: amount0,\n                  amount1: amount1\n                },\n                output: BigNumber(res.liquidity).div(Math.pow(10, pair.decimals)).toFixed(pair.decimals)\n              };\n\n              _this.emitter.emit(ACTIONS.QUOTE_ADD_LIQUIDITY_RETURNED, returnVal);\n\n              _context39.next = 35;\n              break;\n\n            case 31:\n              _context39.prev = 31;\n              _context39.t0 = _context39[\"catch\"](0);\n              console.error(_context39.t0);\n\n              _this.emitter.emit(ACTIONS.ERROR, _context39.t0);\n\n            case 35:\n            case \"end\":\n              return _context39.stop();\n          }\n        }\n      }, _callee39, null, [[0, 31]]);\n    }));\n\n    return function (_x53) {\n      return _ref39.apply(this, arguments);\n    };\n  }());\n\n  _defineProperty(this, \"getLiquidityBalances\", /*#__PURE__*/function () {\n    var _ref40 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee40(payload) {\n      var account, _web12, pair, token0Contract, token1Contract, pairContract, balanceCalls, gaugeContract, _yield$Promise$all37, _yield$Promise$all38, token0Balance, token1Balance, poolBalance, gaugeBalance, returnVal;\n\n      return _regeneratorRuntime.wrap(function _callee40$(_context40) {\n        while (1) {\n          switch (_context40.prev = _context40.next) {\n            case 0:\n              _context40.prev = 0;\n              account = stores.accountStore.getStore(\"account\");\n\n              if (account) {\n                _context40.next = 5;\n                break;\n              }\n\n              console.warn('account not found');\n              return _context40.abrupt(\"return\", null);\n\n            case 5:\n              _context40.next = 7;\n              return stores.accountStore.getWeb3Provider();\n\n            case 7:\n              _web12 = _context40.sent;\n\n              if (_web12) {\n                _context40.next = 11;\n                break;\n              }\n\n              console.warn('web3 not found');\n              return _context40.abrupt(\"return\", null);\n\n            case 11:\n              pair = payload.content.pair;\n\n              if (pair) {\n                _context40.next = 14;\n                break;\n              }\n\n              return _context40.abrupt(\"return\");\n\n            case 14:\n              token0Contract = new _web12.eth.Contract(CONTRACTS.ERC20_ABI, pair.token0.address);\n              token1Contract = new _web12.eth.Contract(CONTRACTS.ERC20_ABI, pair.token1.address);\n              pairContract = new _web12.eth.Contract(CONTRACTS.ERC20_ABI, pair.address);\n              balanceCalls = [token0Contract.methods.balanceOf(account.address).call(), token1Contract.methods.balanceOf(account.address).call(), pairContract.methods.balanceOf(account.address).call()];\n\n              if (pair.gauge) {\n                gaugeContract = new _web12.eth.Contract(CONTRACTS.ERC20_ABI, pair.gauge.address);\n                balanceCalls.push(gaugeContract.methods.balanceOf(account.address).call()); // balanceCalls.push(gaugeContract.methods.earned(incentiveAddress, account.address).call())\n              }\n\n              _context40.next = 21;\n              return Promise.all(balanceCalls);\n\n            case 21:\n              _yield$Promise$all37 = _context40.sent;\n              _yield$Promise$all38 = _slicedToArray(_yield$Promise$all37, 4);\n              token0Balance = _yield$Promise$all38[0];\n              token1Balance = _yield$Promise$all38[1];\n              poolBalance = _yield$Promise$all38[2];\n              gaugeBalance\n              /*, earned*/\n              = _yield$Promise$all38[3];\n              returnVal = {\n                token0: BigNumber(token0Balance).div(Math.pow(10, pair.token0.decimals)).toFixed(pair.token0.decimals),\n                token1: BigNumber(token1Balance).div(Math.pow(10, pair.token1.decimals)).toFixed(pair.token1.decimals),\n                pool: BigNumber(poolBalance).div(Math.pow(10, 18)).toFixed(18)\n              };\n\n              if (pair.gauge) {\n                returnVal.gauge = gaugeBalance ? BigNumber(gaugeBalance).div(Math.pow(10, 18)).toFixed(18) : null; // returnVal.earned = BigNumber(earned).div(10**incentiveAsset.decimals).toFixed(incentiveAsset.decimals),\n              }\n\n              _this.emitter.emit(ACTIONS.GET_LIQUIDITY_BALANCES_RETURNED, returnVal);\n\n              _context40.next = 36;\n              break;\n\n            case 32:\n              _context40.prev = 32;\n              _context40.t0 = _context40[\"catch\"](0);\n              console.error(_context40.t0);\n\n              _this.emitter.emit(ACTIONS.ERROR, _context40.t0);\n\n            case 36:\n            case \"end\":\n              return _context40.stop();\n          }\n        }\n      }, _callee40, null, [[0, 32]]);\n    }));\n\n    return function (_x54) {\n      return _ref40.apply(this, arguments);\n    };\n  }());\n\n  _defineProperty(this, \"removeLiquidity\", /*#__PURE__*/function () {\n    var _ref41 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee41(payload) {\n      var context, account, _web13, _payload$content7, token0, token1, pair, slippage, allowanceTXID, withdrawTXID, allowance, gasPrice, allowanceCallsPromises, tokenContract, tokenPromise, done, sendAmount, routerContract, quoteRemove, sendSlippage, deadline, sendAmount0Min, sendAmount1Min;\n\n      return _regeneratorRuntime.wrap(function _callee41$(_context41) {\n        while (1) {\n          switch (_context41.prev = _context41.next) {\n            case 0:\n              _context41.prev = 0;\n              context = _this;\n              account = stores.accountStore.getStore(\"account\");\n\n              if (account) {\n                _context41.next = 6;\n                break;\n              }\n\n              console.warn('account not found');\n              return _context41.abrupt(\"return\", null);\n\n            case 6:\n              _context41.next = 8;\n              return stores.accountStore.getWeb3Provider();\n\n            case 8:\n              _web13 = _context41.sent;\n\n              if (_web13) {\n                _context41.next = 12;\n                break;\n              }\n\n              console.warn('web3 not found');\n              return _context41.abrupt(\"return\", null);\n\n            case 12:\n              _payload$content7 = payload.content, token0 = _payload$content7.token0, token1 = _payload$content7.token1, pair = _payload$content7.pair, slippage = _payload$content7.slippage; // ADD TRNASCTIONS TO TRANSACTION QUEUE DISPLAY\n\n              allowanceTXID = _this.getTXUUID();\n              withdrawTXID = _this.getTXUUID();\n\n              _this.emitter.emit(ACTIONS.TX_ADDED, {\n                title: \"Remove liquidity from \".concat(pair.symbol),\n                type: 'Liquidity',\n                verb: 'Liquidity Removed',\n                transactions: [{\n                  uuid: allowanceTXID,\n                  description: \"Checking your \".concat(pair.symbol, \" allowance\"),\n                  status: 'WAITING'\n                }, {\n                  uuid: withdrawTXID,\n                  description: \"Withdraw tokens from the pool\",\n                  status: 'WAITING'\n                }]\n              }); // CHECK ALLOWANCES AND SET TX DISPLAY\n\n\n              _context41.next = 18;\n              return _this._getWithdrawAllowance(_web13, pair, account);\n\n            case 18:\n              allowance = _context41.sent;\n\n              if (BigNumber(allowance).lt(pair.balance)) {\n                _this.emitter.emit(ACTIONS.TX_STATUS, {\n                  uuid: allowanceTXID,\n                  description: \"Allow the router to spend your \".concat(pair.symbol)\n                });\n              } else {\n                _this.emitter.emit(ACTIONS.TX_STATUS, {\n                  uuid: allowanceTXID,\n                  description: \"Allowance on \".concat(pair.symbol, \" sufficient\"),\n                  status: 'DONE'\n                });\n              }\n\n              _context41.next = 22;\n              return stores.accountStore.getGasPrice();\n\n            case 22:\n              gasPrice = _context41.sent;\n              allowanceCallsPromises = []; // SUBMIT REQUIRED ALLOWANCE TRANSACTIONS\n\n              if (BigNumber(allowance).lt(pair.balance)) {\n                tokenContract = new _web13.eth.Contract(CONTRACTS.ERC20_ABI, pair.address);\n                tokenPromise = new Promise(function (resolve, reject) {\n                  context._callContractWait(_web13, tokenContract, 'approve', [CONTRACTS.ROUTER_ADDRESS, MAX_UINT256], account, gasPrice, null, null, allowanceTXID, function (err) {\n                    if (err) {\n                      console.log(err);\n                      reject(err);\n                      return;\n                    }\n\n                    resolve();\n                  });\n                });\n                allowanceCallsPromises.push(tokenPromise);\n              }\n\n              _context41.next = 27;\n              return Promise.all(allowanceCallsPromises);\n\n            case 27:\n              done = _context41.sent;\n              // SUBMIT WITHDRAW TRANSACTION\n              sendAmount = BigNumber(pair.balance).times(Math.pow(10, pair.decimals)).toFixed(0);\n              routerContract = new _web13.eth.Contract(CONTRACTS.ROUTER_ABI, CONTRACTS.ROUTER_ADDRESS);\n              _context41.next = 32;\n              return routerContract.methods.quoteRemoveLiquidity(token0.address, token1.address, pair.isStable, sendAmount).call();\n\n            case 32:\n              quoteRemove = _context41.sent;\n              sendSlippage = BigNumber(100).minus(slippage).div(100);\n              deadline = '' + moment().add(600, 'seconds').unix();\n              sendAmount0Min = BigNumber(quoteRemove.amountA).times(sendSlippage).toFixed(0);\n              sendAmount1Min = BigNumber(quoteRemove.amountB).times(sendSlippage).toFixed(0);\n\n              _this._callContractWait(_web13, routerContract, 'removeLiquidity', [token0.address, token1.address, pair.isStable, sendAmount, sendAmount0Min, sendAmount1Min, account.address, deadline], account, gasPrice, null, null, withdrawTXID, function (err) {\n                if (err) {\n                  return _this.emitter.emit(ACTIONS.ERROR, err);\n                }\n\n                _this._getPairInfo(_web13, account);\n\n                _this.emitter.emit(ACTIONS.LIQUIDITY_REMOVED);\n              });\n\n              _context41.next = 44;\n              break;\n\n            case 40:\n              _context41.prev = 40;\n              _context41.t0 = _context41[\"catch\"](0);\n              console.error(_context41.t0);\n\n              _this.emitter.emit(ACTIONS.ERROR, _context41.t0);\n\n            case 44:\n            case \"end\":\n              return _context41.stop();\n          }\n        }\n      }, _callee41, null, [[0, 40]]);\n    }));\n\n    return function (_x55) {\n      return _ref41.apply(this, arguments);\n    };\n  }());\n\n  _defineProperty(this, \"unstakeAndRemoveLiquidity\", /*#__PURE__*/function () {\n    var _ref42 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee43(payload) {\n      var context, account, _web14, _payload$content8, token0, token1, amount, amount0, amount1, pair, slippage, allowanceTXID, withdrawTXID, unstakeTXID, allowance, gasPrice, allowanceCallsPromises, tokenContract, tokenPromise, done, sendSlippage, sendAmount, deadline, sendAmount0Min, sendAmount1Min, routerContract, gaugeContract, pairContract;\n\n      return _regeneratorRuntime.wrap(function _callee43$(_context43) {\n        while (1) {\n          switch (_context43.prev = _context43.next) {\n            case 0:\n              _context43.prev = 0;\n              context = _this;\n              account = stores.accountStore.getStore(\"account\");\n\n              if (account) {\n                _context43.next = 6;\n                break;\n              }\n\n              console.warn('account not found');\n              return _context43.abrupt(\"return\", null);\n\n            case 6:\n              _context43.next = 8;\n              return stores.accountStore.getWeb3Provider();\n\n            case 8:\n              _web14 = _context43.sent;\n\n              if (_web14) {\n                _context43.next = 12;\n                break;\n              }\n\n              console.warn('web3 not found');\n              return _context43.abrupt(\"return\", null);\n\n            case 12:\n              _payload$content8 = payload.content, token0 = _payload$content8.token0, token1 = _payload$content8.token1, amount = _payload$content8.amount, amount0 = _payload$content8.amount0, amount1 = _payload$content8.amount1, pair = _payload$content8.pair, slippage = _payload$content8.slippage; // ADD TRNASCTIONS TO TRANSACTION QUEUE DISPLAY\n\n              allowanceTXID = _this.getTXUUID();\n              withdrawTXID = _this.getTXUUID();\n              unstakeTXID = _this.getTXUUID();\n\n              _this.emitter.emit(ACTIONS.TX_ADDED, {\n                title: \"Remove liquidity from \".concat(pair.symbol),\n                type: 'Liquidity',\n                verb: 'Liquidity Removed',\n                transactions: [{\n                  uuid: allowanceTXID,\n                  description: \"Checking your \".concat(pair.symbol, \" allowance\"),\n                  status: 'WAITING'\n                }, {\n                  uuid: unstakeTXID,\n                  description: \"Unstake LP tokens from the gauge\",\n                  status: 'WAITING'\n                }, {\n                  uuid: withdrawTXID,\n                  description: \"Withdraw tokens from the pool\",\n                  status: 'WAITING'\n                }]\n              }); // CHECK ALLOWANCES AND SET TX DISPLAY\n\n\n              _context43.next = 19;\n              return _this._getWithdrawAllowance(_web14, pair, account);\n\n            case 19:\n              allowance = _context43.sent;\n\n              if (BigNumber(allowance).lt(amount)) {\n                _this.emitter.emit(ACTIONS.TX_STATUS, {\n                  uuid: allowanceTXID,\n                  description: \"Allow the router to spend your \".concat(pair.symbol)\n                });\n              } else {\n                _this.emitter.emit(ACTIONS.TX_STATUS, {\n                  uuid: allowanceTXID,\n                  description: \"Allowance on \".concat(pair.symbol, \" sufficient\"),\n                  status: 'DONE'\n                });\n              }\n\n              _context43.next = 23;\n              return stores.accountStore.getGasPrice();\n\n            case 23:\n              gasPrice = _context43.sent;\n              allowanceCallsPromises = []; // SUBMIT REQUIRED ALLOWANCE TRANSACTIONS\n\n              if (BigNumber(allowance).lt(amount)) {\n                tokenContract = new _web14.eth.Contract(CONTRACTS.ERC20_ABI, pair.address);\n                tokenPromise = new Promise(function (resolve, reject) {\n                  context._callContractWait(_web14, tokenContract, 'approve', [CONTRACTS.ROUTER_ADDRESS, MAX_UINT256], account, gasPrice, null, null, allowanceTXID, function (err) {\n                    if (err) {\n                      reject(err);\n                      return;\n                    }\n\n                    resolve();\n                  });\n                });\n                allowanceCallsPromises.push(tokenPromise);\n              }\n\n              _context43.next = 28;\n              return Promise.all(allowanceCallsPromises);\n\n            case 28:\n              done = _context43.sent;\n              // SUBMIT DEPOSIT TRANSACTION\n              sendSlippage = BigNumber(100).minus(slippage).div(100);\n              sendAmount = BigNumber(amount).times(Math.pow(10, pair.decimals)).toFixed(0);\n              deadline = '' + moment().add(600, 'seconds').unix();\n              sendAmount0Min = BigNumber(amount0).times(sendSlippage).times(Math.pow(10, token0.decimals)).toFixed(0);\n              sendAmount1Min = BigNumber(amount1).times(sendSlippage).times(Math.pow(10, token1.decimals)).toFixed(0);\n              routerContract = new _web14.eth.Contract(CONTRACTS.ROUTER_ABI, CONTRACTS.ROUTER_ADDRESS);\n              gaugeContract = new _web14.eth.Contract(CONTRACTS.GAUGE_ABI, pair.gauge.address);\n              pairContract = new _web14.eth.Contract(CONTRACTS.PAIR_ABI, pair.address);\n\n              _this._callContractWait(_web14, gaugeContract, 'withdraw', [sendAmount], account, gasPrice, null, null, unstakeTXID, /*#__PURE__*/function () {\n                var _ref43 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee42(err) {\n                  var balanceOf;\n                  return _regeneratorRuntime.wrap(function _callee42$(_context42) {\n                    while (1) {\n                      switch (_context42.prev = _context42.next) {\n                        case 0:\n                          if (!err) {\n                            _context42.next = 2;\n                            break;\n                          }\n\n                          return _context42.abrupt(\"return\", _this.emitter.emit(ACTIONS.ERROR, err));\n\n                        case 2:\n                          _context42.next = 4;\n                          return pairContract.methods.balanceOf(account.address).call();\n\n                        case 4:\n                          balanceOf = _context42.sent;\n\n                          _this._callContractWait(_web14, routerContract, 'removeLiquidity', [token0.address, token1.address, pair.isStable, balanceOf, sendAmount0Min, sendAmount1Min, account.address, deadline], account, gasPrice, null, null, withdrawTXID, function (err) {\n                            if (err) {\n                              return _this.emitter.emit(ACTIONS.ERROR, err);\n                            }\n\n                            _this._getPairInfo(_web14, account);\n\n                            _this.emitter.emit(ACTIONS.REMOVE_LIQUIDITY_AND_UNSTAKED);\n                          });\n\n                        case 6:\n                        case \"end\":\n                          return _context42.stop();\n                      }\n                    }\n                  }, _callee42);\n                }));\n\n                return function (_x57) {\n                  return _ref43.apply(this, arguments);\n                };\n              }());\n\n              _context43.next = 44;\n              break;\n\n            case 40:\n              _context43.prev = 40;\n              _context43.t0 = _context43[\"catch\"](0);\n              console.error(_context43.t0);\n\n              _this.emitter.emit(ACTIONS.ERROR, _context43.t0);\n\n            case 44:\n            case \"end\":\n              return _context43.stop();\n          }\n        }\n      }, _callee43, null, [[0, 40]]);\n    }));\n\n    return function (_x56) {\n      return _ref42.apply(this, arguments);\n    };\n  }());\n\n  _defineProperty(this, \"unstakeLiquidity\", /*#__PURE__*/function () {\n    var _ref44 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee45(payload) {\n      var context, account, _web15, _payload$content9, token0, token1, amount, amount0, amount1, pair, unstakeTXID, gasPrice, sendAmount, gaugeContract;\n\n      return _regeneratorRuntime.wrap(function _callee45$(_context45) {\n        while (1) {\n          switch (_context45.prev = _context45.next) {\n            case 0:\n              _context45.prev = 0;\n              context = _this;\n              account = stores.accountStore.getStore(\"account\");\n\n              if (account) {\n                _context45.next = 6;\n                break;\n              }\n\n              console.warn('account not found');\n              return _context45.abrupt(\"return\", null);\n\n            case 6:\n              _context45.next = 8;\n              return stores.accountStore.getWeb3Provider();\n\n            case 8:\n              _web15 = _context45.sent;\n\n              if (_web15) {\n                _context45.next = 12;\n                break;\n              }\n\n              console.warn('web3 not found');\n              return _context45.abrupt(\"return\", null);\n\n            case 12:\n              _payload$content9 = payload.content, token0 = _payload$content9.token0, token1 = _payload$content9.token1, amount = _payload$content9.amount, amount0 = _payload$content9.amount0, amount1 = _payload$content9.amount1, pair = _payload$content9.pair; // ADD TRNASCTIONS TO TRANSACTION QUEUE DISPLAY\n\n              unstakeTXID = _this.getTXUUID();\n\n              _this.emitter.emit(ACTIONS.TX_ADDED, {\n                title: \"Unstake liquidity from gauge\",\n                type: 'Liquidity',\n                verb: 'Liquidity Unstaked',\n                transactions: [{\n                  uuid: unstakeTXID,\n                  description: \"Unstake LP tokens from the gauge\",\n                  status: 'WAITING'\n                }]\n              });\n\n              _context45.next = 17;\n              return stores.accountStore.getGasPrice();\n\n            case 17:\n              gasPrice = _context45.sent;\n              // SUBMIT DEPOSIT TRANSACTION\n              sendAmount = BigNumber(amount).times(Math.pow(10, pair.decimals)).toFixed(0);\n              gaugeContract = new _web15.eth.Contract(CONTRACTS.GAUGE_ABI, pair.gauge.address);\n\n              _this._callContractWait(_web15, gaugeContract, 'withdraw', [sendAmount], account, gasPrice, null, null, unstakeTXID, /*#__PURE__*/function () {\n                var _ref45 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee44(err) {\n                  return _regeneratorRuntime.wrap(function _callee44$(_context44) {\n                    while (1) {\n                      switch (_context44.prev = _context44.next) {\n                        case 0:\n                          if (!err) {\n                            _context44.next = 2;\n                            break;\n                          }\n\n                          return _context44.abrupt(\"return\", _this.emitter.emit(ACTIONS.ERROR, err));\n\n                        case 2:\n                          _this._getPairInfo(_web15, account);\n\n                          _this.emitter.emit(ACTIONS.LIQUIDITY_UNSTAKED);\n\n                        case 4:\n                        case \"end\":\n                          return _context44.stop();\n                      }\n                    }\n                  }, _callee44);\n                }));\n\n                return function (_x59) {\n                  return _ref45.apply(this, arguments);\n                };\n              }());\n\n              _context45.next = 27;\n              break;\n\n            case 23:\n              _context45.prev = 23;\n              _context45.t0 = _context45[\"catch\"](0);\n              console.error(_context45.t0);\n\n              _this.emitter.emit(ACTIONS.ERROR, _context45.t0);\n\n            case 27:\n            case \"end\":\n              return _context45.stop();\n          }\n        }\n      }, _callee45, null, [[0, 23]]);\n    }));\n\n    return function (_x58) {\n      return _ref44.apply(this, arguments);\n    };\n  }());\n\n  _defineProperty(this, \"quoteRemoveLiquidity\", /*#__PURE__*/function () {\n    var _ref46 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee46(payload) {\n      var account, _web16, _payload$content10, pair, token0, token1, withdrawAmount, gasPrice, routerContract, sendWithdrawAmount, res, returnVal;\n\n      return _regeneratorRuntime.wrap(function _callee46$(_context46) {\n        while (1) {\n          switch (_context46.prev = _context46.next) {\n            case 0:\n              _context46.prev = 0;\n              account = stores.accountStore.getStore(\"account\");\n\n              if (account) {\n                _context46.next = 5;\n                break;\n              }\n\n              console.warn('account not found');\n              return _context46.abrupt(\"return\", null);\n\n            case 5:\n              _context46.next = 7;\n              return stores.accountStore.getWeb3Provider();\n\n            case 7:\n              _web16 = _context46.sent;\n\n              if (_web16) {\n                _context46.next = 11;\n                break;\n              }\n\n              console.warn('web3 not found');\n              return _context46.abrupt(\"return\", null);\n\n            case 11:\n              _payload$content10 = payload.content, pair = _payload$content10.pair, token0 = _payload$content10.token0, token1 = _payload$content10.token1, withdrawAmount = _payload$content10.withdrawAmount;\n\n              if (!(!pair || !token0 || !token1 || withdrawAmount == '')) {\n                _context46.next = 14;\n                break;\n              }\n\n              return _context46.abrupt(\"return\", null);\n\n            case 14:\n              _context46.next = 16;\n              return stores.accountStore.getGasPrice();\n\n            case 16:\n              gasPrice = _context46.sent;\n              routerContract = new _web16.eth.Contract(CONTRACTS.ROUTER_ABI, CONTRACTS.ROUTER_ADDRESS);\n              sendWithdrawAmount = BigNumber(withdrawAmount).times(Math.pow(10, pair.decimals)).toFixed(0);\n              _context46.next = 21;\n              return routerContract.methods.quoteRemoveLiquidity(token0.address, token1.address, pair.isStable, sendWithdrawAmount).call();\n\n            case 21:\n              res = _context46.sent;\n              returnVal = {\n                inputs: {\n                  token0: token0,\n                  token1: token1,\n                  withdrawAmount: withdrawAmount\n                },\n                output: {\n                  amount0: BigNumber(res.amountA).div(Math.pow(10, token0.decimals)).toFixed(token0.decimals),\n                  amount1: BigNumber(res.amountB).div(Math.pow(10, token1.decimals)).toFixed(token1.decimals)\n                }\n              };\n\n              _this.emitter.emit(ACTIONS.QUOTE_REMOVE_LIQUIDITY_RETURNED, returnVal);\n\n              _context46.next = 30;\n              break;\n\n            case 26:\n              _context46.prev = 26;\n              _context46.t0 = _context46[\"catch\"](0);\n              console.error(_context46.t0);\n\n              _this.emitter.emit(ACTIONS.ERROR, _context46.t0);\n\n            case 30:\n            case \"end\":\n              return _context46.stop();\n          }\n        }\n      }, _callee46, null, [[0, 26]]);\n    }));\n\n    return function (_x60) {\n      return _ref46.apply(this, arguments);\n    };\n  }());\n\n  _defineProperty(this, \"createGauge\", /*#__PURE__*/function () {\n    var _ref47 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee48(payload) {\n      var context, account, _web17, pair, createGaugeTXID, gasPrice, gaugesContract;\n\n      return _regeneratorRuntime.wrap(function _callee48$(_context48) {\n        while (1) {\n          switch (_context48.prev = _context48.next) {\n            case 0:\n              _context48.prev = 0;\n              context = _this;\n              account = stores.accountStore.getStore(\"account\");\n\n              if (account) {\n                _context48.next = 6;\n                break;\n              }\n\n              console.warn('account not found');\n              return _context48.abrupt(\"return\", null);\n\n            case 6:\n              _context48.next = 8;\n              return stores.accountStore.getWeb3Provider();\n\n            case 8:\n              _web17 = _context48.sent;\n\n              if (_web17) {\n                _context48.next = 12;\n                break;\n              }\n\n              console.warn('web3 not found');\n              return _context48.abrupt(\"return\", null);\n\n            case 12:\n              pair = payload.content.pair; // ADD TRNASCTIONS TO TRANSACTION QUEUE DISPLAY\n\n              createGaugeTXID = _this.getTXUUID();\n\n              _this.emitter.emit(ACTIONS.TX_ADDED, {\n                title: \"Create liquidity gauge for \".concat(pair.token0.symbol, \"/\").concat(pair.token1.symbol),\n                type: 'Liquidity',\n                verb: 'Gauge Created',\n                transactions: [{\n                  uuid: createGaugeTXID,\n                  description: \"Create gauge\",\n                  status: 'WAITING'\n                }]\n              });\n\n              _context48.next = 17;\n              return stores.accountStore.getGasPrice();\n\n            case 17:\n              gasPrice = _context48.sent;\n              gaugesContract = new _web17.eth.Contract(CONTRACTS.VOTER_ABI, CONTRACTS.VOTER_ADDRESS);\n\n              _this._callContractWait(_web17, gaugesContract, 'createGauge', [pair.address], account, gasPrice, null, null, createGaugeTXID, /*#__PURE__*/function () {\n                var _ref48 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee47(err) {\n                  return _regeneratorRuntime.wrap(function _callee47$(_context47) {\n                    while (1) {\n                      switch (_context47.prev = _context47.next) {\n                        case 0:\n                          if (!err) {\n                            _context47.next = 2;\n                            break;\n                          }\n\n                          return _context47.abrupt(\"return\", _this.emitter.emit(ACTIONS.ERROR, err));\n\n                        case 2:\n                          _context47.next = 4;\n                          return _this.updatePairsCall(_web17, account);\n\n                        case 4:\n                          _this.emitter.emit(ACTIONS.CREATE_GAUGE_RETURNED);\n\n                        case 5:\n                        case \"end\":\n                          return _context47.stop();\n                      }\n                    }\n                  }, _callee47);\n                }));\n\n                return function (_x62) {\n                  return _ref48.apply(this, arguments);\n                };\n              }());\n\n              _context48.next = 26;\n              break;\n\n            case 22:\n              _context48.prev = 22;\n              _context48.t0 = _context48[\"catch\"](0);\n              console.error(_context48.t0);\n\n              _this.emitter.emit(ACTIONS.ERROR, _context48.t0);\n\n            case 26:\n            case \"end\":\n              return _context48.stop();\n          }\n        }\n      }, _callee48, null, [[0, 22]]);\n    }));\n\n    return function (_x61) {\n      return _ref47.apply(this, arguments);\n    };\n  }());\n\n  _defineProperty(this, \"quoteSwap\", /*#__PURE__*/function () {\n    var _ref49 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee49(payload) {\n      var txUUID, _web18, routeAssets, _payload$content11, fromAsset, toAsset, fromAmount, routerContract, sendFromAmount, addy0, addy1, includesRouteAddress, amountOuts, multicall, receiveAmounts, i, bestAmountOut, totalRatio, _i, reserves, amountIn, amountOut, amIn, amOut, ratio, priceImpact, returnValue;\n\n      return _regeneratorRuntime.wrap(function _callee49$(_context49) {\n        while (1) {\n          switch (_context49.prev = _context49.next) {\n            case 0:\n              txUUID = _this.getTXUUID();\n              console.log(\"Entered Quote: \".concat(txUUID));\n              _context49.prev = 2;\n              _context49.next = 5;\n              return stores.accountStore.getWeb3Provider();\n\n            case 5:\n              _web18 = _context49.sent;\n\n              if (_web18) {\n                _context49.next = 9;\n                break;\n              }\n\n              console.warn('web3 not found');\n              return _context49.abrupt(\"return\", null);\n\n            case 9:\n              // some path logic. Have a base asset (FTM) swap from start asset to FTM, swap from FTM back to out asset. Don't know.\n              routeAssets = _this.getStore('routeAssets');\n              _payload$content11 = payload.content, fromAsset = _payload$content11.fromAsset, toAsset = _payload$content11.toAsset, fromAmount = _payload$content11.fromAmount;\n              routerContract = new _web18.eth.Contract(CONTRACTS.ROUTER_ABI, CONTRACTS.ROUTER_ADDRESS);\n              sendFromAmount = BigNumber(fromAmount).times(Math.pow(10, fromAsset.decimals)).toFixed();\n\n              if (!(!fromAsset || !toAsset || !fromAmount || !fromAsset.address || !toAsset.address || fromAmount === '')) {\n                _context49.next = 15;\n                break;\n              }\n\n              return _context49.abrupt(\"return\", null);\n\n            case 15:\n              addy0 = fromAsset.address;\n              addy1 = toAsset.address;\n\n              if (fromAsset.address === 'FTM') {\n                addy0 = CONTRACTS.WFTM_ADDRESS;\n              }\n\n              if (toAsset.address === 'FTM') {\n                addy1 = CONTRACTS.WFTM_ADDRESS;\n              }\n\n              includesRouteAddress = routeAssets.filter(function (asset) {\n                return asset.address.toLowerCase() == addy0.toLowerCase() || asset.address.toLowerCase() == addy1.toLowerCase();\n              });\n              amountOuts = [];\n\n              if (includesRouteAddress.length === 0) {\n                amountOuts = routeAssets.map(function (routeAsset) {\n                  return [{\n                    routes: [{\n                      from: addy0,\n                      to: routeAsset.address,\n                      stable: true\n                    }, {\n                      from: routeAsset.address,\n                      to: addy1,\n                      stable: true\n                    }],\n                    routeAsset: routeAsset\n                  }, {\n                    routes: [{\n                      from: addy0,\n                      to: routeAsset.address,\n                      stable: false\n                    }, {\n                      from: routeAsset.address,\n                      to: addy1,\n                      stable: false\n                    }],\n                    routeAsset: routeAsset\n                  }, {\n                    routes: [{\n                      from: addy0,\n                      to: routeAsset.address,\n                      stable: true\n                    }, {\n                      from: routeAsset.address,\n                      to: addy1,\n                      stable: false\n                    }],\n                    routeAsset: routeAsset\n                  }, {\n                    routes: [{\n                      from: addy0,\n                      to: routeAsset.address,\n                      stable: false\n                    }, {\n                      from: routeAsset.address,\n                      to: addy1,\n                      stable: true\n                    }],\n                    routeAsset: routeAsset\n                  }];\n                }).flat();\n              }\n\n              amountOuts.push({\n                routes: [{\n                  from: addy0,\n                  to: addy1,\n                  stable: true\n                }],\n                routeAsset: null\n              });\n              amountOuts.push({\n                routes: [{\n                  from: addy0,\n                  to: addy1,\n                  stable: false\n                }],\n                routeAsset: null\n              });\n              _context49.next = 26;\n              return stores.accountStore.getMulticall();\n\n            case 26:\n              multicall = _context49.sent;\n              _context49.next = 29;\n              return multicall.aggregate(amountOuts.map(function (route) {\n                return routerContract.methods.getAmountsOut(sendFromAmount, route.routes);\n              }));\n\n            case 29:\n              receiveAmounts = _context49.sent;\n\n              for (i = 0; i < receiveAmounts.length; i++) {\n                amountOuts[i].receiveAmounts = receiveAmounts[i];\n                amountOuts[i].finalValue = BigNumber(receiveAmounts[i][receiveAmounts[i].length - 1]).div(Math.pow(10, toAsset.decimals)).toFixed(toAsset.decimals);\n              }\n\n              bestAmountOut = amountOuts.filter(function (ret) {\n                return ret != null;\n              }).reduce(function (best, current) {\n                if (!best) {\n                  return current;\n                }\n\n                return BigNumber(best.finalValue).gt(current.finalValue) ? best : current;\n              }, 0);\n\n              if (bestAmountOut) {\n                _context49.next = 35;\n                break;\n              }\n\n              _this.emitter.emit(ACTIONS.ERROR, 'No valid route found to complete swap');\n\n              return _context49.abrupt(\"return\", null);\n\n            case 35:\n              totalRatio = 1;\n              _i = 0;\n\n            case 37:\n              if (!(_i < bestAmountOut.routes.length)) {\n                _context49.next = 54;\n                break;\n              }\n\n              if (!(bestAmountOut.routes[_i].stable == true)) {\n                _context49.next = 41;\n                break;\n              }\n\n              _context49.next = 51;\n              break;\n\n            case 41:\n              _context49.next = 43;\n              return routerContract.methods.getReserves(bestAmountOut.routes[_i].from, bestAmountOut.routes[_i].to, bestAmountOut.routes[_i].stable).call();\n\n            case 43:\n              reserves = _context49.sent;\n              amountIn = 0;\n              amountOut = 0;\n\n              if (_i == 0) {\n                amountIn = sendFromAmount;\n                amountOut = bestAmountOut.receiveAmounts[_i + 1];\n              } else {\n                amountIn = bestAmountOut.receiveAmounts[_i];\n                amountOut = bestAmountOut.receiveAmounts[_i + 1];\n              }\n\n              amIn = BigNumber(amountIn).div(reserves.reserveA);\n              amOut = BigNumber(amountOut).div(reserves.reserveB);\n              ratio = BigNumber(amOut).div(amIn);\n              totalRatio = BigNumber(totalRatio).times(ratio).toFixed(18);\n\n            case 51:\n              _i++;\n              _context49.next = 37;\n              break;\n\n            case 54:\n              priceImpact = BigNumber(1).minus(totalRatio).times(100).toFixed(18);\n              returnValue = {\n                inputs: {\n                  fromAmount: fromAmount,\n                  fromAsset: fromAsset,\n                  toAsset: toAsset\n                },\n                output: bestAmountOut,\n                priceImpact: priceImpact\n              };\n              console.log(\"Returned Quote: \".concat(txUUID, \" : \").concat(JSON.stringify(returnValue)));\n\n              _this.emitter.emit(ACTIONS.QUOTE_SWAP_RETURNED, returnValue);\n\n              _context49.next = 66;\n              break;\n\n            case 60:\n              _context49.prev = 60;\n              _context49.t0 = _context49[\"catch\"](2);\n              console.log(\"Exception Quote: \".concat(txUUID));\n              console.error(_context49.t0);\n\n              _this.emitter.emit(ACTIONS.QUOTE_SWAP_RETURNED, null);\n\n              _this.emitter.emit(ACTIONS.ERROR, _context49.t0);\n\n            case 66:\n            case \"end\":\n              return _context49.stop();\n          }\n        }\n      }, _callee49, null, [[2, 60]]);\n    }));\n\n    return function (_x63) {\n      return _ref49.apply(this, arguments);\n    };\n  }());\n\n  _defineProperty(this, \"swap\", /*#__PURE__*/function () {\n    var _ref50 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee50(payload) {\n      var context, account, _web19, _payload$content12, fromAsset, toAsset, fromAmount, toAmount, quote, slippage, allowanceTXID, swapTXID, allowance, gasPrice, allowanceCallsPromises, tokenContract, tokenPromise, done, sendSlippage, sendFromAmount, sendMinAmountOut, deadline, routerContract, func, params, sendValue;\n\n      return _regeneratorRuntime.wrap(function _callee50$(_context50) {\n        while (1) {\n          switch (_context50.prev = _context50.next) {\n            case 0:\n              _context50.prev = 0;\n              context = _this;\n              account = stores.accountStore.getStore(\"account\");\n\n              if (account) {\n                _context50.next = 6;\n                break;\n              }\n\n              console.warn('account not found');\n              return _context50.abrupt(\"return\", null);\n\n            case 6:\n              _context50.next = 8;\n              return stores.accountStore.getWeb3Provider();\n\n            case 8:\n              _web19 = _context50.sent;\n\n              if (_web19) {\n                _context50.next = 12;\n                break;\n              }\n\n              console.warn('web3 not found');\n              return _context50.abrupt(\"return\", null);\n\n            case 12:\n              _payload$content12 = payload.content, fromAsset = _payload$content12.fromAsset, toAsset = _payload$content12.toAsset, fromAmount = _payload$content12.fromAmount, toAmount = _payload$content12.toAmount, quote = _payload$content12.quote, slippage = _payload$content12.slippage; // ADD TRNASCTIONS TO TRANSACTION QUEUE DISPLAY\n\n              allowanceTXID = _this.getTXUUID();\n              swapTXID = _this.getTXUUID();\n\n              _this.emitter.emit(ACTIONS.TX_ADDED, {\n                title: \"Swap \".concat(fromAsset.symbol, \" for \").concat(toAsset.symbol),\n                type: 'Swap',\n                verb: 'Swap Successful',\n                transactions: [{\n                  uuid: allowanceTXID,\n                  description: \"Checking your \".concat(fromAsset.symbol, \" allowance\"),\n                  status: 'WAITING'\n                }, {\n                  uuid: swapTXID,\n                  description: \"Swap \".concat(formatCurrency(fromAmount), \" \").concat(fromAsset.symbol, \" for \").concat(toAsset.symbol),\n                  status: 'WAITING'\n                }]\n              });\n\n              allowance = 0; // CHECK ALLOWANCES AND SET TX DISPLAY\n\n              if (!(fromAsset.address !== 'FTM')) {\n                _context50.next = 24;\n                break;\n              }\n\n              _context50.next = 20;\n              return _this._getSwapAllowance(_web19, fromAsset, account);\n\n            case 20:\n              allowance = _context50.sent;\n\n              if (BigNumber(allowance).lt(fromAmount)) {\n                _this.emitter.emit(ACTIONS.TX_STATUS, {\n                  uuid: allowanceTXID,\n                  description: \"Allow the router to spend your \".concat(fromAsset.symbol)\n                });\n              } else {\n                _this.emitter.emit(ACTIONS.TX_STATUS, {\n                  uuid: allowanceTXID,\n                  description: \"Allowance on \".concat(fromAsset.symbol, \" sufficient\"),\n                  status: 'DONE'\n                });\n              }\n\n              _context50.next = 26;\n              break;\n\n            case 24:\n              allowance = MAX_UINT256;\n\n              _this.emitter.emit(ACTIONS.TX_STATUS, {\n                uuid: allowanceTXID,\n                description: \"Allowance on \".concat(fromAsset.symbol, \" sufficient\"),\n                status: 'DONE'\n              });\n\n            case 26:\n              _context50.next = 28;\n              return stores.accountStore.getGasPrice();\n\n            case 28:\n              gasPrice = _context50.sent;\n              allowanceCallsPromises = []; // SUBMIT REQUIRED ALLOWANCE TRANSACTIONS\n\n              if (BigNumber(allowance).lt(fromAmount)) {\n                tokenContract = new _web19.eth.Contract(CONTRACTS.ERC20_ABI, fromAsset.address);\n                tokenPromise = new Promise(function (resolve, reject) {\n                  context._callContractWait(_web19, tokenContract, 'approve', [CONTRACTS.ROUTER_ADDRESS, MAX_UINT256], account, gasPrice, null, null, allowanceTXID, function (err) {\n                    if (err) {\n                      reject(err);\n                      return;\n                    }\n\n                    resolve();\n                  });\n                });\n                allowanceCallsPromises.push(tokenPromise);\n              }\n\n              _context50.next = 33;\n              return Promise.all(allowanceCallsPromises);\n\n            case 33:\n              done = _context50.sent;\n              // SUBMIT SWAP TRANSACTION\n              sendSlippage = BigNumber(100).minus(slippage).div(100);\n              sendFromAmount = BigNumber(fromAmount).times(Math.pow(10, fromAsset.decimals)).toFixed(0);\n              sendMinAmountOut = BigNumber(quote.output.finalValue).times(Math.pow(10, toAsset.decimals)).times(sendSlippage).toFixed(0);\n              deadline = '' + moment().add(600, 'seconds').unix();\n              routerContract = new _web19.eth.Contract(CONTRACTS.ROUTER_ABI, CONTRACTS.ROUTER_ADDRESS);\n              func = 'swapExactTokensForTokens';\n              params = [sendFromAmount, sendMinAmountOut, quote.output.routes, account.address, deadline];\n              sendValue = null;\n\n              if (fromAsset.address === 'FTM') {\n                func = 'swapExactFTMForTokens';\n                params = [sendMinAmountOut, quote.output.routes, account.address, deadline];\n                sendValue = sendFromAmount;\n              }\n\n              if (toAsset.address === 'FTM') {\n                func = 'swapExactTokensForFTM';\n              }\n\n              _this._callContractWait(_web19, routerContract, func, params, account, gasPrice, null, null, swapTXID, function (err) {\n                if (err) {\n                  return _this.emitter.emit(ACTIONS.ERROR, err);\n                }\n\n                _this._getSpecificAssetInfo(_web19, account, fromAsset.address);\n\n                _this._getSpecificAssetInfo(_web19, account, toAsset.address);\n\n                _this._getPairInfo(_web19, account);\n\n                _this.emitter.emit(ACTIONS.SWAP_RETURNED);\n              }, null, sendValue);\n\n              _context50.next = 51;\n              break;\n\n            case 47:\n              _context50.prev = 47;\n              _context50.t0 = _context50[\"catch\"](0);\n              console.error(_context50.t0);\n\n              _this.emitter.emit(ACTIONS.ERROR, _context50.t0);\n\n            case 51:\n            case \"end\":\n              return _context50.stop();\n          }\n        }\n      }, _callee50, null, [[0, 47]]);\n    }));\n\n    return function (_x64) {\n      return _ref50.apply(this, arguments);\n    };\n  }());\n\n  _defineProperty(this, \"_getSpecificAssetInfo\", /*#__PURE__*/function () {\n    var _ref51 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee52(web3, account, assetAddress) {\n      var baseAssets, ba;\n      return _regeneratorRuntime.wrap(function _callee52$(_context52) {\n        while (1) {\n          switch (_context52.prev = _context52.next) {\n            case 0:\n              _context52.prev = 0;\n              baseAssets = _this.getStore(\"baseAssets\");\n\n              if (baseAssets) {\n                _context52.next = 5;\n                break;\n              }\n\n              console.warn('baseAssets not found');\n              return _context52.abrupt(\"return\", null);\n\n            case 5:\n              _context52.next = 7;\n              return Promise.all(baseAssets.map( /*#__PURE__*/function () {\n                var _ref52 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee51(asset) {\n                  var bal, assetContract, _yield$Promise$all39, _yield$Promise$all40, balanceOf;\n\n                  return _regeneratorRuntime.wrap(function _callee51$(_context51) {\n                    while (1) {\n                      switch (_context51.prev = _context51.next) {\n                        case 0:\n                          if (!(asset.address.toLowerCase() === assetAddress.toLowerCase())) {\n                            _context51.next = 15;\n                            break;\n                          }\n\n                          if (!(asset.address === 'FTM')) {\n                            _context51.next = 8;\n                            break;\n                          }\n\n                          _context51.next = 4;\n                          return web3.eth.getBalance(account.address);\n\n                        case 4:\n                          bal = _context51.sent;\n                          asset.balance = BigNumber(bal).div(Math.pow(10, asset.decimals)).toFixed(asset.decimals);\n                          _context51.next = 15;\n                          break;\n\n                        case 8:\n                          assetContract = new web3.eth.Contract(CONTRACTS.ERC20_ABI, asset.address);\n                          _context51.next = 11;\n                          return Promise.all([assetContract.methods.balanceOf(account.address).call()]);\n\n                        case 11:\n                          _yield$Promise$all39 = _context51.sent;\n                          _yield$Promise$all40 = _slicedToArray(_yield$Promise$all39, 1);\n                          balanceOf = _yield$Promise$all40[0];\n                          asset.balance = BigNumber(balanceOf).div(Math.pow(10, asset.decimals)).toFixed(asset.decimals);\n\n                        case 15:\n                          return _context51.abrupt(\"return\", asset);\n\n                        case 16:\n                        case \"end\":\n                          return _context51.stop();\n                      }\n                    }\n                  }, _callee51);\n                }));\n\n                return function (_x68) {\n                  return _ref52.apply(this, arguments);\n                };\n              }()));\n\n            case 7:\n              ba = _context52.sent;\n\n              _this.setStore({\n                baseAssets: ba\n              });\n\n              _this.emitter.emit(ACTIONS.UPDATED);\n\n              _context52.next = 16;\n              break;\n\n            case 12:\n              _context52.prev = 12;\n              _context52.t0 = _context52[\"catch\"](0);\n              console.log(_context52.t0);\n              return _context52.abrupt(\"return\", null);\n\n            case 16:\n            case \"end\":\n              return _context52.stop();\n          }\n        }\n      }, _callee52, null, [[0, 12]]);\n    }));\n\n    return function (_x65, _x66, _x67) {\n      return _ref51.apply(this, arguments);\n    };\n  }());\n\n  _defineProperty(this, \"_getSwapAllowance\", /*#__PURE__*/function () {\n    var _ref53 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee53(web3, token, account) {\n      var tokenContract, allowance;\n      return _regeneratorRuntime.wrap(function _callee53$(_context53) {\n        while (1) {\n          switch (_context53.prev = _context53.next) {\n            case 0:\n              _context53.prev = 0;\n              tokenContract = new web3.eth.Contract(CONTRACTS.ERC20_ABI, token.address);\n              _context53.next = 4;\n              return tokenContract.methods.allowance(account.address, CONTRACTS.ROUTER_ADDRESS).call();\n\n            case 4:\n              allowance = _context53.sent;\n              return _context53.abrupt(\"return\", BigNumber(allowance).div(Math.pow(10, token.decimals)).toFixed(token.decimals));\n\n            case 8:\n              _context53.prev = 8;\n              _context53.t0 = _context53[\"catch\"](0);\n              console.error(_context53.t0);\n              return _context53.abrupt(\"return\", null);\n\n            case 12:\n            case \"end\":\n              return _context53.stop();\n          }\n        }\n      }, _callee53, null, [[0, 8]]);\n    }));\n\n    return function (_x69, _x70, _x71) {\n      return _ref53.apply(this, arguments);\n    };\n  }());\n\n  _defineProperty(this, \"getVestNFTs\", /*#__PURE__*/function () {\n    var _ref54 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee55(payload) {\n      var account, _web20, veToken, govToken, vestingContract, nftsLength, arr, nfts;\n\n      return _regeneratorRuntime.wrap(function _callee55$(_context55) {\n        while (1) {\n          switch (_context55.prev = _context55.next) {\n            case 0:\n              _context55.prev = 0;\n              account = stores.accountStore.getStore(\"account\");\n\n              if (account) {\n                _context55.next = 5;\n                break;\n              }\n\n              console.warn('account not found');\n              return _context55.abrupt(\"return\", null);\n\n            case 5:\n              _context55.next = 7;\n              return stores.accountStore.getWeb3Provider();\n\n            case 7:\n              _web20 = _context55.sent;\n\n              if (_web20) {\n                _context55.next = 11;\n                break;\n              }\n\n              console.warn('web3 not found');\n              return _context55.abrupt(\"return\", null);\n\n            case 11:\n              veToken = _this.getStore('veToken');\n              govToken = _this.getStore('govToken');\n              vestingContract = new _web20.eth.Contract(CONTRACTS.VE_TOKEN_ABI, CONTRACTS.VE_TOKEN_ADDRESS);\n              _context55.next = 16;\n              return vestingContract.methods.balanceOf(account.address).call();\n\n            case 16:\n              nftsLength = _context55.sent;\n              arr = Array.from({\n                length: parseInt(nftsLength)\n              }, function (v, i) {\n                return i;\n              });\n              _context55.next = 20;\n              return Promise.all(arr.map( /*#__PURE__*/function () {\n                var _ref55 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee54(idx) {\n                  var tokenIndex, locked, lockValue;\n                  return _regeneratorRuntime.wrap(function _callee54$(_context54) {\n                    while (1) {\n                      switch (_context54.prev = _context54.next) {\n                        case 0:\n                          _context54.next = 2;\n                          return vestingContract.methods.tokenOfOwnerByIndex(account.address, idx).call();\n\n                        case 2:\n                          tokenIndex = _context54.sent;\n                          _context54.next = 5;\n                          return vestingContract.methods.locked(tokenIndex).call();\n\n                        case 5:\n                          locked = _context54.sent;\n                          _context54.next = 8;\n                          return vestingContract.methods.balanceOfNFT(tokenIndex).call();\n\n                        case 8:\n                          lockValue = _context54.sent;\n                          return _context54.abrupt(\"return\", {\n                            id: tokenIndex,\n                            lockEnds: locked.end,\n                            lockAmount: BigNumber(locked.amount).div(Math.pow(10, govToken.decimals)).toFixed(govToken.decimals),\n                            lockValue: BigNumber(lockValue).div(Math.pow(10, veToken.decimals)).toFixed(veToken.decimals)\n                          });\n\n                        case 10:\n                        case \"end\":\n                          return _context54.stop();\n                      }\n                    }\n                  }, _callee54);\n                }));\n\n                return function (_x73) {\n                  return _ref55.apply(this, arguments);\n                };\n              }()));\n\n            case 20:\n              nfts = _context55.sent;\n\n              _this.setStore({\n                vestNFTs: nfts\n              });\n\n              _this.emitter.emit(ACTIONS.VEST_NFTS_RETURNED, nfts);\n\n              _context55.next = 29;\n              break;\n\n            case 25:\n              _context55.prev = 25;\n              _context55.t0 = _context55[\"catch\"](0);\n              console.error(_context55.t0);\n\n              _this.emitter.emit(ACTIONS.ERROR, _context55.t0);\n\n            case 29:\n            case \"end\":\n              return _context55.stop();\n          }\n        }\n      }, _callee55, null, [[0, 25]]);\n    }));\n\n    return function (_x72) {\n      return _ref54.apply(this, arguments);\n    };\n  }());\n\n  _defineProperty(this, \"createVest\", /*#__PURE__*/function () {\n    var _ref56 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee56(payload) {\n      var account, _web21, govToken, _payload$content13, amount, unlockTime, allowanceTXID, vestTXID, unlockString, allowance, gasPrice, allowanceCallsPromises, tokenContract, tokenPromise, done, sendAmount, veTokenContract;\n\n      return _regeneratorRuntime.wrap(function _callee56$(_context56) {\n        while (1) {\n          switch (_context56.prev = _context56.next) {\n            case 0:\n              _context56.prev = 0;\n              account = stores.accountStore.getStore(\"account\");\n\n              if (account) {\n                _context56.next = 5;\n                break;\n              }\n\n              console.warn('account not found');\n              return _context56.abrupt(\"return\", null);\n\n            case 5:\n              _context56.next = 7;\n              return stores.accountStore.getWeb3Provider();\n\n            case 7:\n              _web21 = _context56.sent;\n\n              if (_web21) {\n                _context56.next = 11;\n                break;\n              }\n\n              console.warn('web3 not found');\n              return _context56.abrupt(\"return\", null);\n\n            case 11:\n              govToken = _this.getStore('govToken');\n              _payload$content13 = payload.content, amount = _payload$content13.amount, unlockTime = _payload$content13.unlockTime; // ADD TRNASCTIONS TO TRANSACTION QUEUE DISPLAY\n\n              allowanceTXID = _this.getTXUUID();\n              vestTXID = _this.getTXUUID();\n              unlockString = moment().add(unlockTime, 'seconds').format('YYYY-MM-DD');\n\n              _this.emitter.emit(ACTIONS.TX_ADDED, {\n                title: \"Vest \".concat(govToken.symbol, \" until \").concat(unlockString),\n                type: 'Vest',\n                verb: 'Vest Created',\n                transactions: [{\n                  uuid: allowanceTXID,\n                  description: \"Checking your \".concat(govToken.symbol, \" allowance\"),\n                  status: 'WAITING'\n                }, {\n                  uuid: vestTXID,\n                  description: \"Vesting your tokens\",\n                  status: 'WAITING'\n                }]\n              }); // CHECK ALLOWANCES AND SET TX DISPLAY\n\n\n              _context56.next = 19;\n              return _this._getVestAllowance(_web21, govToken, account);\n\n            case 19:\n              allowance = _context56.sent;\n\n              if (BigNumber(allowance).lt(amount)) {\n                _this.emitter.emit(ACTIONS.TX_STATUS, {\n                  uuid: allowanceTXID,\n                  description: \"Allow the vesting contract to use your \".concat(govToken.symbol)\n                });\n              } else {\n                _this.emitter.emit(ACTIONS.TX_STATUS, {\n                  uuid: allowanceTXID,\n                  description: \"Allowance on \".concat(govToken.symbol, \" sufficient\"),\n                  status: 'DONE'\n                });\n              }\n\n              _context56.next = 23;\n              return stores.accountStore.getGasPrice();\n\n            case 23:\n              gasPrice = _context56.sent;\n              allowanceCallsPromises = []; // SUBMIT REQUIRED ALLOWANCE TRANSACTIONS\n\n              if (BigNumber(allowance).lt(amount)) {\n                tokenContract = new _web21.eth.Contract(CONTRACTS.ERC20_ABI, govToken.address);\n                tokenPromise = new Promise(function (resolve, reject) {\n                  _this._callContractWait(_web21, tokenContract, 'approve', [CONTRACTS.VE_TOKEN_ADDRESS, MAX_UINT256], account, gasPrice, null, null, allowanceTXID, function (err) {\n                    if (err) {\n                      reject(err);\n                      return;\n                    }\n\n                    resolve();\n                  });\n                });\n                allowanceCallsPromises.push(tokenPromise);\n              }\n\n              _context56.next = 28;\n              return Promise.all(allowanceCallsPromises);\n\n            case 28:\n              done = _context56.sent;\n              // SUBMIT VEST TRANSACTION\n              sendAmount = BigNumber(amount).times(Math.pow(10, govToken.decimals)).toFixed(0);\n              veTokenContract = new _web21.eth.Contract(CONTRACTS.VE_TOKEN_ABI, CONTRACTS.VE_TOKEN_ADDRESS);\n\n              _this._callContractWait(_web21, veTokenContract, 'create_lock', [sendAmount, unlockTime + ''], account, gasPrice, null, null, vestTXID, function (err) {\n                if (err) {\n                  return _this.emitter.emit(ACTIONS.ERROR, err);\n                }\n\n                _this._getGovTokenInfo(_web21, account);\n\n                _this.getNFTByID('fetchAll');\n\n                _this.emitter.emit(ACTIONS.CREATE_VEST_RETURNED);\n              });\n\n              _context56.next = 38;\n              break;\n\n            case 34:\n              _context56.prev = 34;\n              _context56.t0 = _context56[\"catch\"](0);\n              console.error(_context56.t0);\n\n              _this.emitter.emit(ACTIONS.ERROR, _context56.t0);\n\n            case 38:\n            case \"end\":\n              return _context56.stop();\n          }\n        }\n      }, _callee56, null, [[0, 34]]);\n    }));\n\n    return function (_x74) {\n      return _ref56.apply(this, arguments);\n    };\n  }());\n\n  _defineProperty(this, \"_getVestAllowance\", /*#__PURE__*/function () {\n    var _ref57 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee57(web3, token, account) {\n      var tokenContract, allowance;\n      return _regeneratorRuntime.wrap(function _callee57$(_context57) {\n        while (1) {\n          switch (_context57.prev = _context57.next) {\n            case 0:\n              _context57.prev = 0;\n              tokenContract = new web3.eth.Contract(CONTRACTS.ERC20_ABI, token.address);\n              _context57.next = 4;\n              return tokenContract.methods.allowance(account.address, CONTRACTS.VE_TOKEN_ADDRESS).call();\n\n            case 4:\n              allowance = _context57.sent;\n              return _context57.abrupt(\"return\", BigNumber(allowance).div(Math.pow(10, token.decimals)).toFixed(token.decimals));\n\n            case 8:\n              _context57.prev = 8;\n              _context57.t0 = _context57[\"catch\"](0);\n              console.error(_context57.t0);\n              return _context57.abrupt(\"return\", null);\n\n            case 12:\n            case \"end\":\n              return _context57.stop();\n          }\n        }\n      }, _callee57, null, [[0, 8]]);\n    }));\n\n    return function (_x75, _x76, _x77) {\n      return _ref57.apply(this, arguments);\n    };\n  }());\n\n  _defineProperty(this, \"increaseVestAmount\", /*#__PURE__*/function () {\n    var _ref58 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee58(payload) {\n      var account, _web22, govToken, _payload$content14, amount, tokenID, allowanceTXID, vestTXID, allowance, gasPrice, allowanceCallsPromises, tokenContract, tokenPromise, done, sendAmount, veTokenContract;\n\n      return _regeneratorRuntime.wrap(function _callee58$(_context58) {\n        while (1) {\n          switch (_context58.prev = _context58.next) {\n            case 0:\n              _context58.prev = 0;\n              account = stores.accountStore.getStore(\"account\");\n\n              if (account) {\n                _context58.next = 5;\n                break;\n              }\n\n              console.warn('account not found');\n              return _context58.abrupt(\"return\", null);\n\n            case 5:\n              _context58.next = 7;\n              return stores.accountStore.getWeb3Provider();\n\n            case 7:\n              _web22 = _context58.sent;\n\n              if (_web22) {\n                _context58.next = 11;\n                break;\n              }\n\n              console.warn('web3 not found');\n              return _context58.abrupt(\"return\", null);\n\n            case 11:\n              govToken = _this.getStore('govToken');\n              _payload$content14 = payload.content, amount = _payload$content14.amount, tokenID = _payload$content14.tokenID; // ADD TRNASCTIONS TO TRANSACTION QUEUE DISPLAY\n\n              allowanceTXID = _this.getTXUUID();\n              vestTXID = _this.getTXUUID();\n\n              _this.emitter.emit(ACTIONS.TX_ADDED, {\n                title: \"Increase vest amount on token #\".concat(tokenID),\n                type: 'Vest',\n                verb: 'Vest Increased',\n                transactions: [{\n                  uuid: allowanceTXID,\n                  description: \"Checking your \".concat(govToken.symbol, \" allowance\"),\n                  status: 'WAITING'\n                }, {\n                  uuid: vestTXID,\n                  description: \"Increasing your vest amount\",\n                  status: 'WAITING'\n                }]\n              }); // CHECK ALLOWANCES AND SET TX DISPLAY\n\n\n              _context58.next = 18;\n              return _this._getVestAllowance(_web22, govToken, account);\n\n            case 18:\n              allowance = _context58.sent;\n\n              if (BigNumber(allowance).lt(amount)) {\n                _this.emitter.emit(ACTIONS.TX_STATUS, {\n                  uuid: allowanceTXID,\n                  description: \"Allow vesting contract to use your \".concat(govToken.symbol)\n                });\n              } else {\n                _this.emitter.emit(ACTIONS.TX_STATUS, {\n                  uuid: allowanceTXID,\n                  description: \"Allowance on \".concat(govToken.symbol, \" sufficient\"),\n                  status: 'DONE'\n                });\n              }\n\n              _context58.next = 22;\n              return stores.accountStore.getGasPrice();\n\n            case 22:\n              gasPrice = _context58.sent;\n              allowanceCallsPromises = []; // SUBMIT REQUIRED ALLOWANCE TRANSACTIONS\n\n              if (BigNumber(allowance).lt(amount)) {\n                tokenContract = new _web22.eth.Contract(CONTRACTS.ERC20_ABI, govToken.address);\n                tokenPromise = new Promise(function (resolve, reject) {\n                  _this._callContractWait(_web22, tokenContract, 'approve', [CONTRACTS.VE_TOKEN_ADDRESS, MAX_UINT256], account, gasPrice, null, null, allowanceTXID, function (err) {\n                    if (err) {\n                      reject(err);\n                      return;\n                    }\n\n                    resolve();\n                  });\n                });\n                allowanceCallsPromises.push(tokenPromise);\n              }\n\n              _context58.next = 27;\n              return Promise.all(allowanceCallsPromises);\n\n            case 27:\n              done = _context58.sent;\n              // SUBMIT INCREASE TRANSACTION\n              sendAmount = BigNumber(amount).times(Math.pow(10, govToken.decimals)).toFixed(0);\n              veTokenContract = new _web22.eth.Contract(CONTRACTS.VE_TOKEN_ABI, CONTRACTS.VE_TOKEN_ADDRESS);\n\n              _this._callContractWait(_web22, veTokenContract, 'increase_amount', [tokenID, sendAmount], account, gasPrice, null, null, vestTXID, function (err) {\n                if (err) {\n                  return _this.emitter.emit(ACTIONS.ERROR, err);\n                }\n\n                _this._getGovTokenInfo(_web22, account);\n\n                _this._updateVestNFTByID(tokenID);\n\n                _this.emitter.emit(ACTIONS.INCREASE_VEST_AMOUNT_RETURNED);\n              });\n\n              _context58.next = 37;\n              break;\n\n            case 33:\n              _context58.prev = 33;\n              _context58.t0 = _context58[\"catch\"](0);\n              console.error(_context58.t0);\n\n              _this.emitter.emit(ACTIONS.ERROR, _context58.t0);\n\n            case 37:\n            case \"end\":\n              return _context58.stop();\n          }\n        }\n      }, _callee58, null, [[0, 33]]);\n    }));\n\n    return function (_x78) {\n      return _ref58.apply(this, arguments);\n    };\n  }());\n\n  _defineProperty(this, \"increaseVestDuration\", /*#__PURE__*/function () {\n    var _ref59 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee59(payload) {\n      var account, _web23, govToken, _payload$content15, tokenID, unlockTime, vestTXID, gasPrice, veTokenContract;\n\n      return _regeneratorRuntime.wrap(function _callee59$(_context59) {\n        while (1) {\n          switch (_context59.prev = _context59.next) {\n            case 0:\n              _context59.prev = 0;\n              account = stores.accountStore.getStore(\"account\");\n\n              if (account) {\n                _context59.next = 5;\n                break;\n              }\n\n              console.warn('account not found');\n              return _context59.abrupt(\"return\", null);\n\n            case 5:\n              _context59.next = 7;\n              return stores.accountStore.getWeb3Provider();\n\n            case 7:\n              _web23 = _context59.sent;\n\n              if (_web23) {\n                _context59.next = 11;\n                break;\n              }\n\n              console.warn('web3 not found');\n              return _context59.abrupt(\"return\", null);\n\n            case 11:\n              govToken = _this.getStore('govToken');\n              _payload$content15 = payload.content, tokenID = _payload$content15.tokenID, unlockTime = _payload$content15.unlockTime; // ADD TRNASCTIONS TO TRANSACTION QUEUE DISPLAY\n\n              vestTXID = _this.getTXUUID();\n\n              _this.emitter.emit(ACTIONS.TX_ADDED, {\n                title: \"Increase unlock time on token #\".concat(tokenID),\n                type: 'Vest',\n                verb: 'Vest Increased',\n                transactions: [{\n                  uuid: vestTXID,\n                  description: \"Increasing your vest duration\",\n                  status: 'WAITING'\n                }]\n              });\n\n              _context59.next = 17;\n              return stores.accountStore.getGasPrice();\n\n            case 17:\n              gasPrice = _context59.sent;\n              // SUBMIT INCREASE TRANSACTION\n              veTokenContract = new _web23.eth.Contract(CONTRACTS.VE_TOKEN_ABI, CONTRACTS.VE_TOKEN_ADDRESS);\n\n              _this._callContractWait(_web23, veTokenContract, 'increase_unlock_time', [tokenID, unlockTime + ''], account, gasPrice, null, null, vestTXID, function (err) {\n                if (err) {\n                  return _this.emitter.emit(ACTIONS.ERROR, err);\n                }\n\n                _this._updateVestNFTByID(tokenID);\n\n                _this.emitter.emit(ACTIONS.INCREASE_VEST_DURATION_RETURNED);\n              });\n\n              _context59.next = 26;\n              break;\n\n            case 22:\n              _context59.prev = 22;\n              _context59.t0 = _context59[\"catch\"](0);\n              console.error(_context59.t0);\n\n              _this.emitter.emit(ACTIONS.ERROR, _context59.t0);\n\n            case 26:\n            case \"end\":\n              return _context59.stop();\n          }\n        }\n      }, _callee59, null, [[0, 22]]);\n    }));\n\n    return function (_x79) {\n      return _ref59.apply(this, arguments);\n    };\n  }());\n\n  _defineProperty(this, \"withdrawVest\", /*#__PURE__*/function () {\n    var _ref60 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee60(payload) {\n      var account, _web24, govToken, tokenID, vestTXID, gasPrice, veTokenContract;\n\n      return _regeneratorRuntime.wrap(function _callee60$(_context60) {\n        while (1) {\n          switch (_context60.prev = _context60.next) {\n            case 0:\n              _context60.prev = 0;\n              account = stores.accountStore.getStore(\"account\");\n\n              if (account) {\n                _context60.next = 5;\n                break;\n              }\n\n              console.warn('account not found');\n              return _context60.abrupt(\"return\", null);\n\n            case 5:\n              _context60.next = 7;\n              return stores.accountStore.getWeb3Provider();\n\n            case 7:\n              _web24 = _context60.sent;\n\n              if (_web24) {\n                _context60.next = 11;\n                break;\n              }\n\n              console.warn('web3 not found');\n              return _context60.abrupt(\"return\", null);\n\n            case 11:\n              govToken = _this.getStore('govToken');\n              tokenID = payload.content.tokenID; // ADD TRNASCTIONS TO TRANSACTION QUEUE DISPLAY\n\n              vestTXID = _this.getTXUUID();\n\n              _this.emitter.emit(ACTIONS.TX_ADDED, {\n                title: \"Withdraw vest amount on token #\".concat(tokenID),\n                type: 'Vest',\n                verb: 'Vest Withdrawn',\n                transactions: [{\n                  uuid: vestTXID,\n                  description: \"Withdrawing your expired tokens\",\n                  status: 'WAITING'\n                }]\n              });\n\n              _context60.next = 17;\n              return stores.accountStore.getGasPrice();\n\n            case 17:\n              gasPrice = _context60.sent;\n              // SUBMIT INCREASE TRANSACTION\n              veTokenContract = new _web24.eth.Contract(CONTRACTS.VE_TOKEN_ABI, CONTRACTS.VE_TOKEN_ADDRESS);\n\n              _this._callContractWait(_web24, veTokenContract, 'withdraw', [tokenID], account, gasPrice, null, null, vestTXID, function (err) {\n                if (err) {\n                  return _this.emitter.emit(ACTIONS.ERROR, err);\n                }\n\n                _this._updateVestNFTByID(tokenID);\n\n                _this.emitter.emit(ACTIONS.WITHDRAW_VEST_RETURNED);\n              });\n\n              _context60.next = 26;\n              break;\n\n            case 22:\n              _context60.prev = 22;\n              _context60.t0 = _context60[\"catch\"](0);\n              console.error(_context60.t0);\n\n              _this.emitter.emit(ACTIONS.ERROR, _context60.t0);\n\n            case 26:\n            case \"end\":\n              return _context60.stop();\n          }\n        }\n      }, _callee60, null, [[0, 22]]);\n    }));\n\n    return function (_x80) {\n      return _ref60.apply(this, arguments);\n    };\n  }());\n\n  _defineProperty(this, \"vote\", /*#__PURE__*/function () {\n    var _ref61 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee61(payload) {\n      var account, _web25, govToken, _payload$content16, tokenID, votes, voteTXID, gasPrice, gaugesContract, onlyVotes, tokens, voteCounts;\n\n      return _regeneratorRuntime.wrap(function _callee61$(_context61) {\n        while (1) {\n          switch (_context61.prev = _context61.next) {\n            case 0:\n              _context61.prev = 0;\n              account = stores.accountStore.getStore(\"account\");\n\n              if (account) {\n                _context61.next = 5;\n                break;\n              }\n\n              console.warn('account not found');\n              return _context61.abrupt(\"return\", null);\n\n            case 5:\n              _context61.next = 7;\n              return stores.accountStore.getWeb3Provider();\n\n            case 7:\n              _web25 = _context61.sent;\n\n              if (_web25) {\n                _context61.next = 11;\n                break;\n              }\n\n              console.warn('web3 not found');\n              return _context61.abrupt(\"return\", null);\n\n            case 11:\n              govToken = _this.getStore('govToken');\n              _payload$content16 = payload.content, tokenID = _payload$content16.tokenID, votes = _payload$content16.votes; // ADD TRNASCTIONS TO TRANSACTION QUEUE DISPLAY\n\n              voteTXID = _this.getTXUUID();\n\n              _this.emitter.emit(ACTIONS.TX_ADDED, {\n                title: \"Cast vote using token #\".concat(tokenID),\n                verb: 'Votes Cast',\n                transactions: [{\n                  uuid: voteTXID,\n                  description: \"Cast votes\",\n                  status: 'WAITING'\n                }]\n              });\n\n              _context61.next = 17;\n              return stores.accountStore.getGasPrice();\n\n            case 17:\n              gasPrice = _context61.sent;\n              // SUBMIT INCREASE TRANSACTION\n              gaugesContract = new _web25.eth.Contract(CONTRACTS.VOTER_ABI, CONTRACTS.VOTER_ADDRESS);\n              onlyVotes = votes.filter(function (vote) {\n                return BigNumber(vote.value).gt(0) || BigNumber(vote.value).lt(0);\n              });\n              tokens = onlyVotes.map(function (vote) {\n                return vote.address;\n              });\n              voteCounts = onlyVotes.map(function (vote) {\n                return BigNumber(vote.value).times(100).toFixed(0);\n              });\n\n              _this._callContractWait(_web25, gaugesContract, 'vote', [tokenID, tokens, voteCounts], account, gasPrice, null, null, voteTXID, function (err) {\n                if (err) {\n                  return _this.emitter.emit(ACTIONS.ERROR, err);\n                }\n\n                _this.emitter.emit(ACTIONS.VOTE_RETURNED);\n              });\n\n              _context61.next = 29;\n              break;\n\n            case 25:\n              _context61.prev = 25;\n              _context61.t0 = _context61[\"catch\"](0);\n              console.error(_context61.t0);\n\n              _this.emitter.emit(ACTIONS.ERROR, _context61.t0);\n\n            case 29:\n            case \"end\":\n              return _context61.stop();\n          }\n        }\n      }, _callee61, null, [[0, 25]]);\n    }));\n\n    return function (_x81) {\n      return _ref61.apply(this, arguments);\n    };\n  }());\n\n  _defineProperty(this, \"getVestVotes\", /*#__PURE__*/function () {\n    var _ref62 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee62(payload) {\n      var account, _web26, tokenID, pairs, filteredPairs, gaugesContract, multicall, calls, voteCounts, votes, totalVotes, i;\n\n      return _regeneratorRuntime.wrap(function _callee62$(_context62) {\n        while (1) {\n          switch (_context62.prev = _context62.next) {\n            case 0:\n              _context62.prev = 0;\n              account = stores.accountStore.getStore(\"account\");\n\n              if (account) {\n                _context62.next = 5;\n                break;\n              }\n\n              console.warn('account not found');\n              return _context62.abrupt(\"return\", null);\n\n            case 5:\n              _context62.next = 7;\n              return stores.accountStore.getWeb3Provider();\n\n            case 7:\n              _web26 = _context62.sent;\n\n              if (_web26) {\n                _context62.next = 11;\n                break;\n              }\n\n              console.warn('web3 not found');\n              return _context62.abrupt(\"return\", null);\n\n            case 11:\n              tokenID = payload.content.tokenID;\n              pairs = _this.getStore('pairs');\n\n              if (pairs) {\n                _context62.next = 15;\n                break;\n              }\n\n              return _context62.abrupt(\"return\", null);\n\n            case 15:\n              if (tokenID) {\n                _context62.next = 17;\n                break;\n              }\n\n              return _context62.abrupt(\"return\");\n\n            case 17:\n              filteredPairs = pairs.filter(function (pair) {\n                return pair && pair.gauge && pair.gauge.address;\n              });\n              gaugesContract = new _web26.eth.Contract(CONTRACTS.VOTER_ABI, CONTRACTS.VOTER_ADDRESS);\n              _context62.next = 21;\n              return stores.accountStore.getMulticall();\n\n            case 21:\n              multicall = _context62.sent;\n              calls = filteredPairs.map(function (pair) {\n                return gaugesContract.methods.votes(tokenID, pair.address);\n              });\n              _context62.next = 25;\n              return multicall.aggregate(calls);\n\n            case 25:\n              voteCounts = _context62.sent;\n              votes = [];\n              totalVotes = voteCounts.reduce(function (curr, acc) {\n                var num = BigNumber(acc).gt(0) ? acc : BigNumber(acc).times(-1).toNumber(0);\n                return BigNumber(curr).plus(num);\n              }, 0);\n\n              for (i = 0; i < voteCounts.length; i++) {\n                votes.push({\n                  address: filteredPairs[i].address,\n                  votePercent: BigNumber(totalVotes).gt(0) || BigNumber(totalVotes).lt(0) ? BigNumber(voteCounts[i]).times(100).div(totalVotes).toFixed(0) : '0'\n                });\n              }\n\n              _this.emitter.emit(ACTIONS.VEST_VOTES_RETURNED, votes);\n\n              _context62.next = 36;\n              break;\n\n            case 32:\n              _context62.prev = 32;\n              _context62.t0 = _context62[\"catch\"](0);\n              console.error(_context62.t0);\n\n              _this.emitter.emit(ACTIONS.ERROR, _context62.t0);\n\n            case 36:\n            case \"end\":\n              return _context62.stop();\n          }\n        }\n      }, _callee62, null, [[0, 32]]);\n    }));\n\n    return function (_x82) {\n      return _ref62.apply(this, arguments);\n    };\n  }());\n\n  _defineProperty(this, \"createBribe\", /*#__PURE__*/function () {\n    var _ref63 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee64(payload) {\n      var account, _web27, _payload$content17, asset, amount, gauge, allowanceTXID, bribeTXID, allowance, gasPrice, allowanceCallsPromises, tokenContract, tokenPromise, done, bribeContract, sendAmount;\n\n      return _regeneratorRuntime.wrap(function _callee64$(_context64) {\n        while (1) {\n          switch (_context64.prev = _context64.next) {\n            case 0:\n              _context64.prev = 0;\n              account = stores.accountStore.getStore(\"account\");\n\n              if (account) {\n                _context64.next = 5;\n                break;\n              }\n\n              console.warn('account not found');\n              return _context64.abrupt(\"return\", null);\n\n            case 5:\n              _context64.next = 7;\n              return stores.accountStore.getWeb3Provider();\n\n            case 7:\n              _web27 = _context64.sent;\n\n              if (_web27) {\n                _context64.next = 11;\n                break;\n              }\n\n              console.warn('web3 not found');\n              return _context64.abrupt(\"return\", null);\n\n            case 11:\n              _payload$content17 = payload.content, asset = _payload$content17.asset, amount = _payload$content17.amount, gauge = _payload$content17.gauge; // ADD TRNASCTIONS TO TRANSACTION QUEUE DISPLAY\n\n              allowanceTXID = _this.getTXUUID();\n              bribeTXID = _this.getTXUUID();\n\n              _this.emitter.emit(ACTIONS.TX_ADDED, {\n                title: \"Create bribe on \".concat(gauge.token0.symbol, \"/\").concat(gauge.token1.symbol),\n                verb: 'Bribe Created',\n                transactions: [{\n                  uuid: allowanceTXID,\n                  description: \"Checking your \".concat(asset.symbol, \" allowance\"),\n                  status: 'WAITING'\n                }, {\n                  uuid: bribeTXID,\n                  description: \"Create bribe\",\n                  status: 'WAITING'\n                }]\n              }); // CHECK ALLOWANCES AND SET TX DISPLAY\n\n\n              _context64.next = 17;\n              return _this._getBribeAllowance(_web27, asset, gauge, account);\n\n            case 17:\n              allowance = _context64.sent;\n\n              if (BigNumber(allowance).lt(amount)) {\n                _this.emitter.emit(ACTIONS.TX_STATUS, {\n                  uuid: allowanceTXID,\n                  description: \"Allow the bribe contract to spend your \".concat(asset.symbol)\n                });\n              } else {\n                _this.emitter.emit(ACTIONS.TX_STATUS, {\n                  uuid: allowanceTXID,\n                  description: \"Allowance on \".concat(asset.symbol, \" sufficient\"),\n                  status: 'DONE'\n                });\n              }\n\n              _context64.next = 21;\n              return stores.accountStore.getGasPrice();\n\n            case 21:\n              gasPrice = _context64.sent;\n              allowanceCallsPromises = []; // SUBMIT REQUIRED ALLOWANCE TRANSACTIONS\n\n              if (BigNumber(allowance).lt(amount)) {\n                tokenContract = new _web27.eth.Contract(CONTRACTS.ERC20_ABI, asset.address);\n                tokenPromise = new Promise(function (resolve, reject) {\n                  _this._callContractWait(_web27, tokenContract, 'approve', [gauge.gauge.bribeAddress, MAX_UINT256], account, gasPrice, null, null, allowanceTXID, function (err) {\n                    if (err) {\n                      reject(err);\n                      return;\n                    }\n\n                    resolve();\n                  });\n                });\n                allowanceCallsPromises.push(tokenPromise);\n              }\n\n              _context64.next = 26;\n              return Promise.all(allowanceCallsPromises);\n\n            case 26:\n              done = _context64.sent;\n              // SUBMIT BRIBE TRANSACTION\n              bribeContract = new _web27.eth.Contract(CONTRACTS.BRIBE_ABI, gauge.gauge.bribeAddress);\n              sendAmount = BigNumber(amount).times(Math.pow(10, asset.decimals)).toFixed(0);\n\n              _this._callContractWait(_web27, bribeContract, 'notifyRewardAmount', [asset.address, sendAmount], account, gasPrice, null, null, bribeTXID, /*#__PURE__*/function () {\n                var _ref64 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee63(err) {\n                  return _regeneratorRuntime.wrap(function _callee63$(_context63) {\n                    while (1) {\n                      switch (_context63.prev = _context63.next) {\n                        case 0:\n                          if (!err) {\n                            _context63.next = 2;\n                            break;\n                          }\n\n                          return _context63.abrupt(\"return\", _this.emitter.emit(ACTIONS.ERROR, err));\n\n                        case 2:\n                          _context63.next = 4;\n                          return _this.updatePairsCall(_web27, account);\n\n                        case 4:\n                          _this.emitter.emit(ACTIONS.BRIBE_CREATED);\n\n                        case 5:\n                        case \"end\":\n                          return _context63.stop();\n                      }\n                    }\n                  }, _callee63);\n                }));\n\n                return function (_x84) {\n                  return _ref64.apply(this, arguments);\n                };\n              }());\n\n              _context64.next = 36;\n              break;\n\n            case 32:\n              _context64.prev = 32;\n              _context64.t0 = _context64[\"catch\"](0);\n              console.error(_context64.t0);\n\n              _this.emitter.emit(ACTIONS.ERROR, _context64.t0);\n\n            case 36:\n            case \"end\":\n              return _context64.stop();\n          }\n        }\n      }, _callee64, null, [[0, 32]]);\n    }));\n\n    return function (_x83) {\n      return _ref63.apply(this, arguments);\n    };\n  }());\n\n  _defineProperty(this, \"_getBribeAllowance\", /*#__PURE__*/function () {\n    var _ref65 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee65(web3, token, pair, account) {\n      var tokenContract, allowance;\n      return _regeneratorRuntime.wrap(function _callee65$(_context65) {\n        while (1) {\n          switch (_context65.prev = _context65.next) {\n            case 0:\n              _context65.prev = 0;\n              tokenContract = new web3.eth.Contract(CONTRACTS.ERC20_ABI, token.address);\n              _context65.next = 4;\n              return tokenContract.methods.allowance(account.address, pair.gauge.bribeAddress).call();\n\n            case 4:\n              allowance = _context65.sent;\n              return _context65.abrupt(\"return\", BigNumber(allowance).div(Math.pow(10, token.decimals)).toFixed(token.decimals));\n\n            case 8:\n              _context65.prev = 8;\n              _context65.t0 = _context65[\"catch\"](0);\n              console.error(_context65.t0);\n              return _context65.abrupt(\"return\", null);\n\n            case 12:\n            case \"end\":\n              return _context65.stop();\n          }\n        }\n      }, _callee65, null, [[0, 8]]);\n    }));\n\n    return function (_x85, _x86, _x87, _x88) {\n      return _ref65.apply(this, arguments);\n    };\n  }());\n\n  _defineProperty(this, \"getVestBalances\", /*#__PURE__*/function () {\n    var _ref66 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee68(payload) {\n      var account, _web28, tokenID, pairs, filteredPairs, bribesEarned;\n\n      return _regeneratorRuntime.wrap(function _callee68$(_context68) {\n        while (1) {\n          switch (_context68.prev = _context68.next) {\n            case 0:\n              _context68.prev = 0;\n              account = stores.accountStore.getStore(\"account\");\n\n              if (account) {\n                _context68.next = 5;\n                break;\n              }\n\n              console.warn('account not found');\n              return _context68.abrupt(\"return\", null);\n\n            case 5:\n              _context68.next = 7;\n              return stores.accountStore.getWeb3Provider();\n\n            case 7:\n              _web28 = _context68.sent;\n\n              if (_web28) {\n                _context68.next = 11;\n                break;\n              }\n\n              console.warn('web3 not found');\n              return _context68.abrupt(\"return\", null);\n\n            case 11:\n              tokenID = payload.content.tokenID;\n              pairs = _this.getStore('pairs');\n\n              if (pairs) {\n                _context68.next = 15;\n                break;\n              }\n\n              return _context68.abrupt(\"return\", null);\n\n            case 15:\n              if (tokenID) {\n                _context68.next = 17;\n                break;\n              }\n\n              return _context68.abrupt(\"return\");\n\n            case 17:\n              filteredPairs = pairs.filter(function (pair) {\n                return pair && pair.gauge;\n              });\n              _context68.next = 20;\n              return Promise.all(filteredPairs.map( /*#__PURE__*/function () {\n                var _ref67 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee67(pair) {\n                  var bribesEarned;\n                  return _regeneratorRuntime.wrap(function _callee67$(_context67) {\n                    while (1) {\n                      switch (_context67.prev = _context67.next) {\n                        case 0:\n                          _context67.next = 2;\n                          return Promise.all(pair.gauge.bribes.map( /*#__PURE__*/function () {\n                            var _ref68 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee66(bribe) {\n                              var bribeContract, _yield$Promise$all41, _yield$Promise$all42, earned;\n\n                              return _regeneratorRuntime.wrap(function _callee66$(_context66) {\n                                while (1) {\n                                  switch (_context66.prev = _context66.next) {\n                                    case 0:\n                                      bribeContract = new _web28.eth.Contract(CONTRACTS.BRIBE_ABI, pair.gauge.bribeAddress);\n                                      _context66.next = 3;\n                                      return Promise.all([bribeContract.methods.earned(bribe.token.address, tokenID).call()]);\n\n                                    case 3:\n                                      _yield$Promise$all41 = _context66.sent;\n                                      _yield$Promise$all42 = _slicedToArray(_yield$Promise$all41, 1);\n                                      earned = _yield$Promise$all42[0];\n                                      return _context66.abrupt(\"return\", {\n                                        earned: BigNumber(earned).div(Math.pow(10, bribe.token.decimals)).toFixed(bribe.token.decimals)\n                                      });\n\n                                    case 7:\n                                    case \"end\":\n                                      return _context66.stop();\n                                  }\n                                }\n                              }, _callee66);\n                            }));\n\n                            return function (_x91) {\n                              return _ref68.apply(this, arguments);\n                            };\n                          }()));\n\n                        case 2:\n                          bribesEarned = _context67.sent;\n                          pair.gauge.bribesEarned = bribesEarned;\n                          return _context67.abrupt(\"return\", pair);\n\n                        case 5:\n                        case \"end\":\n                          return _context67.stop();\n                      }\n                    }\n                  }, _callee67);\n                }));\n\n                return function (_x90) {\n                  return _ref67.apply(this, arguments);\n                };\n              }()));\n\n            case 20:\n              bribesEarned = _context68.sent;\n\n              _this.emitter.emit(ACTIONS.VEST_BALANCES_RETURNED, bribesEarned);\n\n              _context68.next = 28;\n              break;\n\n            case 24:\n              _context68.prev = 24;\n              _context68.t0 = _context68[\"catch\"](0);\n              console.error(_context68.t0);\n\n              _this.emitter.emit(ACTIONS.ERROR, _context68.t0);\n\n            case 28:\n            case \"end\":\n              return _context68.stop();\n          }\n        }\n      }, _callee68, null, [[0, 24]]);\n    }));\n\n    return function (_x89) {\n      return _ref66.apply(this, arguments);\n    };\n  }());\n\n  _defineProperty(this, \"getRewardBalances\", /*#__PURE__*/function () {\n    var _ref69 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee72(payload) {\n      var account, _web29, tokenID, pairs, filteredPairs, filteredPairs2, filteredBribes, bribesEarned, filteredFees, i, pair, rewardsEarned, filteredRewards, j, _pair, rewards;\n\n      return _regeneratorRuntime.wrap(function _callee72$(_context72) {\n        while (1) {\n          switch (_context72.prev = _context72.next) {\n            case 0:\n              _context72.prev = 0;\n              account = stores.accountStore.getStore(\"account\");\n\n              if (account) {\n                _context72.next = 5;\n                break;\n              }\n\n              console.warn('account not found');\n              return _context72.abrupt(\"return\", null);\n\n            case 5:\n              _context72.next = 7;\n              return stores.accountStore.getWeb3Provider();\n\n            case 7:\n              _web29 = _context72.sent;\n\n              if (_web29) {\n                _context72.next = 11;\n                break;\n              }\n\n              console.warn('web3 not found');\n              return _context72.abrupt(\"return\", null);\n\n            case 11:\n              tokenID = payload.content.tokenID;\n              pairs = _this.getStore('pairs');\n              filteredPairs = _toConsumableArray(pairs.filter(function (pair) {\n                return pair && pair.gauge;\n              }));\n              filteredPairs2 = _toConsumableArray(pairs.filter(function (pair) {\n                return pair && pair.gauge;\n              }));\n              filteredBribes = [];\n\n              if (!tokenID) {\n                _context72.next = 21;\n                break;\n              }\n\n              _context72.next = 19;\n              return Promise.all(filteredPairs.map( /*#__PURE__*/function () {\n                var _ref70 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee70(pair) {\n                  var bribesEarned;\n                  return _regeneratorRuntime.wrap(function _callee70$(_context70) {\n                    while (1) {\n                      switch (_context70.prev = _context70.next) {\n                        case 0:\n                          _context70.next = 2;\n                          return Promise.all(pair.gauge.bribes.map( /*#__PURE__*/function () {\n                            var _ref71 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee69(bribe) {\n                              var bribeContract, _yield$Promise$all43, _yield$Promise$all44, earned;\n\n                              return _regeneratorRuntime.wrap(function _callee69$(_context69) {\n                                while (1) {\n                                  switch (_context69.prev = _context69.next) {\n                                    case 0:\n                                      bribeContract = new _web29.eth.Contract(CONTRACTS.BRIBE_ABI, pair.gauge.bribeAddress);\n                                      _context69.next = 3;\n                                      return Promise.all([bribeContract.methods.earned(bribe.token.address, tokenID).call()]);\n\n                                    case 3:\n                                      _yield$Promise$all43 = _context69.sent;\n                                      _yield$Promise$all44 = _slicedToArray(_yield$Promise$all43, 1);\n                                      earned = _yield$Promise$all44[0];\n                                      bribe.earned = BigNumber(earned).div(Math.pow(10, bribe.token.decimals)).toFixed(bribe.token.decimals);\n                                      return _context69.abrupt(\"return\", bribe);\n\n                                    case 8:\n                                    case \"end\":\n                                      return _context69.stop();\n                                  }\n                                }\n                              }, _callee69);\n                            }));\n\n                            return function (_x94) {\n                              return _ref71.apply(this, arguments);\n                            };\n                          }()));\n\n                        case 2:\n                          bribesEarned = _context70.sent;\n                          pair.gauge.bribesEarned = bribesEarned;\n                          return _context70.abrupt(\"return\", pair);\n\n                        case 5:\n                        case \"end\":\n                          return _context70.stop();\n                      }\n                    }\n                  }, _callee70);\n                }));\n\n                return function (_x93) {\n                  return _ref70.apply(this, arguments);\n                };\n              }()));\n\n            case 19:\n              bribesEarned = _context72.sent;\n              filteredBribes = bribesEarned.filter(function (pair) {\n                if (pair.gauge && pair.gauge.bribesEarned && pair.gauge.bribesEarned.length > 0) {\n                  var shouldReturn = false;\n\n                  for (var i = 0; i < pair.gauge.bribesEarned.length; i++) {\n                    if (BigNumber(pair.gauge.bribesEarned[i].earned).gt(0)) {\n                      shouldReturn = true;\n                    }\n                  }\n\n                  return shouldReturn;\n                }\n\n                return false;\n              }).map(function (pair) {\n                pair.rewardType = 'Bribe';\n                return pair;\n              });\n\n            case 21:\n              filteredFees = [];\n\n              for (i = 0; i < pairs.length; i++) {\n                pair = Object.assign({}, pairs[i]);\n\n                if (BigNumber(pair.claimable0).gt(0) || BigNumber(pair.claimable1).gt(0)) {\n                  pair.rewardType = 'Fees';\n                  filteredFees.push(pair);\n                }\n              }\n\n              _context72.next = 25;\n              return Promise.all(filteredPairs2.map( /*#__PURE__*/function () {\n                var _ref72 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee71(pair) {\n                  var gaugeContract, _yield$Promise$all45, _yield$Promise$all46, earned;\n\n                  return _regeneratorRuntime.wrap(function _callee71$(_context71) {\n                    while (1) {\n                      switch (_context71.prev = _context71.next) {\n                        case 0:\n                          gaugeContract = new _web29.eth.Contract(CONTRACTS.GAUGE_ABI, pair.gauge.address);\n                          _context71.next = 3;\n                          return Promise.all([gaugeContract.methods.earned(CONTRACTS.GOV_TOKEN_ADDRESS, account.address).call()]);\n\n                        case 3:\n                          _yield$Promise$all45 = _context71.sent;\n                          _yield$Promise$all46 = _slicedToArray(_yield$Promise$all45, 1);\n                          earned = _yield$Promise$all46[0];\n                          pair.gauge.rewardsEarned = BigNumber(earned).div(Math.pow(10, 18)).toFixed(18);\n                          return _context71.abrupt(\"return\", pair);\n\n                        case 8:\n                        case \"end\":\n                          return _context71.stop();\n                      }\n                    }\n                  }, _callee71);\n                }));\n\n                return function (_x95) {\n                  return _ref72.apply(this, arguments);\n                };\n              }()));\n\n            case 25:\n              rewardsEarned = _context72.sent;\n              filteredRewards = [];\n\n              for (j = 0; j < rewardsEarned.length; j++) {\n                _pair = Object.assign({}, rewardsEarned[j]);\n\n                if (_pair.gauge && _pair.gauge.rewardsEarned && BigNumber(_pair.gauge.rewardsEarned).gt(0)) {\n                  _pair.rewardType = 'Reward';\n                  filteredRewards.push(_pair);\n                }\n              }\n\n              console.log(filteredBribes);\n              console.log(filteredFees);\n              console.log(filteredRewards);\n              rewards = {\n                bribes: filteredBribes,\n                fees: filteredFees,\n                rewards: filteredRewards\n              };\n\n              _this.setStore({\n                rewards: rewards\n              });\n\n              _this.emitter.emit(ACTIONS.REWARD_BALANCES_RETURNED, rewards);\n\n              _context72.next = 40;\n              break;\n\n            case 36:\n              _context72.prev = 36;\n              _context72.t0 = _context72[\"catch\"](0);\n              console.error(_context72.t0);\n\n              _this.emitter.emit(ACTIONS.ERROR, _context72.t0);\n\n            case 40:\n            case \"end\":\n              return _context72.stop();\n          }\n        }\n      }, _callee72, null, [[0, 36]]);\n    }));\n\n    return function (_x92) {\n      return _ref69.apply(this, arguments);\n    };\n  }());\n\n  _defineProperty(this, \"claimBribes\", /*#__PURE__*/function () {\n    var _ref73 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee74(payload) {\n      var account, _web30, _payload$content18, pair, tokenID, claimTXID, gasPrice, gaugesContract, sendGauges, sendTokens;\n\n      return _regeneratorRuntime.wrap(function _callee74$(_context74) {\n        while (1) {\n          switch (_context74.prev = _context74.next) {\n            case 0:\n              _context74.prev = 0;\n              account = stores.accountStore.getStore(\"account\");\n\n              if (account) {\n                _context74.next = 5;\n                break;\n              }\n\n              console.warn('account not found');\n              return _context74.abrupt(\"return\", null);\n\n            case 5:\n              _context74.next = 7;\n              return stores.accountStore.getWeb3Provider();\n\n            case 7:\n              _web30 = _context74.sent;\n\n              if (_web30) {\n                _context74.next = 11;\n                break;\n              }\n\n              console.warn('web3 not found');\n              return _context74.abrupt(\"return\", null);\n\n            case 11:\n              _payload$content18 = payload.content, pair = _payload$content18.pair, tokenID = _payload$content18.tokenID; // ADD TRNASCTIONS TO TRANSACTION QUEUE DISPLAY\n\n              claimTXID = _this.getTXUUID();\n\n              _this.emitter.emit(ACTIONS.TX_ADDED, {\n                title: \"Claim rewards for \".concat(pair.token0.symbol, \"/\").concat(pair.token1.symbol),\n                verb: 'Rewards Claimed',\n                transactions: [{\n                  uuid: claimTXID,\n                  description: \"Claiming your bribes\",\n                  status: 'WAITING'\n                }]\n              });\n\n              _context74.next = 16;\n              return stores.accountStore.getGasPrice();\n\n            case 16:\n              gasPrice = _context74.sent;\n              // SUBMIT CLAIM TRANSACTION\n              gaugesContract = new _web30.eth.Contract(CONTRACTS.VOTER_ABI, CONTRACTS.VOTER_ADDRESS);\n              sendGauges = [pair.gauge.bribeAddress];\n              sendTokens = [pair.gauge.bribesEarned.map(function (bribe) {\n                return bribe.token.address;\n              })];\n\n              _this._callContractWait(_web30, gaugesContract, 'claimBribes', [sendGauges, sendTokens, tokenID], account, gasPrice, null, null, claimTXID, /*#__PURE__*/function () {\n                var _ref74 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee73(err) {\n                  return _regeneratorRuntime.wrap(function _callee73$(_context73) {\n                    while (1) {\n                      switch (_context73.prev = _context73.next) {\n                        case 0:\n                          if (!err) {\n                            _context73.next = 2;\n                            break;\n                          }\n\n                          return _context73.abrupt(\"return\", _this.emitter.emit(ACTIONS.ERROR, err));\n\n                        case 2:\n                          _this.getRewardBalances({\n                            content: {\n                              tokenID: tokenID\n                            }\n                          });\n\n                          _this.emitter.emit(ACTIONS.CLAIM_REWARD_RETURNED);\n\n                        case 4:\n                        case \"end\":\n                          return _context73.stop();\n                      }\n                    }\n                  }, _callee73);\n                }));\n\n                return function (_x97) {\n                  return _ref74.apply(this, arguments);\n                };\n              }());\n\n              _context74.next = 27;\n              break;\n\n            case 23:\n              _context74.prev = 23;\n              _context74.t0 = _context74[\"catch\"](0);\n              console.error(_context74.t0);\n\n              _this.emitter.emit(ACTIONS.ERROR, _context74.t0);\n\n            case 27:\n            case \"end\":\n              return _context74.stop();\n          }\n        }\n      }, _callee74, null, [[0, 23]]);\n    }));\n\n    return function (_x96) {\n      return _ref73.apply(this, arguments);\n    };\n  }());\n\n  _defineProperty(this, \"claimAllRewards\", /*#__PURE__*/function () {\n    var _ref75 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee76(payload) {\n      var _ret;\n\n      return _regeneratorRuntime.wrap(function _callee76$(_context78) {\n        while (1) {\n          switch (_context78.prev = _context78.next) {\n            case 0:\n              _context78.prev = 0;\n              return _context78.delegateYield( /*#__PURE__*/_regeneratorRuntime.mark(function _callee75() {\n                var context, account, web3, _payload$content19, pairs, tokenID, claimTXID, feeClaimTXIDs, rewardClaimTXIDs, bribePairs, feePairs, rewardPairs, sendGauges, sendTokens, sendOBJ, i, newClaimTX, _i2, _newClaimTX, gasPrice, gaugesContract, claimPromise, _loop, _i3, _loop2, _i4;\n\n                return _regeneratorRuntime.wrap(function _callee75$(_context77) {\n                  while (1) {\n                    switch (_context77.prev = _context77.next) {\n                      case 0:\n                        context = _this;\n                        account = stores.accountStore.getStore(\"account\");\n\n                        if (account) {\n                          _context77.next = 5;\n                          break;\n                        }\n\n                        console.warn('account not found');\n                        return _context77.abrupt(\"return\", {\n                          v: null\n                        });\n\n                      case 5:\n                        _context77.next = 7;\n                        return stores.accountStore.getWeb3Provider();\n\n                      case 7:\n                        web3 = _context77.sent;\n\n                        if (web3) {\n                          _context77.next = 11;\n                          break;\n                        }\n\n                        console.warn('web3 not found');\n                        return _context77.abrupt(\"return\", {\n                          v: null\n                        });\n\n                      case 11:\n                        _payload$content19 = payload.content, pairs = _payload$content19.pairs, tokenID = _payload$content19.tokenID; // ADD TRNASCTIONS TO TRANSACTION QUEUE DISPLAY\n\n                        claimTXID = _this.getTXUUID();\n                        feeClaimTXIDs = [];\n                        rewardClaimTXIDs = [];\n                        bribePairs = pairs.filter(function (pair) {\n                          return pair.rewardType === 'Bribe';\n                        });\n                        feePairs = pairs.filter(function (pair) {\n                          return pair.rewardType === 'Fees';\n                        });\n                        rewardPairs = pairs.filter(function (pair) {\n                          return pair.rewardType === 'Reward';\n                        });\n                        sendGauges = bribePairs.map(function (pair) {\n                          return pair.gauge.bribeAddress;\n                        });\n                        sendTokens = bribePairs.map(function (pair) {\n                          return pair.gauge.bribesEarned.map(function (bribe) {\n                            return bribe.token.address;\n                          });\n                        });\n\n                        if (!(bribePairs.length == 0 && feePairs.length == 0 && rewardPairs.length == 0)) {\n                          _context77.next = 24;\n                          break;\n                        }\n\n                        _this.emitter.emit(ACTIONS.ERROR, 'Nothing to claim');\n\n                        _this.emitter.emit(ACTIONS.CLAIM_ALL_REWARDS_RETURNED);\n\n                        return _context77.abrupt(\"return\", {\n                          v: void 0\n                        });\n\n                      case 24:\n                        sendOBJ = {\n                          title: \"Claim all rewards\",\n                          verb: 'Rewards Claimed',\n                          transactions: []\n                        };\n\n                        if (bribePairs.length > 0) {\n                          sendOBJ.transactions.push({\n                            uuid: claimTXID,\n                            description: \"Claiming all your available bribes\",\n                            status: 'WAITING'\n                          });\n                        }\n\n                        if (feePairs.length > 0) {\n                          for (i = 0; i < feePairs.length; i++) {\n                            newClaimTX = _this.getTXUUID();\n                            feeClaimTXIDs.push(newClaimTX);\n                            sendOBJ.transactions.push({\n                              uuid: newClaimTX,\n                              description: \"Claiming fees for \".concat(feePairs[i].symbol),\n                              status: 'WAITING'\n                            });\n                          }\n                        }\n\n                        if (rewardPairs.length > 0) {\n                          for (_i2 = 0; _i2 < rewardPairs.length; _i2++) {\n                            _newClaimTX = _this.getTXUUID();\n                            rewardClaimTXIDs.push(_newClaimTX);\n                            sendOBJ.transactions.push({\n                              uuid: _newClaimTX,\n                              description: \"Claiming reward for \".concat(rewardPairs[_i2].symbol),\n                              status: 'WAITING'\n                            });\n                          }\n                        }\n\n                        _this.emitter.emit(ACTIONS.TX_ADDED, sendOBJ);\n\n                        _context77.next = 31;\n                        return stores.accountStore.getGasPrice();\n\n                      case 31:\n                        gasPrice = _context77.sent;\n\n                        if (!(bribePairs.length > 0)) {\n                          _context77.next = 37;\n                          break;\n                        }\n\n                        // SUBMIT CLAIM TRANSACTION\n                        gaugesContract = new web3.eth.Contract(CONTRACTS.VOTER_ABI, CONTRACTS.VOTER_ADDRESS);\n                        claimPromise = new Promise(function (resolve, reject) {\n                          context._callContractWait(web3, gaugesContract, 'claimBribes', [sendGauges, sendTokens, tokenID], account, gasPrice, null, null, claimTXID, function (err) {\n                            if (err) {\n                              reject(err);\n                              return;\n                            }\n\n                            resolve();\n                          });\n                        });\n                        _context77.next = 37;\n                        return Promise.all([claimPromise]);\n\n                      case 37:\n                        if (!(feePairs.length > 0)) {\n                          _context77.next = 45;\n                          break;\n                        }\n\n                        _loop = /*#__PURE__*/_regeneratorRuntime.mark(function _loop(_i3) {\n                          var pairContract, claimPromise;\n                          return _regeneratorRuntime.wrap(function _loop$(_context75) {\n                            while (1) {\n                              switch (_context75.prev = _context75.next) {\n                                case 0:\n                                  pairContract = new web3.eth.Contract(CONTRACTS.PAIR_ABI, feePairs[_i3].address);\n                                  claimPromise = new Promise(function (resolve, reject) {\n                                    context._callContractWait(web3, pairContract, 'claimFees', [], account, gasPrice, null, null, feeClaimTXIDs[_i3], function (err) {\n                                      if (err) {\n                                        reject(err);\n                                        return;\n                                      }\n\n                                      resolve();\n                                    });\n                                  });\n                                  _context75.next = 4;\n                                  return Promise.all([claimPromise]);\n\n                                case 4:\n                                case \"end\":\n                                  return _context75.stop();\n                              }\n                            }\n                          }, _loop);\n                        });\n                        _i3 = 0;\n\n                      case 40:\n                        if (!(_i3 < feePairs.length)) {\n                          _context77.next = 45;\n                          break;\n                        }\n\n                        return _context77.delegateYield(_loop(_i3), \"t0\", 42);\n\n                      case 42:\n                        _i3++;\n                        _context77.next = 40;\n                        break;\n\n                      case 45:\n                        if (!(rewardPairs.length > 0)) {\n                          _context77.next = 53;\n                          break;\n                        }\n\n                        _loop2 = /*#__PURE__*/_regeneratorRuntime.mark(function _loop2(_i4) {\n                          var gaugeContract, sendTok, rewardPromise;\n                          return _regeneratorRuntime.wrap(function _loop2$(_context76) {\n                            while (1) {\n                              switch (_context76.prev = _context76.next) {\n                                case 0:\n                                  gaugeContract = new web3.eth.Contract(CONTRACTS.GAUGE_ABI, rewardPairs[_i4].gauge.address);\n                                  sendTok = [CONTRACTS.GOV_TOKEN_ADDRESS];\n                                  rewardPromise = new Promise(function (resolve, reject) {\n                                    context._callContractWait(web3, gaugeContract, 'getReward', [account.address, sendTok], account, gasPrice, null, null, rewardClaimTXIDs[_i4], function (err) {\n                                      if (err) {\n                                        reject(err);\n                                        return;\n                                      }\n\n                                      resolve();\n                                    });\n                                  });\n                                  _context76.next = 5;\n                                  return Promise.all([rewardPromise]);\n\n                                case 5:\n                                case \"end\":\n                                  return _context76.stop();\n                              }\n                            }\n                          }, _loop2);\n                        });\n                        _i4 = 0;\n\n                      case 48:\n                        if (!(_i4 < rewardPairs.length)) {\n                          _context77.next = 53;\n                          break;\n                        }\n\n                        return _context77.delegateYield(_loop2(_i4), \"t1\", 50);\n\n                      case 50:\n                        _i4++;\n                        _context77.next = 48;\n                        break;\n\n                      case 53:\n                        _this.getRewardBalances({\n                          content: {\n                            tokenID: tokenID\n                          }\n                        });\n\n                        _this.emitter.emit(ACTIONS.CLAIM_ALL_REWARDS_RETURNED);\n\n                      case 55:\n                      case \"end\":\n                        return _context77.stop();\n                    }\n                  }\n                }, _callee75);\n              })(), \"t0\", 2);\n\n            case 2:\n              _ret = _context78.t0;\n\n              if (!(typeof _ret === \"object\")) {\n                _context78.next = 5;\n                break;\n              }\n\n              return _context78.abrupt(\"return\", _ret.v);\n\n            case 5:\n              _context78.next = 11;\n              break;\n\n            case 7:\n              _context78.prev = 7;\n              _context78.t1 = _context78[\"catch\"](0);\n              console.error(_context78.t1);\n\n              _this.emitter.emit(ACTIONS.ERROR, _context78.t1);\n\n            case 11:\n            case \"end\":\n              return _context78.stop();\n          }\n        }\n      }, _callee76, null, [[0, 7]]);\n    }));\n\n    return function (_x98) {\n      return _ref75.apply(this, arguments);\n    };\n  }());\n\n  _defineProperty(this, \"claimRewards\", /*#__PURE__*/function () {\n    var _ref76 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee78(payload) {\n      var account, _web31, _payload$content20, pair, tokenID, claimTXID, gasPrice, gaugeContract, sendTokens;\n\n      return _regeneratorRuntime.wrap(function _callee78$(_context80) {\n        while (1) {\n          switch (_context80.prev = _context80.next) {\n            case 0:\n              _context80.prev = 0;\n              account = stores.accountStore.getStore(\"account\");\n\n              if (account) {\n                _context80.next = 5;\n                break;\n              }\n\n              console.warn('account not found');\n              return _context80.abrupt(\"return\", null);\n\n            case 5:\n              _context80.next = 7;\n              return stores.accountStore.getWeb3Provider();\n\n            case 7:\n              _web31 = _context80.sent;\n\n              if (_web31) {\n                _context80.next = 11;\n                break;\n              }\n\n              console.warn('web3 not found');\n              return _context80.abrupt(\"return\", null);\n\n            case 11:\n              _payload$content20 = payload.content, pair = _payload$content20.pair, tokenID = _payload$content20.tokenID; // ADD TRNASCTIONS TO TRANSACTION QUEUE DISPLAY\n\n              claimTXID = _this.getTXUUID();\n\n              _this.emitter.emit(ACTIONS.TX_ADDED, {\n                title: \"Claim rewards for \".concat(pair.token0.symbol, \"/\").concat(pair.token1.symbol),\n                verb: 'Rewards Claimed',\n                transactions: [{\n                  uuid: claimTXID,\n                  description: \"Claiming your rewards\",\n                  status: 'WAITING'\n                }]\n              });\n\n              _context80.next = 16;\n              return stores.accountStore.getGasPrice();\n\n            case 16:\n              gasPrice = _context80.sent;\n              // SUBMIT CLAIM TRANSACTION\n              gaugeContract = new _web31.eth.Contract(CONTRACTS.GAUGE_ABI, pair.gauge.address);\n              sendTokens = [CONTRACTS.GOV_TOKEN_ADDRESS];\n\n              _this._callContractWait(_web31, gaugeContract, 'getReward', [account.address, sendTokens], account, gasPrice, null, null, claimTXID, /*#__PURE__*/function () {\n                var _ref77 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee77(err) {\n                  return _regeneratorRuntime.wrap(function _callee77$(_context79) {\n                    while (1) {\n                      switch (_context79.prev = _context79.next) {\n                        case 0:\n                          if (!err) {\n                            _context79.next = 2;\n                            break;\n                          }\n\n                          return _context79.abrupt(\"return\", _this.emitter.emit(ACTIONS.ERROR, err));\n\n                        case 2:\n                          _this.getRewardBalances({\n                            content: {\n                              tokenID: tokenID\n                            }\n                          });\n\n                          _this.emitter.emit(ACTIONS.CLAIM_REWARD_RETURNED);\n\n                        case 4:\n                        case \"end\":\n                          return _context79.stop();\n                      }\n                    }\n                  }, _callee77);\n                }));\n\n                return function (_x100) {\n                  return _ref77.apply(this, arguments);\n                };\n              }());\n\n              _context80.next = 26;\n              break;\n\n            case 22:\n              _context80.prev = 22;\n              _context80.t0 = _context80[\"catch\"](0);\n              console.error(_context80.t0);\n\n              _this.emitter.emit(ACTIONS.ERROR, _context80.t0);\n\n            case 26:\n            case \"end\":\n              return _context80.stop();\n          }\n        }\n      }, _callee78, null, [[0, 22]]);\n    }));\n\n    return function (_x99) {\n      return _ref76.apply(this, arguments);\n    };\n  }());\n\n  _defineProperty(this, \"claimPairFees\", /*#__PURE__*/function () {\n    var _ref78 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee80(payload) {\n      var account, _web32, _payload$content21, pair, tokenID, claimTXID, gasPrice, pairContract;\n\n      return _regeneratorRuntime.wrap(function _callee80$(_context82) {\n        while (1) {\n          switch (_context82.prev = _context82.next) {\n            case 0:\n              _context82.prev = 0;\n              account = stores.accountStore.getStore(\"account\");\n\n              if (account) {\n                _context82.next = 5;\n                break;\n              }\n\n              console.warn('account not found');\n              return _context82.abrupt(\"return\", null);\n\n            case 5:\n              _context82.next = 7;\n              return stores.accountStore.getWeb3Provider();\n\n            case 7:\n              _web32 = _context82.sent;\n\n              if (_web32) {\n                _context82.next = 11;\n                break;\n              }\n\n              console.warn('web3 not found');\n              return _context82.abrupt(\"return\", null);\n\n            case 11:\n              _payload$content21 = payload.content, pair = _payload$content21.pair, tokenID = _payload$content21.tokenID; // ADD TRNASCTIONS TO TRANSACTION QUEUE DISPLAY\n\n              claimTXID = _this.getTXUUID();\n\n              _this.emitter.emit(ACTIONS.TX_ADDED, {\n                title: \"Claim fees for \".concat(pair.token0.symbol, \"/\").concat(pair.token1.symbol),\n                verb: 'Fees Claimed',\n                transactions: [{\n                  uuid: claimTXID,\n                  description: \"Claiming your fees\",\n                  status: 'WAITING'\n                }]\n              });\n\n              _context82.next = 16;\n              return stores.accountStore.getGasPrice();\n\n            case 16:\n              gasPrice = _context82.sent;\n              // SUBMIT CLAIM TRANSACTION\n              pairContract = new _web32.eth.Contract(CONTRACTS.PAIR_ABI, pair.address);\n\n              _this._callContractWait(_web32, pairContract, 'claimFees', [], account, gasPrice, null, null, claimTXID, /*#__PURE__*/function () {\n                var _ref79 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee79(err) {\n                  return _regeneratorRuntime.wrap(function _callee79$(_context81) {\n                    while (1) {\n                      switch (_context81.prev = _context81.next) {\n                        case 0:\n                          if (!err) {\n                            _context81.next = 2;\n                            break;\n                          }\n\n                          return _context81.abrupt(\"return\", _this.emitter.emit(ACTIONS.ERROR, err));\n\n                        case 2:\n                          _this.getRewardBalances({\n                            content: {\n                              tokenID: tokenID\n                            }\n                          });\n\n                          _this.emitter.emit(ACTIONS.CLAIM_REWARD_RETURNED);\n\n                        case 4:\n                        case \"end\":\n                          return _context81.stop();\n                      }\n                    }\n                  }, _callee79);\n                }));\n\n                return function (_x102) {\n                  return _ref79.apply(this, arguments);\n                };\n              }());\n\n              _context82.next = 25;\n              break;\n\n            case 21:\n              _context82.prev = 21;\n              _context82.t0 = _context82[\"catch\"](0);\n              console.error(_context82.t0);\n\n              _this.emitter.emit(ACTIONS.ERROR, _context82.t0);\n\n            case 25:\n            case \"end\":\n              return _context82.stop();\n          }\n        }\n      }, _callee80, null, [[0, 21]]);\n    }));\n\n    return function (_x101) {\n      return _ref78.apply(this, arguments);\n    };\n  }());\n\n  _defineProperty(this, \"searchWhitelist\", /*#__PURE__*/function () {\n    var _ref80 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee81(payload) {\n      var account, _web33, veToken, search, voterContract, _yield$Promise$all47, _yield$Promise$all48, isWhitelisted, listingFee, token;\n\n      return _regeneratorRuntime.wrap(function _callee81$(_context83) {\n        while (1) {\n          switch (_context83.prev = _context83.next) {\n            case 0:\n              _context83.prev = 0;\n              account = stores.accountStore.getStore(\"account\");\n\n              if (account) {\n                _context83.next = 5;\n                break;\n              }\n\n              console.warn('account not found');\n              return _context83.abrupt(\"return\", null);\n\n            case 5:\n              _context83.next = 7;\n              return stores.accountStore.getWeb3Provider();\n\n            case 7:\n              _web33 = _context83.sent;\n\n              if (_web33) {\n                _context83.next = 11;\n                break;\n              }\n\n              console.warn('web3 not found');\n              return _context83.abrupt(\"return\", null);\n\n            case 11:\n              veToken = _this.getStore('veToken');\n              search = payload.content.search;\n              voterContract = new _web33.eth.Contract(CONTRACTS.VOTER_ABI, CONTRACTS.VOTER_ADDRESS);\n              _context83.next = 16;\n              return Promise.all([voterContract.methods.isWhitelisted(search).call(), voterContract.methods.listing_fee().call()]);\n\n            case 16:\n              _yield$Promise$all47 = _context83.sent;\n              _yield$Promise$all48 = _slicedToArray(_yield$Promise$all47, 2);\n              isWhitelisted = _yield$Promise$all48[0];\n              listingFee = _yield$Promise$all48[1];\n              _context83.next = 22;\n              return _this.getBaseAsset(search);\n\n            case 22:\n              token = _context83.sent;\n              token.isWhitelisted = isWhitelisted;\n              token.listingFee = BigNumber(listingFee).div(Math.pow(10, veToken.decimals)).toFixed(veToken.decimals);\n\n              _this.emitter.emit(ACTIONS.SEARCH_WHITELIST_RETURNED, token);\n\n              _context83.next = 32;\n              break;\n\n            case 28:\n              _context83.prev = 28;\n              _context83.t0 = _context83[\"catch\"](0);\n              console.error(_context83.t0);\n\n              _this.emitter.emit(ACTIONS.ERROR, _context83.t0);\n\n            case 32:\n            case \"end\":\n              return _context83.stop();\n          }\n        }\n      }, _callee81, null, [[0, 28]]);\n    }));\n\n    return function (_x103) {\n      return _ref80.apply(this, arguments);\n    };\n  }());\n\n  _defineProperty(this, \"whitelistToken\", /*#__PURE__*/function () {\n    var _ref81 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee83(payload) {\n      var account, _web34, _payload$content22, token, nft, whitelistTXID, gasPrice, voterContract;\n\n      return _regeneratorRuntime.wrap(function _callee83$(_context85) {\n        while (1) {\n          switch (_context85.prev = _context85.next) {\n            case 0:\n              _context85.prev = 0;\n              account = stores.accountStore.getStore(\"account\");\n\n              if (account) {\n                _context85.next = 5;\n                break;\n              }\n\n              console.warn('account not found');\n              return _context85.abrupt(\"return\", null);\n\n            case 5:\n              _context85.next = 7;\n              return stores.accountStore.getWeb3Provider();\n\n            case 7:\n              _web34 = _context85.sent;\n\n              if (_web34) {\n                _context85.next = 11;\n                break;\n              }\n\n              console.warn('web3 not found');\n              return _context85.abrupt(\"return\", null);\n\n            case 11:\n              _payload$content22 = payload.content, token = _payload$content22.token, nft = _payload$content22.nft; // ADD TRNASCTIONS TO TRANSACTION QUEUE DISPLAY\n\n              whitelistTXID = _this.getTXUUID();\n\n              _this.emitter.emit(ACTIONS.TX_ADDED, {\n                title: \"WHITELIST \".concat(token.symbol),\n                verb: 'Token Whitelisted',\n                transactions: [{\n                  uuid: whitelistTXID,\n                  description: \"Whitelisting \".concat(token.symbol),\n                  status: 'WAITING'\n                }]\n              });\n\n              _context85.next = 16;\n              return stores.accountStore.getGasPrice();\n\n            case 16:\n              gasPrice = _context85.sent;\n              // SUBMIT WHITELIST TRANSACTION\n              voterContract = new _web34.eth.Contract(CONTRACTS.VOTER_ABI, CONTRACTS.VOTER_ADDRESS);\n\n              _this._callContractWait(_web34, voterContract, 'whitelist', [token.address, nft.id], account, gasPrice, null, null, whitelistTXID, /*#__PURE__*/function () {\n                var _ref82 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee82(err) {\n                  return _regeneratorRuntime.wrap(function _callee82$(_context84) {\n                    while (1) {\n                      switch (_context84.prev = _context84.next) {\n                        case 0:\n                          if (!err) {\n                            _context84.next = 2;\n                            break;\n                          }\n\n                          return _context84.abrupt(\"return\", _this.emitter.emit(ACTIONS.ERROR, err));\n\n                        case 2:\n                          window.setTimeout(function () {\n                            _this.dispatcher.dispatch({\n                              type: ACTIONS.SEARCH_WHITELIST,\n                              content: {\n                                search: token.address\n                              }\n                            });\n                          }, 2);\n\n                          _this.emitter.emit(ACTIONS.WHITELIST_TOKEN_RETURNED);\n\n                        case 4:\n                        case \"end\":\n                          return _context84.stop();\n                      }\n                    }\n                  }, _callee82);\n                }));\n\n                return function (_x105) {\n                  return _ref82.apply(this, arguments);\n                };\n              }());\n\n              _context85.next = 25;\n              break;\n\n            case 21:\n              _context85.prev = 21;\n              _context85.t0 = _context85[\"catch\"](0);\n              console.error(_context85.t0);\n\n              _this.emitter.emit(ACTIONS.ERROR, _context85.t0);\n\n            case 25:\n            case \"end\":\n              return _context85.stop();\n          }\n        }\n      }, _callee83, null, [[0, 21]]);\n    }));\n\n    return function (_x104) {\n      return _ref81.apply(this, arguments);\n    };\n  }());\n\n  _defineProperty(this, \"_callContractWait\", function (web3, contract, method, params, account, gasPrice, dispatchEvent, dispatchContent, uuid, callback, paddGasCost) {\n    var _contract$methods;\n\n    var sendValue = arguments.length > 11 && arguments[11] !== undefined ? arguments[11] : null;\n\n    // console.log(method)\n    // console.log(params)\n    // if(sendValue) {\n    //   console.log(sendValue)\n    // }\n    // console.log(uuid)\n    //estimate gas\n    _this.emitter.emit(ACTIONS.TX_PENDING, {\n      uuid: uuid\n    });\n\n    var gasCost = (_contract$methods = contract.methods)[method].apply(_contract$methods, _toConsumableArray(params)).estimateGas({\n      from: account.address,\n      value: sendValue\n    }).then(function (gasAmount) {\n      var _contract$methods2;\n\n      var context = _this;\n      var sendGasAmount = BigNumber(gasAmount).times(1.5).toFixed(0); // if (paddGasCost) {\n      //   sendGasAmount = BigNumber(sendGasAmount).times(1.15).toFixed(0)\n      // }\n      //\n      // const sendGasAmount = '3000000'\n      // const context = this\n      //\n\n      (_contract$methods2 = contract.methods)[method].apply(_contract$methods2, _toConsumableArray(params)).send({\n        from: account.address,\n        gasPrice: web3.utils.toWei(gasPrice, 'gwei'),\n        gas: sendGasAmount,\n        value: sendValue // maxFeePerGas: web3.utils.toWei(gasPrice, \"gwei\"),\n        // maxPriorityFeePerGas: web3.utils.toWei(\"2\", \"gwei\"),\n\n      }).on(\"transactionHash\", function (txHash) {\n        context.emitter.emit(ACTIONS.TX_SUBMITTED, {\n          uuid: uuid,\n          txHash: txHash\n        });\n      }).on(\"receipt\", function (receipt) {\n        context.emitter.emit(ACTIONS.TX_CONFIRMED, {\n          uuid: uuid,\n          txHash: receipt.transactionHash\n        });\n        callback(null, receipt.transactionHash);\n\n        if (dispatchEvent) {\n          context.dispatcher.dispatch({\n            type: dispatchEvent,\n            content: dispatchContent\n          });\n        }\n      }).on(\"error\", function (error) {\n        if (!error.toString().includes(\"-32601\")) {\n          if (error.message) {\n            context.emitter.emit(ACTIONS.TX_REJECTED, {\n              uuid: uuid,\n              error: error.message\n            });\n            return callback(error.message);\n          }\n\n          context.emitter.emit(ACTIONS.TX_REJECTED, {\n            uuid: uuid,\n            error: error\n          });\n          callback(error);\n        }\n      })[\"catch\"](function (error) {\n        if (!error.toString().includes(\"-32601\")) {\n          if (error.message) {\n            context.emitter.emit(ACTIONS.TX_REJECTED, {\n              uuid: uuid,\n              error: error.message\n            });\n            return callback(error.message);\n          }\n\n          context.emitter.emit(ACTIONS.TX_REJECTED, {\n            uuid: uuid,\n            error: error\n          });\n          callback(error);\n        }\n      });\n    })[\"catch\"](function (ex) {\n      console.log(ex);\n\n      if (ex.message) {\n        _this.emitter.emit(ACTIONS.TX_REJECTED, {\n          uuid: uuid,\n          error: ex.message\n        });\n\n        return callback(ex.message);\n      }\n\n      _this.emitter.emit(ACTIONS.TX_REJECTED, {\n        uuid: uuid,\n        error: 'Error estimating gas'\n      });\n\n      callback(ex);\n    });\n  });\n\n  _defineProperty(this, \"_makeBatchRequest\", function (web3, callFrom, calls) {\n    var batch = new web3.BatchRequest();\n    var promises = calls.map(function (call) {\n      return new Promise(function (res, rej) {\n        var req = call.request({\n          from: callFrom\n        }, function (err, data) {\n          if (err) rej(err);else res(data);\n        });\n        batch.add(req);\n      });\n    });\n    batch.execute();\n    return Promise.all(promises);\n  });\n\n  this.dispatcher = dispatcher;\n  this.emitter = emitter;\n  this.store = {\n    baseAssets: [],\n    assets: [],\n    govToken: null,\n    veToken: null,\n    pairs: [],\n    vestNFTs: [],\n    rewards: {\n      bribes: [],\n      fees: [],\n      rewards: []\n    }\n  };\n  dispatcher.register(function (payload) {\n    switch (payload.type) {\n      case ACTIONS.CONFIGURE_SS:\n        this.configure(payload);\n        break;\n\n      case ACTIONS.GET_BALANCES:\n        this.getBalances(payload);\n        break;\n\n      case ACTIONS.SEARCH_ASSET:\n        this.searchBaseAsset(payload);\n        break;\n      // LIQUIDITY\n\n      case ACTIONS.CREATE_PAIR_AND_STAKE:\n        this.createPairStake(payload);\n        break;\n\n      case ACTIONS.CREATE_PAIR_AND_DEPOSIT:\n        this.createPairDeposit(payload);\n        break;\n\n      case ACTIONS.ADD_LIQUIDITY:\n        this.addLiquidity(payload);\n        break;\n\n      case ACTIONS.STAKE_LIQUIDITY:\n        this.stakeLiquidity(payload);\n        break;\n\n      case ACTIONS.ADD_LIQUIDITY_AND_STAKE:\n        this.addLiquidityAndStake(payload);\n        break;\n\n      case ACTIONS.QUOTE_ADD_LIQUIDITY:\n        this.quoteAddLiquidity(payload);\n        break;\n\n      case ACTIONS.GET_LIQUIDITY_BALANCES:\n        this.getLiquidityBalances(payload);\n        break;\n\n      case ACTIONS.REMOVE_LIQUIDITY:\n        this.removeLiquidity(payload);\n        break;\n\n      case ACTIONS.UNSTAKE_AND_REMOVE_LIQUIDITY:\n        this.unstakeAndRemoveLiquidity(payload);\n        break;\n\n      case ACTIONS.QUOTE_REMOVE_LIQUIDITY:\n        this.quoteRemoveLiquidity(payload);\n        break;\n\n      case ACTIONS.UNSTAKE_LIQUIDITY:\n        this.unstakeLiquidity(payload);\n        break;\n\n      case ACTIONS.CREATE_GAUGE:\n        this.createGauge(payload);\n        break;\n      // SWAP\n\n      case ACTIONS.QUOTE_SWAP:\n        this.quoteSwap(payload);\n        break;\n\n      case ACTIONS.SWAP:\n        this.swap(payload);\n        break;\n      // VESTING\n\n      case ACTIONS.GET_VEST_NFTS:\n        this.getVestNFTs(payload);\n        break;\n\n      case ACTIONS.CREATE_VEST:\n        this.createVest(payload);\n        break;\n\n      case ACTIONS.INCREASE_VEST_AMOUNT:\n        this.increaseVestAmount(payload);\n        break;\n\n      case ACTIONS.INCREASE_VEST_DURATION:\n        this.increaseVestDuration(payload);\n        break;\n\n      case ACTIONS.WITHDRAW_VEST:\n        this.withdrawVest(payload);\n        break;\n      //VOTE\n\n      case ACTIONS.VOTE:\n        this.vote(payload);\n        break;\n\n      case ACTIONS.GET_VEST_VOTES:\n        this.getVestVotes(payload);\n        break;\n\n      case ACTIONS.CREATE_BRIBE:\n        this.createBribe(payload);\n        break;\n\n      case ACTIONS.GET_VEST_BALANCES:\n        this.getVestBalances(payload);\n        break;\n      //REWARDS\n\n      case ACTIONS.GET_REWARD_BALANCES:\n        this.getRewardBalances(payload);\n        break;\n\n      case ACTIONS.CLAIM_BRIBE:\n        this.claimBribes(payload);\n        break;\n\n      case ACTIONS.CLAIM_PAIR_FEES:\n        this.claimPairFees(payload);\n        break;\n\n      case ACTIONS.CLAIM_REWARD:\n        this.claimRewards(payload);\n        break;\n\n      case ACTIONS.CLAIM_ALL_REWARDS:\n        this.claimAllRewards(payload);\n        break;\n      //WHITELIST\n\n      case ACTIONS.SEARCH_WHITELIST:\n        this.searchWhitelist(payload);\n        break;\n\n      case ACTIONS.WHITELIST_TOKEN:\n        this.whitelistToken(payload);\n        break;\n\n      default:\n        {}\n    }\n  }.bind(this));\n} //\n// _getMulticallWatcher = (web3, calls) => {\n//\n// }\n;\n\nexport default Store;","map":{"version":3,"sources":["/Users/pierremarieriviere/Code/solidly-master/stores/stableSwapStore.js"],"names":["async","MAX_UINT256","ZERO_ADDRESS","ACTIONS","CONTRACTS","v4","uuidv4","moment","formatCurrency","stores","BigNumber","fetch","require","Store","dispatcher","emitter","index","store","obj","console","log","emit","STORE_UPDATED","address","assets","length","theAsset","filter","ass","toLowerCase","id","vestNFTs","getStore","theNFT","vestNFT","accountStore","getWeb3Provider","web3","warn","account","veToken","govToken","vestingContract","eth","Contract","VE_TOKEN_ABI","VE_TOKEN_ADDRESS","methods","balanceOf","call","nftsLength","arr","Array","from","parseInt","v","i","Promise","all","map","idx","tokenOfOwnerByIndex","tokenIndex","locked","balanceOfNFT","lockValue","lockEnds","end","lockAmount","amount","div","decimals","toFixed","nfts","setStore","nft","newVestNFTs","UPDATED","pairAddress","pairs","thePair","pair","pc","PAIR_ABI","totalSupply","reserve0","reserve1","returnPair","balance","token0","token1","pairContract","gaugesContract","VOTER_ABI","VOTER_ADDRESS","totalWeight","symbol","stable","gauges","weights","claimable0","claimable1","gaugeAddress","gaugeWeight","token0Contract","ERC20_ABI","token1Contract","token0Symbol","token0Decimals","token0Balance","token1Symbol","token1Decimals","token1Balance","isStable","gaugeContract","GAUGE_ABI","bribes","gaugeBalance","bribeAddress","bribeContract","BRIBE_ABI","rewardsListLength","tokensLength","arry","rewards","tokenAddress","getBaseAsset","token","rewardRate","rewardAmount","times","gauge","weight","weightPercent","push","addressA","addressB","stab","WFTM_ADDRESS","factoryContract","FACTORY_ABI","FACTORY_ADDRESS","getPair","asset","localBaseAssets","localBaseAssetsString","localStorage","getItem","JSON","parse","setItem","stringify","baseAssets","local","BASE_ASSETS_UPDATED","ex","save","getBalance","theBaseAsset","as","baseAssetContract","name","newBaseAsset","logoURI","getLocalAssets","storeBaseAssets","payload","_getGovTokenBase","_getVeTokenBase","_getBaseAssets","_getRouteAssets","routeAssets","_getPairs","CONFIGURED_SS","setTimeout","dispatch","type","GET_BALANCES","ERROR","process","env","NEXT_PUBLIC_API","method","headers","NEXT_PUBLIC_API_TOKEN","response","json","baseAssetsCall","data","nativeFTM","FTM_ADDRESS","FTM_DECIMALS","FTM_LOGO","FTM_NAME","FTM_SYMBOL","unshift","routeAssetsCall","pairsCall","GOV_TOKEN_ADDRESS","GOV_TOKEN_NAME","GOV_TOKEN_SYMBOL","GOV_TOKEN_DECIMALS","GOV_TOKEN_LOGO","VE_TOKEN_NAME","VE_TOKEN_SYMBOL","VE_TOKEN_DECIMALS","VE_TOKEN_LOGO","_getGovTokenInfo","_getBaseAssetInfo","_getPairInfo","error","veTokenContract","GOV_TOKEN_ABI","_getVestNFTs","overridePairs","getMulticall","multicall","allPairsLength","aggregate","getReserves","reserves","ps","bribe","gaugebribes","ps1","voterContract","bal","isWhitelisted","assetContract","baseAssetsBalances","content","ASSET_SEARCHED","context","amount0","amount1","slippage","toki0","toki1","pairFor","updatePairsCall","allowance0TXID","getTXUUID","allowance1TXID","depositTXID","createGaugeTXID","stakeAllowanceTXID","stakeTXID","TX_ADDED","title","verb","transactions","uuid","description","status","allowance0","allowance1","_getDepositAllowance","lt","TX_STATUS","getGasPrice","gasPrice","allowanceCallsPromises","tokenContract","tokenPromise","resolve","reject","_callContractWait","ROUTER_ADDRESS","err","done","sendSlippage","minus","sendAmount0","sendAmount1","deadline","add","unix","sendAmount0Min","sendAmount1Min","func","params","sendValue","routerContract","ROUTER_ABI","tok0","tok1","getPairByAddress","_getStakeAllowance","stakeAllowance","allowanceCallsPromise","stakePromise","sendTok","PAIR_CREATED","ms","minLiquidity","LIQUIDITY_ADDED","LIQUIDITY_STAKED","ADD_LIQUIDITY_AND_STAKED","allowance","addy0","addy1","quoteAddLiquidity","res","returnVal","inputs","output","liquidity","QUOTE_ADD_LIQUIDITY_RETURNED","balanceCalls","poolBalance","pool","GET_LIQUIDITY_BALANCES_RETURNED","allowanceTXID","withdrawTXID","_getWithdrawAllowance","sendAmount","quoteRemoveLiquidity","quoteRemove","amountA","amountB","LIQUIDITY_REMOVED","unstakeTXID","REMOVE_LIQUIDITY_AND_UNSTAKED","LIQUIDITY_UNSTAKED","withdrawAmount","sendWithdrawAmount","QUOTE_REMOVE_LIQUIDITY_RETURNED","CREATE_GAUGE_RETURNED","txUUID","fromAsset","toAsset","fromAmount","sendFromAmount","includesRouteAddress","amountOuts","routeAsset","routes","to","flat","route","getAmountsOut","receiveAmounts","finalValue","bestAmountOut","ret","reduce","best","current","gt","totalRatio","amountIn","amountOut","amIn","reserveA","amOut","reserveB","ratio","priceImpact","returnValue","QUOTE_SWAP_RETURNED","toAmount","quote","swapTXID","_getSwapAllowance","sendMinAmountOut","_getSpecificAssetInfo","SWAP_RETURNED","assetAddress","ba","VEST_NFTS_RETURNED","unlockTime","vestTXID","unlockString","format","_getVestAllowance","getNFTByID","CREATE_VEST_RETURNED","tokenID","_updateVestNFTByID","INCREASE_VEST_AMOUNT_RETURNED","INCREASE_VEST_DURATION_RETURNED","WITHDRAW_VEST_RETURNED","votes","voteTXID","onlyVotes","vote","value","tokens","voteCounts","VOTE_RETURNED","filteredPairs","calls","totalVotes","curr","acc","num","toNumber","plus","votePercent","VEST_VOTES_RETURNED","bribeTXID","_getBribeAllowance","BRIBE_CREATED","earned","bribesEarned","VEST_BALANCES_RETURNED","filteredPairs2","filteredBribes","shouldReturn","rewardType","filteredFees","Object","assign","rewardsEarned","filteredRewards","j","fees","REWARD_BALANCES_RETURNED","claimTXID","sendGauges","sendTokens","getRewardBalances","CLAIM_REWARD_RETURNED","feeClaimTXIDs","rewardClaimTXIDs","bribePairs","feePairs","rewardPairs","CLAIM_ALL_REWARDS_RETURNED","sendOBJ","newClaimTX","claimPromise","rewardPromise","search","listing_fee","listingFee","SEARCH_WHITELIST_RETURNED","whitelistTXID","window","SEARCH_WHITELIST","WHITELIST_TOKEN_RETURNED","contract","dispatchEvent","dispatchContent","callback","paddGasCost","TX_PENDING","gasCost","estimateGas","then","gasAmount","sendGasAmount","send","utils","toWei","gas","on","txHash","TX_SUBMITTED","receipt","TX_CONFIRMED","transactionHash","toString","includes","message","TX_REJECTED","callFrom","batch","BatchRequest","promises","rej","req","request","execute","register","CONFIGURE_SS","configure","getBalances","SEARCH_ASSET","searchBaseAsset","CREATE_PAIR_AND_STAKE","createPairStake","CREATE_PAIR_AND_DEPOSIT","createPairDeposit","ADD_LIQUIDITY","addLiquidity","STAKE_LIQUIDITY","stakeLiquidity","ADD_LIQUIDITY_AND_STAKE","addLiquidityAndStake","QUOTE_ADD_LIQUIDITY","GET_LIQUIDITY_BALANCES","getLiquidityBalances","REMOVE_LIQUIDITY","removeLiquidity","UNSTAKE_AND_REMOVE_LIQUIDITY","unstakeAndRemoveLiquidity","QUOTE_REMOVE_LIQUIDITY","UNSTAKE_LIQUIDITY","unstakeLiquidity","CREATE_GAUGE","createGauge","QUOTE_SWAP","quoteSwap","SWAP","swap","GET_VEST_NFTS","getVestNFTs","CREATE_VEST","createVest","INCREASE_VEST_AMOUNT","increaseVestAmount","INCREASE_VEST_DURATION","increaseVestDuration","WITHDRAW_VEST","withdrawVest","VOTE","GET_VEST_VOTES","getVestVotes","CREATE_BRIBE","createBribe","GET_VEST_BALANCES","getVestBalances","GET_REWARD_BALANCES","CLAIM_BRIBE","claimBribes","CLAIM_PAIR_FEES","claimPairFees","CLAIM_REWARD","claimRewards","CLAIM_ALL_REWARDS","claimAllRewards","searchWhitelist","WHITELIST_TOKEN","whitelistToken","bind"],"mappings":"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","sourcesContent":["import async from \"promise-async\"\nimport {\n  MAX_UINT256,\n  ZERO_ADDRESS,\n  ACTIONS,\n  CONTRACTS\n} from \"./constants\"\nimport { v4 as uuidv4 } from 'uuid'\n\nimport * as moment from \"moment\"\nimport { formatCurrency } from '../utils'\nimport stores from \"./\"\n\nimport BigNumber from \"bignumber.js\"\nconst fetch = require(\"node-fetch\")\n\nclass Store {\n  constructor(dispatcher, emitter) {\n    this.dispatcher = dispatcher\n    this.emitter = emitter\n\n    this.store = {\n      baseAssets: [],\n      assets: [],\n      govToken: null,\n      veToken: null,\n      pairs: [],\n      vestNFTs: [],\n      rewards: {\n        bribes: [],\n        fees: [],\n        rewards: []\n      },\n    }\n\n    dispatcher.register(\n      function (payload) {\n        switch (payload.type) {\n          case ACTIONS.CONFIGURE_SS:\n            this.configure(payload)\n            break\n          case ACTIONS.GET_BALANCES:\n            this.getBalances(payload)\n            break\n          case ACTIONS.SEARCH_ASSET:\n            this.searchBaseAsset(payload)\n            break\n\n          // LIQUIDITY\n          case ACTIONS.CREATE_PAIR_AND_STAKE:\n            this.createPairStake(payload)\n            break\n          case ACTIONS.CREATE_PAIR_AND_DEPOSIT:\n            this.createPairDeposit(payload)\n            break\n          case ACTIONS.ADD_LIQUIDITY:\n            this.addLiquidity(payload)\n            break\n          case ACTIONS.STAKE_LIQUIDITY:\n            this.stakeLiquidity(payload)\n            break\n          case ACTIONS.ADD_LIQUIDITY_AND_STAKE:\n            this.addLiquidityAndStake(payload)\n            break\n          case ACTIONS.QUOTE_ADD_LIQUIDITY:\n            this.quoteAddLiquidity(payload)\n            break\n          case ACTIONS.GET_LIQUIDITY_BALANCES:\n            this.getLiquidityBalances(payload)\n            break\n          case ACTIONS.REMOVE_LIQUIDITY:\n            this.removeLiquidity(payload)\n            break\n          case ACTIONS.UNSTAKE_AND_REMOVE_LIQUIDITY:\n            this.unstakeAndRemoveLiquidity(payload)\n            break\n          case ACTIONS.QUOTE_REMOVE_LIQUIDITY:\n            this.quoteRemoveLiquidity(payload)\n            break\n          case ACTIONS.UNSTAKE_LIQUIDITY:\n            this.unstakeLiquidity(payload)\n            break\n          case ACTIONS.CREATE_GAUGE:\n            this.createGauge(payload)\n            break;\n\n          // SWAP\n          case ACTIONS.QUOTE_SWAP:\n            this.quoteSwap(payload)\n            break\n          case ACTIONS.SWAP:\n            this.swap(payload)\n            break\n\n          // VESTING\n          case ACTIONS.GET_VEST_NFTS:\n            this.getVestNFTs(payload)\n            break\n          case ACTIONS.CREATE_VEST:\n            this.createVest(payload)\n            break\n          case ACTIONS.INCREASE_VEST_AMOUNT:\n            this.increaseVestAmount(payload)\n            break\n          case ACTIONS.INCREASE_VEST_DURATION:\n            this.increaseVestDuration(payload)\n            break\n          case ACTIONS.WITHDRAW_VEST:\n            this.withdrawVest(payload)\n            break\n\n          //VOTE\n          case ACTIONS.VOTE:\n            this.vote(payload)\n            break\n          case ACTIONS.GET_VEST_VOTES:\n            this.getVestVotes(payload)\n            break\n          case ACTIONS.CREATE_BRIBE:\n            this.createBribe(payload)\n            break\n          case ACTIONS.GET_VEST_BALANCES:\n            this.getVestBalances(payload)\n            break\n\n          //REWARDS\n          case ACTIONS.GET_REWARD_BALANCES:\n            this.getRewardBalances(payload)\n            break\n          case ACTIONS.CLAIM_BRIBE:\n            this.claimBribes(payload)\n            break\n          case ACTIONS.CLAIM_PAIR_FEES:\n            this.claimPairFees(payload)\n            break\n          case ACTIONS.CLAIM_REWARD:\n            this.claimRewards(payload)\n            break\n          case ACTIONS.CLAIM_ALL_REWARDS:\n            this.claimAllRewards(payload)\n            break;\n\n          //WHITELIST\n          case ACTIONS.SEARCH_WHITELIST:\n            this.searchWhitelist(payload)\n            break;\n          case ACTIONS.WHITELIST_TOKEN:\n            this.whitelistToken(payload)\n            break;\n          default: {\n          }\n        }\n      }.bind(this),\n    )\n  }\n\n  getStore = (index) => {\n    return this.store[index]\n  }\n\n  setStore = (obj) => {\n    this.store = { ...this.store, ...obj }\n    console.log(this.store)\n    return this.emitter.emit(ACTIONS.STORE_UPDATED)\n  }\n\n\n  // COMMON GETTER FUNCTIONS Assets, BaseAssets, Pairs etc\n  getAsset = (address) => {\n    const assets = this.store.assets\n    if (!assets || assets.length === 0) {\n      return null\n    }\n\n    let theAsset = assets.filter((ass) => {\n      if (!ass) {\n        return false\n      }\n      return ass.address.toLowerCase() === address.toLowerCase()\n    })\n\n    if (!theAsset || theAsset.length === 0) {\n      return null\n    }\n\n    return theAsset[0]\n  }\n\n  getNFTByID = async (id) => {\n    try {\n      const vestNFTs = this.getStore('vestNFTs')\n      let theNFT = vestNFTs.filter((vestNFT) => {\n        return (vestNFT.id == id)\n      })\n\n      if(theNFT.length > 0) {\n        return theNFT[0]\n      }\n\n      const web3 = await stores.accountStore.getWeb3Provider()\n      if (!web3) {\n        console.warn('web3 not found')\n        return null\n      }\n      const account = stores.accountStore.getStore(\"account\")\n      if (!account) {\n        console.warn('account not found')\n        return null\n      }\n\n      const veToken = this.getStore('veToken')\n      const govToken = this.getStore('govToken')\n\n      const vestingContract = new web3.eth.Contract(CONTRACTS.VE_TOKEN_ABI, CONTRACTS.VE_TOKEN_ADDRESS)\n\n      const nftsLength = await vestingContract.methods.balanceOf(account.address).call()\n      const arr = Array.from({length: parseInt(nftsLength)}, (v, i) => i)\n\n      const nfts = await Promise.all(\n        arr.map(async (idx) => {\n\n          const tokenIndex = await vestingContract.methods.tokenOfOwnerByIndex(account.address, idx).call()\n          const locked = await vestingContract.methods.locked(tokenIndex).call()\n          const lockValue = await vestingContract.methods.balanceOfNFT(tokenIndex).call()\n\n          // probably do some decimals math before returning info. Maybe get more info. I don't know what it returns.\n          return {\n            id: tokenIndex,\n            lockEnds: locked.end,\n            lockAmount: BigNumber(locked.amount).div(10**govToken.decimals).toFixed(govToken.decimals),\n            lockValue: BigNumber(lockValue).div(10**veToken.decimals).toFixed(veToken.decimals)\n          }\n        })\n      )\n\n      this.setStore({ vestNFTs: nfts })\n\n      theNFT = nfts.filter((nft) => {\n        return nft.id == id\n      })\n\n      if(theNFT.length > 0) {\n        return theNFT[0]\n      }\n\n      return null\n    } catch(ex) {\n      console.log(ex)\n      return null\n    }\n  }\n\n  _updateVestNFTByID = async (id) => {\n    try {\n      const vestNFTs = this.getStore('vestNFTs')\n      let theNFT = vestNFTs.filter((vestNFT) => {\n        return (vestNFT.id == id)\n      })\n\n      if(theNFT.length == 0) {\n        return null\n      }\n\n      const web3 = await stores.accountStore.getWeb3Provider()\n      if (!web3) {\n        console.warn('web3 not found')\n        return null\n      }\n      const account = stores.accountStore.getStore(\"account\")\n      if (!account) {\n        console.warn('account not found')\n        return null\n      }\n\n      const veToken = this.getStore('veToken')\n      const govToken = this.getStore('govToken')\n\n      const vestingContract = new web3.eth.Contract(CONTRACTS.VE_TOKEN_ABI, CONTRACTS.VE_TOKEN_ADDRESS)\n\n      const locked = await vestingContract.methods.locked(id).call()\n      const lockValue = await vestingContract.methods.balanceOfNFT(id).call()\n\n      const newVestNFTs = vestNFTs.map((nft) => {\n        if(nft.id == id) {\n          return {\n            id: id,\n            lockEnds: locked.end,\n            lockAmount: BigNumber(locked.amount).div(10**govToken.decimals).toFixed(govToken.decimals),\n            lockValue: BigNumber(lockValue).div(10**veToken.decimals).toFixed(veToken.decimals)\n          }\n        }\n\n        return nft\n      })\n\n      this.setStore({ vestNFTs: newVestNFTs })\n      this.emitter.emit(ACTIONS.UPDATED)\n      return null\n    } catch(ex) {\n      console.log(ex)\n      return null\n    }\n  }\n\n  getPairByAddress = async (pairAddress) => {\n    try {\n      const web3 = await stores.accountStore.getWeb3Provider()\n      if (!web3) {\n        console.warn('web3 not found')\n        return null\n      }\n      const account = stores.accountStore.getStore(\"account\")\n      if (!account) {\n        console.warn('account not found')\n        return null\n      }\n\n      const pairs = this.getStore('pairs')\n      let thePair = pairs.filter((pair) => {\n        return (pair.address.toLowerCase() == pairAddress.toLowerCase())\n      })\n\n      if(thePair.length > 0) {\n        const pc = new web3.eth.Contract(CONTRACTS.PAIR_ABI, pairAddress)\n\n        const [ totalSupply, reserve0, reserve1, balanceOf ] = await Promise.all([\n          pc.methods.totalSupply().call(),\n          pc.methods.reserve0().call(),\n          pc.methods.reserve1().call(),\n          pc.methods.balanceOf(account.address).call(),\n        ])\n\n        const returnPair = thePair[0]\n        returnPair.balance = BigNumber(balanceOf).div(10**returnPair.decimals).toFixed(parseInt(returnPair.decimals))\n        returnPair.totalSupply = BigNumber(totalSupply).div(10**returnPair.decimals).toFixed(parseInt(returnPair.decimals))\n        returnPair.reserve0 = BigNumber(reserve0).div(10**returnPair.token0.decimals).toFixed(parseInt(returnPair.token0.decimals))\n        returnPair.reserve1 = BigNumber(reserve1).div(10**returnPair.token1.decimals).toFixed(parseInt(returnPair.token1.decimals))\n\n        return returnPair\n      }\n\n      const pairContract = new web3.eth.Contract(CONTRACTS.PAIR_ABI, pairAddress)\n      const gaugesContract = new web3.eth.Contract(CONTRACTS.VOTER_ABI, CONTRACTS.VOTER_ADDRESS)\n\n      const [ totalWeight ] = await Promise.all([\n        gaugesContract.methods.totalWeight().call()\n      ])\n\n      const [ token0, token1, totalSupply, symbol, reserve0, reserve1, decimals, balanceOf, stable, gaugeAddress, gaugeWeight, claimable0, claimable1 ] = await Promise.all([\n        pairContract.methods.token0().call(),\n        pairContract.methods.token1().call(),\n        pairContract.methods.totalSupply().call(),\n        pairContract.methods.symbol().call(),\n        pairContract.methods.reserve0().call(),\n        pairContract.methods.reserve1().call(),\n        pairContract.methods.decimals().call(),\n        pairContract.methods.balanceOf(account.address).call(),\n        pairContract.methods.stable().call(),\n        gaugesContract.methods.gauges(pairAddress).call(),\n        gaugesContract.methods.weights(pairAddress).call(),\n        pairContract.methods.claimable0(account.address).call(),\n        pairContract.methods.claimable1(account.address).call()\n      ])\n\n      const token0Contract = new web3.eth.Contract(CONTRACTS.ERC20_ABI, token0)\n      const token1Contract = new web3.eth.Contract(CONTRACTS.ERC20_ABI, token1)\n\n      const [ token0Symbol, token0Decimals, token0Balance, token1Symbol, token1Decimals, token1Balance ] = await Promise.all([\n        token0Contract.methods.symbol().call(),\n        token0Contract.methods.decimals().call(),\n        token0Contract.methods.balanceOf(account.address).call(),\n        token1Contract.methods.symbol().call(),\n        token1Contract.methods.decimals().call(),\n        token1Contract.methods.balanceOf(account.address).call(),\n      ])\n\n      thePair = {\n        address: pairAddress,\n        symbol: symbol,\n        decimals: parseInt(decimals),\n        isStable: stable,\n        token0: {\n          address: token0,\n          symbol: token0Symbol,\n          balance: BigNumber(token0Balance).div(10**token0Decimals).toFixed(parseInt(token0Decimals)),\n          decimals: parseInt(token0Decimals)\n        },\n        token1: {\n          address: token1,\n          symbol: token1Symbol,\n          balance: BigNumber(token1Balance).div(10**token1Decimals).toFixed(parseInt(token1Decimals)),\n          decimals: parseInt(token1Decimals)\n        },\n        balance: BigNumber(balanceOf).div(10**decimals).toFixed(parseInt(decimals)),\n        totalSupply: BigNumber(totalSupply).div(10**decimals).toFixed(parseInt(decimals)),\n        reserve0: BigNumber(reserve0).div(10**token0Decimals).toFixed(parseInt(token0Decimals)),\n        reserve1: BigNumber(reserve1).div(10**token1Decimals).toFixed(parseInt(token1Decimals)),\n        claimable0: BigNumber(claimable0).div(10**token0Decimals).toFixed(parseInt(token0Decimals)),\n        claimable1: BigNumber(claimable1).div(10**token1Decimals).toFixed(parseInt(token1Decimals))\n      }\n\n      if(gaugeAddress !== ZERO_ADDRESS) {\n        const gaugeContract = new web3.eth.Contract(CONTRACTS.GAUGE_ABI, gaugeAddress)\n\n        const [ totalSupply, gaugeBalance, bribeAddress ] = await Promise.all([\n          gaugeContract.methods.totalSupply().call(),\n          gaugeContract.methods.balanceOf(account.address).call(),\n          gaugesContract.methods.bribes(gaugeAddress).call()\n        ])\n\n        const bribeContract = new web3.eth.Contract(CONTRACTS.BRIBE_ABI, bribeAddress)\n\n        const tokensLength = await bribeContract.methods.rewardsListLength().call()\n        const arry = Array.from({length: parseInt(tokensLength)}, (v, i) => i)\n\n        const bribes = await Promise.all(\n          arry.map(async (idx) => {\n\n            const tokenAddress = await bribeContract.methods.rewards(idx).call()\n            const token = await this.getBaseAsset(tokenAddress)\n\n            const [ rewardRate ] = await Promise.all([\n              bribeContract.methods.rewardRate(tokenAddress).call(),\n            ])\n\n            return {\n              token: token,\n              rewardRate: BigNumber(rewardRate).div(10**token.decimals).toFixed(token.decimals),\n              rewardAmount: BigNumber(rewardRate).times(604800).div(10**token.decimals).toFixed(token.decimals)\n            }\n\n          })\n        )\n\n        thePair.gauge = {\n          address: gaugeAddress,\n          bribeAddress: bribeAddress,\n          decimals: 18,\n          balance: BigNumber(gaugeBalance).div(10**18).toFixed(18),\n          totalSupply: BigNumber(totalSupply).div(10**18).toFixed(18),\n          weight: BigNumber(gaugeWeight).div(10**18).toFixed(18),\n          weightPercent: BigNumber(gaugeWeight).times(100).div(totalWeight).toFixed(2),\n          bribes: bribes,\n        }\n      }\n\n      pairs.push(thePair)\n      this.setStore({ pairs: pairs })\n\n      return thePair\n    } catch(ex) {\n      console.log(ex)\n      return null\n    }\n  }\n\n  getPair = async (addressA, addressB, stab) => {\n\n    if(addressA === 'FTM') {\n      addressA = CONTRACTS.WFTM_ADDRESS\n    }\n    if(addressB === 'FTM') {\n      addressB = CONTRACTS.WFTM_ADDRESS\n    }\n\n    const web3 = await stores.accountStore.getWeb3Provider()\n    if (!web3) {\n      console.warn('web3 not found')\n      return null\n    }\n    const account = stores.accountStore.getStore(\"account\")\n    if (!account) {\n      console.warn('account not found')\n      return null\n    }\n\n    const pairs = this.getStore('pairs')\n    let thePair = pairs.filter((pair) => {\n      return ((pair.token0.address.toLowerCase() == addressA.toLowerCase() && pair.token1.address.toLowerCase() == addressB.toLowerCase() && pair.isStable == stab) ||\n      (pair.token0.address.toLowerCase() == addressB.toLowerCase() && pair.token1.address.toLowerCase() == addressA.toLowerCase() && pair.isStable == stab))\n    })\n    if(thePair.length > 0) {\n\n      const pc = new web3.eth.Contract(CONTRACTS.PAIR_ABI, thePair[0].address)\n\n      const [ totalSupply, reserve0, reserve1, balanceOf ] = await Promise.all([\n        pc.methods.totalSupply().call(),\n        pc.methods.reserve0().call(),\n        pc.methods.reserve1().call(),\n        pc.methods.balanceOf(account.address).call(),\n      ])\n\n      const returnPair = thePair[0]\n      returnPair.balance = BigNumber(balanceOf).div(10**returnPair.decimals).toFixed(parseInt(returnPair.decimals))\n      returnPair.totalSupply = BigNumber(totalSupply).div(10**returnPair.decimals).toFixed(parseInt(returnPair.decimals))\n      returnPair.reserve0 = BigNumber(reserve0).div(10**returnPair.token0.decimals).toFixed(parseInt(returnPair.token0.decimals))\n      returnPair.reserve1 = BigNumber(reserve1).div(10**returnPair.token1.decimals).toFixed(parseInt(returnPair.token1.decimals))\n\n      return returnPair\n    }\n\n    const factoryContract = new web3.eth.Contract(CONTRACTS.FACTORY_ABI, CONTRACTS.FACTORY_ADDRESS)\n    const pairAddress = await factoryContract.methods.getPair(addressA, addressB, stab).call()\n\n    if(pairAddress && pairAddress != ZERO_ADDRESS) {\n      const pairContract = new web3.eth.Contract(CONTRACTS.PAIR_ABI, pairAddress)\n      const gaugesContract = new web3.eth.Contract(CONTRACTS.VOTER_ABI, CONTRACTS.VOTER_ADDRESS)\n\n      const [ totalWeight ] = await Promise.all([\n        gaugesContract.methods.totalWeight().call()\n      ])\n\n      const [ token0, token1, totalSupply, symbol, reserve0, reserve1, decimals, balanceOf, stable, gaugeAddress, gaugeWeight, claimable0, claimable1 ] = await Promise.all([\n        pairContract.methods.token0().call(),\n        pairContract.methods.token1().call(),\n        pairContract.methods.totalSupply().call(),\n        pairContract.methods.symbol().call(),\n        pairContract.methods.reserve0().call(),\n        pairContract.methods.reserve1().call(),\n        pairContract.methods.decimals().call(),\n        pairContract.methods.balanceOf(account.address).call(),\n        pairContract.methods.stable().call(),\n        gaugesContract.methods.gauges(pairAddress).call(),\n        gaugesContract.methods.weights(pairAddress).call(),\n        pairContract.methods.claimable0(account.address).call(),\n        pairContract.methods.claimable1(account.address).call()\n      ])\n\n      const token0Contract = new web3.eth.Contract(CONTRACTS.ERC20_ABI, token0)\n      const token1Contract = new web3.eth.Contract(CONTRACTS.ERC20_ABI, token1)\n\n      const [ token0Symbol, token0Decimals, token0Balance, token1Symbol, token1Decimals, token1Balance ] = await Promise.all([\n        token0Contract.methods.symbol().call(),\n        token0Contract.methods.decimals().call(),\n        token0Contract.methods.balanceOf(account.address).call(),\n        token1Contract.methods.symbol().call(),\n        token1Contract.methods.decimals().call(),\n        token1Contract.methods.balanceOf(account.address).call(),\n      ])\n\n      thePair = {\n        address: pairAddress,\n        symbol: symbol,\n        decimals: parseInt(decimals),\n        isStable: stable,\n        token0: {\n          address: token0,\n          symbol: token0Symbol,\n          balance: BigNumber(token0Balance).div(10**token0Decimals).toFixed(parseInt(token0Decimals)),\n          decimals: parseInt(token0Decimals)\n        },\n        token1: {\n          address: token1,\n          symbol: token1Symbol,\n          balance: BigNumber(token1Balance).div(10**token1Decimals).toFixed(parseInt(token1Decimals)),\n          decimals: parseInt(token1Decimals)\n        },\n        balance: BigNumber(balanceOf).div(10**decimals).toFixed(parseInt(decimals)),\n        totalSupply: BigNumber(totalSupply).div(10**decimals).toFixed(parseInt(decimals)),\n        reserve0: BigNumber(reserve0).div(10**token0Decimals).toFixed(parseInt(token0Decimals)),\n        reserve1: BigNumber(reserve1).div(10**token1Decimals).toFixed(parseInt(token1Decimals)),\n        claimable0: BigNumber(claimable0).div(10**token0Decimals).toFixed(parseInt(token0Decimals)),\n        claimable1: BigNumber(claimable1).div(10**token1Decimals).toFixed(parseInt(token1Decimals))\n      }\n\n      if(gaugeAddress !== ZERO_ADDRESS) {\n        const gaugeContract = new web3.eth.Contract(CONTRACTS.GAUGE_ABI, gaugeAddress)\n\n        const [ totalSupply, gaugeBalance, bribeAddress ] = await Promise.all([\n          gaugeContract.methods.totalSupply().call(),\n          gaugeContract.methods.balanceOf(account.address).call(),\n          gaugesContract.methods.bribes(gaugeAddress).call()\n        ])\n\n        const bribeContract = new web3.eth.Contract(CONTRACTS.BRIBE_ABI, bribeAddress)\n\n        const tokensLength = await bribeContract.methods.rewardsListLength().call()\n        const arry = Array.from({length: parseInt(tokensLength)}, (v, i) => i)\n\n        const bribes = await Promise.all(\n          arry.map(async (idx) => {\n\n            const tokenAddress = await bribeContract.methods.rewards(idx).call()\n            const token = await this.getBaseAsset(tokenAddress)\n\n            const [ rewardRate ] = await Promise.all([\n              bribeContract.methods.rewardRate(tokenAddress).call(),\n            ])\n\n            return {\n              token: token,\n              rewardRate: BigNumber(rewardRate).div(10**token.decimals).toFixed(token.decimals),\n              rewardAmount: BigNumber(rewardRate).times(604800).div(10**token.decimals).toFixed(token.decimals)\n            }\n          })\n        )\n\n        thePair.gauge = {\n          address: gaugeAddress,\n          bribeAddress: bribeAddress,\n          decimals: 18,\n          balance: BigNumber(gaugeBalance).div(10**18).toFixed(18),\n          totalSupply: BigNumber(totalSupply).div(10**18).toFixed(18),\n          weight: BigNumber(gaugeWeight).div(10**18).toFixed(18),\n          weightPercent: BigNumber(gaugeWeight).times(100).div(totalWeight).toFixed(2),\n          bribes: bribes,\n        }\n      }\n\n      pairs.push(thePair)\n      this.setStore({ pairs: pairs })\n\n      return thePair\n    }\n\n    return null\n  }\n\n  removeBaseAsset = (asset) => {\n    try {\n      let localBaseAssets = []\n      const localBaseAssetsString = localStorage.getItem('stableSwap-assets')\n\n      if(localBaseAssetsString && localBaseAssetsString !== '') {\n        localBaseAssets = JSON.parse(localBaseAssetsString)\n\n        localBaseAssets = localBaseAssets.filter(function( obj ) {\n          return obj.address.toLowerCase() !== asset.address.toLowerCase()\n        })\n\n        localStorage.setItem('stableSwap-assets', JSON.stringify(localBaseAssets))\n\n        let baseAssets = this.getStore('baseAssets')\n        baseAssets = baseAssets.filter(function( obj ) {\n          return obj.address.toLowerCase() !== asset.address.toLowerCase() && asset.local === true\n        })\n\n        this.setStore({ baseAssets: baseAssets })\n        this.emitter.emit(ACTIONS.BASE_ASSETS_UPDATED, baseAssets)\n      }\n    } catch(ex) {\n      console.log(ex)\n      return null\n    }\n  }\n\n  getLocalAssets = () => {\n    try {\n      let localBaseAssets = []\n      const localBaseAssetsString = localStorage.getItem('stableSwap-assets')\n\n      if(localBaseAssetsString && localBaseAssetsString !== '') {\n        localBaseAssets = JSON.parse(localBaseAssetsString)\n      }\n\n      return localBaseAssets\n    } catch(ex) {\n      console.log(ex)\n      return []\n    }\n  }\n\n  getBaseAsset = async (address, save, getBalance) => {\n    try {\n      const baseAssets = this.getStore('baseAssets')\n\n      const theBaseAsset = baseAssets.filter((as) => {\n        return as.address.toLowerCase() === address.toLowerCase()\n      })\n      if(theBaseAsset.length > 0) {\n        return theBaseAsset[0]\n      }\n\n      // not found, so we search the blockchain for it.\n      const web3 = await stores.accountStore.getWeb3Provider()\n      if (!web3) {\n        console.warn('web3 not found')\n        return null\n      }\n\n      const baseAssetContract = new web3.eth.Contract(CONTRACTS.ERC20_ABI, address)\n\n      const [ symbol, decimals, name ] = await Promise.all([\n        baseAssetContract.methods.symbol().call(),\n        baseAssetContract.methods.decimals().call(),\n        baseAssetContract.methods.name().call(),\n      ])\n\n      const newBaseAsset = {\n        address: address,\n        symbol: symbol,\n        name: name,\n        decimals: parseInt(decimals),\n        logoURI: null,\n        local: true\n      }\n\n      if(getBalance) {\n        const account = stores.accountStore.getStore(\"account\")\n        if(account) {\n          const balanceOf = await baseAssetContract.methods.balanceOf(account.address).call()\n          newBaseAsset.balance = BigNumber(balanceOf).div(10**newBaseAsset.decimals).toFixed(newBaseAsset.decimals)\n        }\n      } // GET BACK HERE\n\n      //only save when a user adds it. don't for when we lookup a pair and find he asset.\n      if(save) {\n        let localBaseAssets = this.getLocalAssets()\n        localBaseAssets = [...localBaseAssets, newBaseAsset]\n        localStorage.setItem('stableSwap-assets', JSON.stringify(localBaseAssets))\n\n        const baseAssets = this.getStore('baseAssets')\n        const storeBaseAssets = [...baseAssets, newBaseAsset]\n\n        this.setStore({ baseAssets: storeBaseAssets })\n        this.emitter.emit(ACTIONS.BASE_ASSETS_UPDATED, storeBaseAssets)\n      }\n\n      return newBaseAsset\n    } catch(ex) {\n      console.log(ex)\n      // this.emitter.emit(ACTIONS.ERROR, ex)\n      return null\n    }\n  }\n\n\n\n  // DISPATCHER FUNCTIONS\n  configure = async (payload) => {\n    try {\n      this.setStore({ govToken: this._getGovTokenBase() })\n      this.setStore({ veToken: this._getVeTokenBase() })\n      this.setStore({ baseAssets: await this._getBaseAssets() })\n      this.setStore({ routeAssets: await this._getRouteAssets() })\n      this.setStore({ pairs: await this._getPairs() })\n\n      this.emitter.emit(ACTIONS.UPDATED)\n      this.emitter.emit(ACTIONS.CONFIGURED_SS)\n\n      setTimeout(() => {\n        this.dispatcher.dispatch({ type: ACTIONS.GET_BALANCES })\n      }, 1)\n    } catch (ex) {\n      console.log(ex)\n      this.emitter.emit(ACTIONS.ERROR, ex)\n    }\n  }\n\n  _getBaseAssets = async () => {\n    try {\n      const response = await fetch(`${process.env.NEXT_PUBLIC_API}//v1/baseAssets`, {\n      \tmethod: 'get',\n      \theaders: {\n          'Authorization': `Basic ${process.env.NEXT_PUBLIC_API_TOKEN}`,\n        }\n      })\n      const baseAssetsCall = await response.json()\n\n      let baseAssets = baseAssetsCall.data\n\n      const nativeFTM = {\n        address: CONTRACTS.FTM_ADDRESS,\n        decimals: CONTRACTS.FTM_DECIMALS,\n        logoURI: CONTRACTS.FTM_LOGO,\n        name: CONTRACTS.FTM_NAME,\n        symbol: CONTRACTS.FTM_SYMBOL\n      }\n\n      baseAssets.unshift(nativeFTM)\n\n      let localBaseAssets = this.getLocalAssets()\n\n      return [...baseAssets, ...localBaseAssets]\n\n    } catch(ex) {\n      console.log(ex)\n      return []\n    }\n  }\n\n  _getRouteAssets = async () => {\n    try {\n      const response = await fetch(`${process.env.NEXT_PUBLIC_API}/api/v1/routeAssets`, {\n      \tmethod: 'get',\n      \theaders: {\n          'Authorization': `Basic ${process.env.NEXT_PUBLIC_API_TOKEN}`,\n        }\n      })\n      const routeAssetsCall = await response.json()\n      return routeAssetsCall.data\n    } catch(ex) {\n      console.log(ex)\n      return []\n    }\n  }\n\n  _getPairs = async () => {\n    try {\n      const response = await fetch(`${process.env.NEXT_PUBLIC_API}/api/v1/pairs`, {\n      \tmethod: 'get',\n      \theaders: {\n          'Authorization': `Basic ${process.env.NEXT_PUBLIC_API_TOKEN}`,\n        }\n      })\n      const pairsCall = await response.json()\n      return pairsCall.data\n    } catch(ex) {\n      console.log(ex)\n      return []\n    }\n  }\n\n  _getGovTokenBase = () => {\n    return {\n      address: CONTRACTS.GOV_TOKEN_ADDRESS,\n      name: CONTRACTS.GOV_TOKEN_NAME,\n      symbol: CONTRACTS.GOV_TOKEN_SYMBOL,\n      decimals: CONTRACTS.GOV_TOKEN_DECIMALS,\n      logoURI: CONTRACTS.GOV_TOKEN_LOGO\n    }\n  }\n\n  _getVeTokenBase = () => {\n    return {\n      address: CONTRACTS.VE_TOKEN_ADDRESS,\n      name: CONTRACTS.VE_TOKEN_NAME,\n      symbol: CONTRACTS.VE_TOKEN_SYMBOL,\n      decimals: CONTRACTS.VE_TOKEN_DECIMALS,\n      logoURI: CONTRACTS.VE_TOKEN_LOGO,\n    }\n  }\n\n  getBalances = async (payload) => {\n    try {\n      const account = stores.accountStore.getStore(\"account\")\n      if (!account) {\n        console.warn('account not found')\n        return null\n      }\n\n      const web3 = await stores.accountStore.getWeb3Provider()\n      if (!web3) {\n        console.warn('web3 not found')\n        return null\n      }\n\n      this._getGovTokenInfo(web3, account)\n      await this._getBaseAssetInfo(web3, account)\n      await this._getPairInfo(web3, account)\n    } catch(ex) {\n      console.log(ex)\n      this.emitter.emit(ACTIONS.ERROR, ex)\n    }\n  }\n\n  _getVestNFTs = async (web3, account) => {\n    try {\n      const veToken = this.getStore('veToken')\n      const govToken = this.getStore('govToken')\n\n      const vestingContract = new web3.eth.Contract(CONTRACTS.VE_TOKEN_ABI, CONTRACTS.VE_TOKEN_ADDRESS)\n\n      const nftsLength = await vestingContract.methods.balanceOf(account.address).call()\n      const arr = Array.from({length: parseInt(nftsLength)}, (v, i) => i)\n\n      const nfts = await Promise.all(\n        arr.map(async (idx) => {\n\n          const tokenIndex = await vestingContract.methods.tokenOfOwnerByIndex(account.address, idx).call()\n          const locked = await vestingContract.methods.locked(tokenIndex).call()\n          const lockValue = await vestingContract.methods.balanceOfNFT(tokenIndex).call()\n\n          // probably do some decimals math before returning info. Maybe get more info. I don't know what it returns.\n          return {\n            id: tokenIndex,\n            lockEnds: locked.end,\n            lockAmount: BigNumber(locked.amount).div(10**govToken.decimals).toFixed(govToken.decimals),\n            lockValue: BigNumber(lockValue).div(10**veToken.decimals).toFixed(veToken.decimals)\n          }\n        })\n      )\n\n      this.setStore({ vestNFTs: nfts })\n      this.emitter.emit(ACTIONS.UPDATED)\n\n    } catch(ex) {\n      console.error(ex)\n      this.emitter.emit(ACTIONS.ERROR, ex)\n    }\n  }\n\n  _getGovTokenInfo = async (web3, account) => {\n    try {\n      const govToken = this.getStore('govToken')\n      if (!govToken) {\n        console.warn('govToken not found')\n        return null\n      }\n\n      const veTokenContract = new web3.eth.Contract(CONTRACTS.GOV_TOKEN_ABI, CONTRACTS.GOV_TOKEN_ADDRESS)\n\n      const [ balanceOf ] = await Promise.all([\n        veTokenContract.methods.balanceOf(account.address).call()\n      ])\n\n      govToken.balanceOf = balanceOf\n      govToken.balance = BigNumber(balanceOf).div(10**govToken.decimals).toFixed(govToken.decimals)\n\n      this.setStore({ govToken })\n      this.emitter.emit(ACTIONS.UPDATED)\n\n      this._getVestNFTs(web3, account)\n    } catch (ex) {\n      console.log(ex)\n    }\n  }\n\n  _getPairInfo = async (web3, account, overridePairs) => {\n    try {\n      const multicall = await stores.accountStore.getMulticall()\n\n      let pairs = []\n\n      if(overridePairs) {\n        pairs = overridePairs\n      } else {\n        pairs = this.getStore('pairs')\n      }\n\n      const factoryContract = new web3.eth.Contract(CONTRACTS.FACTORY_ABI, CONTRACTS.FACTORY_ADDRESS)\n      const gaugesContract = new web3.eth.Contract(CONTRACTS.VOTER_ABI, CONTRACTS.VOTER_ADDRESS)\n\n      const [ allPairsLength, totalWeight ] = await Promise.all([\n        factoryContract.methods.allPairsLength().call(),\n        gaugesContract.methods.totalWeight().call()\n      ])\n\n      const ps = await Promise.all(\n        pairs.map(async (pair) => {\n          try {\n            const pairContract = new web3.eth.Contract(CONTRACTS.PAIR_ABI, pair.address)\n            const token0Contract = new web3.eth.Contract(CONTRACTS.ERC20_ABI, pair.token0.address)\n            const token1Contract = new web3.eth.Contract(CONTRACTS.ERC20_ABI, pair.token1.address)\n\n            const token0 = await this.getBaseAsset(pair.token0.address, false, true)\n            const token1 = await this.getBaseAsset(pair.token1.address, false, true)\n\n            const [ totalSupply, reserves, balanceOf, claimable0, claimable1 ] = await multicall.aggregate([\n              pairContract.methods.totalSupply(),\n              pairContract.methods.getReserves(),\n              pairContract.methods.balanceOf(account.address),\n              pairContract.methods.claimable0(account.address),\n              pairContract.methods.claimable1(account.address)\n            ])\n\n            pair.token0 = token0 != null ? token0 : pair.token0\n            pair.token1 = token1 != null ? token1 : pair.token1\n            pair.balance = BigNumber(balanceOf).div(10**pair.decimals).toFixed(parseInt(pair.decimals))\n            pair.totalSupply = BigNumber(totalSupply).div(10**pair.decimals).toFixed(parseInt(pair.decimals))\n            pair.reserve0 = BigNumber(reserves[0]).div(10**pair.token0.decimals).toFixed(parseInt(pair.token0.decimals))\n            pair.reserve1 = BigNumber(reserves[1]).div(10**pair.token1.decimals).toFixed(parseInt(pair.token1.decimals))\n            pair.claimable0 = BigNumber(claimable0).div(10**pair.token0.decimals).toFixed(pair.token0.decimals)\n            pair.claimable1 = BigNumber(claimable1).div(10**pair.token1.decimals).toFixed(pair.token1.decimals)\n\n            return pair\n          } catch (ex) {\n            console.log('EXCEPTION 1')\n            console.log(pair)\n            console.log(ex)\n            return pair\n          }\n        })\n      )\n\n      this.setStore({ pairs: ps })\n      this.emitter.emit(ACTIONS.UPDATED)\n\n\n      const ps1 = await Promise.all(\n        ps.map(async (pair) => {\n          try {\n\n            if(pair.gauge && pair.gauge.address !== ZERO_ADDRESS) {\n              const gaugeContract = new web3.eth.Contract(CONTRACTS.GAUGE_ABI, pair.gauge.address)\n\n              const [ totalSupply, gaugeBalance, gaugeWeight ] = await multicall.aggregate([\n                gaugeContract.methods.totalSupply(),\n                gaugeContract.methods.balanceOf(account.address),\n                gaugesContract.methods.weights(pair.address)\n              ])\n\n              const bribeContract = new web3.eth.Contract(CONTRACTS.BRIBE_ABI, pair.gauge.bribeAddress)\n\n              const bribes = await Promise.all(\n                pair.gauge.bribes.map(async (bribe, idx) => {\n\n                  const [ rewardRate ] = await Promise.all([\n                    bribeContract.methods.rewardRate(bribe.token.address).call(),\n                  ])\n\n                  bribe.rewardRate = BigNumber(rewardRate).div(10**bribe.token.decimals).toFixed(bribe.token.decimals)\n                  bribe.rewardAmount = BigNumber(rewardRate).times(604800).div(10**bribe.token.decimals).toFixed(bribe.token.decimals)\n\n                  return bribe\n                })\n              )\n\n              pair.gauge.balance = BigNumber(gaugeBalance).div(10**18).toFixed(18)\n              pair.gauge.totalSupply = BigNumber(totalSupply).div(10**18).toFixed(18)\n              pair.gauge.reserve0 = pair.totalSupply > 0 ? BigNumber(pair.reserve0).times(pair.gauge.totalSupply).div(pair.totalSupply).toFixed(pair.token0.decimals) : '0'\n              pair.gauge.reserve1 = pair.totalSupply > 0 ? BigNumber(pair.reserve1).times(pair.gauge.totalSupply).div(pair.totalSupply).toFixed(pair.token1.decimals) : '0'\n              pair.gauge.weight = BigNumber(gaugeWeight).div(10**18).toFixed(18)\n              pair.gauge.weightPercent = BigNumber(gaugeWeight).times(100).div(totalWeight).toFixed(2)\n              pair.gaugebribes = bribes\n            }\n\n            return pair\n\n          } catch (ex) {\n            console.log('EXCEPTION 2')\n            console.log(pair)\n            console.log(ex)\n            return pair\n          }\n        })\n      )\n\n      this.setStore({ pairs: ps1 })\n      this.emitter.emit(ACTIONS.UPDATED)\n\n    } catch (ex) {\n      console.log(ex)\n    }\n  }\n\n  _getBaseAssetInfo = async (web3, account) => {\n    try {\n      const baseAssets = this.getStore(\"baseAssets\")\n      if (!baseAssets) {\n        console.warn('baseAssets not found')\n        return null\n      }\n\n      const voterContract = new web3.eth.Contract(CONTRACTS.VOTER_ABI, CONTRACTS.VOTER_ADDRESS)\n\n      const baseAssetsBalances = await Promise.all(\n        baseAssets.map(async (asset) => {\n          try {\n            if(asset.address === 'FTM') {\n              let bal = await web3.eth.getBalance(account.address)\n              return {\n                balanceOf: bal,\n                isWhitelisted: true\n              }\n            }\n\n            const assetContract = new web3.eth.Contract(CONTRACTS.ERC20_ABI, asset.address)\n\n            const [ isWhitelisted, balanceOf ] = await Promise.all([\n              voterContract.methods.isWhitelisted(asset.address).call(),\n              assetContract.methods.balanceOf(account.address).call(),\n            ])\n\n            return {\n              balanceOf,\n              isWhitelisted\n            }\n          } catch(ex) {\n            console.log(\"EXCEPTION 3\")\n            console.log(asset)\n            console.log(ex)\n            return {\n              balanceOf: '0',\n              isWhitelisted: false\n            }\n          }\n        })\n      )\n\n      for (let i = 0; i < baseAssets.length; i++) {\n        baseAssets[i].balance = BigNumber(baseAssetsBalances[i].balanceOf).div(10 ** baseAssets[i].decimals).toFixed(baseAssets[i].decimals)\n        baseAssets[i].isWhitelisted = baseAssetsBalances[i].isWhitelisted\n      }\n\n      this.setStore({ baseAssets })\n      this.emitter.emit(ACTIONS.UPDATED)\n    } catch (ex) {\n      console.log(ex)\n    }\n  }\n\n  searchBaseAsset = async (payload) => {\n    try {\n      let localBaseAssets = []\n      const localBaseAssetsString = localStorage.getItem('stableSwap-assets')\n\n      if(localBaseAssetsString && localBaseAssetsString !== '') {\n        localBaseAssets = JSON.parse(localBaseAssetsString)\n      }\n\n      const theBaseAsset = localBaseAssets.filter((as) => {\n        return as.address.toLowerCase() === payload.content.address.toLowerCase()\n      })\n      if(theBaseAsset.length > 0) {\n        this.emitter.emit(ACTIONS.ASSET_SEARCHED, theBaseAsset)\n        return\n      }\n\n      const baseAssetContract = new web3.eth.Contract(CONTRACTS.ERC20_ABI, payload.content.address)\n\n      const [ symbol, decimals, name ] = await Promise.all([\n        baseAssetContract.methods.symbol().call(),\n        baseAssetContract.methods.decimals().call(),\n        baseAssetContract.methods.name().call(),\n      ])\n\n      const newBaseAsset = {\n        address: payload.content.address,\n        symbol: symbol,\n        name: name,\n        decimals: parseInt(decimals)\n      }\n\n      localBaseAssets = [...localBaseAssets, newBaseAsset]\n      localStorage.setItem('stableSwap-assets', JSON.stringify(localBaseAssets))\n\n      const baseAssets = this.getStore('baseAssets')\n      const storeBaseAssets = [...baseAssets, ...localBaseAssets]\n\n      this.setStore({ baseAssets: storeBaseAssets })\n\n      this.emitter.emit(ACTIONS.ASSET_SEARCHED, newBaseAsset)\n    } catch(ex) {\n      console.log(ex)\n      this.emitter.emit(ACTIONS.ERROR, ex)\n    }\n  }\n\n  createPairStake = async (payload) => {\n    try {\n      const context = this\n\n      const account = stores.accountStore.getStore(\"account\")\n      if (!account) {\n        console.warn('account not found')\n        return null\n      }\n\n      const web3 = await stores.accountStore.getWeb3Provider()\n      if (!web3) {\n        console.warn('web3 not found')\n        return null\n      }\n\n      const { token0, token1, amount0, amount1, isStable, token, slippage } = payload.content\n\n      let toki0 = token0.address\n      let toki1 = token1.address\n      if(token0.address === 'FTM') {\n        toki0 = CONTRACTS.WFTM_ADDRESS\n      }\n      if(token1.address === 'FTM') {\n        toki1 = CONTRACTS.WFTM_ADDRESS\n      }\n\n      const factoryContract = new web3.eth.Contract(CONTRACTS.FACTORY_ABI, CONTRACTS.FACTORY_ADDRESS)\n      const pairFor = await factoryContract.methods.getPair(toki0, toki1, isStable).call()\n\n      if(pairFor && pairFor != ZERO_ADDRESS) {\n        await context.updatePairsCall(web3, account)\n        this.emitter.emit(ACTIONS.ERROR, 'Pair already exists')\n        return null\n      }\n\n      // ADD TRNASCTIONS TO TRANSACTION QUEUE DISPLAY\n      let allowance0TXID = this.getTXUUID()\n      let allowance1TXID = this.getTXUUID()\n      let depositTXID = this.getTXUUID()\n      let createGaugeTXID = this.getTXUUID()\n      let stakeAllowanceTXID = this.getTXUUID()\n      let stakeTXID = this.getTXUUID()\n\n      //DOD A CHECK FOR IF THE POOL ALREADY EXISTS\n\n      this.emitter.emit(ACTIONS.TX_ADDED, { title: `Create liquidity pool for ${token0.symbol}/${token1.symbol}`, type: 'Liquidity', verb: 'Liquidity Pool Created', transactions: [\n        {\n          uuid: allowance0TXID,\n          description: `Checking your ${token0.symbol} allowance`,\n          status: 'WAITING'\n        },\n        {\n          uuid: allowance1TXID,\n          description: `Checking your ${token1.symbol} allowance`,\n          status: 'WAITING'\n        },\n        {\n          uuid: depositTXID,\n          description: `Create liquidity pool`,\n          status: 'WAITING'\n        },\n        {\n          uuid: createGaugeTXID,\n          description: `Create gauge`,\n          status: 'WAITING'\n        },\n        {\n          uuid: stakeAllowanceTXID,\n          description: `Checking your pool allowance`,\n          status: 'WAITING'\n        },\n        {\n          uuid: stakeTXID,\n          description: `Stake LP tokens in the gauge`,\n          status: 'WAITING'\n        }\n      ]})\n\n      let allowance0 = 0\n      let allowance1 = 0\n\n      // CHECK ALLOWANCES AND SET TX DISPLAY\n      if(token0.address !== 'FTM') {\n        allowance0 = await this._getDepositAllowance(web3, token0, account)\n        if(BigNumber(allowance0).lt(amount0)) {\n          this.emitter.emit(ACTIONS.TX_STATUS, {\n            uuid: allowance0TXID,\n            description: `Allow the router to spend your ${token0.symbol}`\n          })\n        } else {\n          this.emitter.emit(ACTIONS.TX_STATUS, {\n            uuid: allowance0TXID,\n            description: `Allowance on ${token0.symbol} sufficient`,\n            status: 'DONE'\n          })\n        }\n      } else {\n        allowance0 = MAX_UINT256\n        this.emitter.emit(ACTIONS.TX_STATUS, {\n          uuid: allowance0TXID,\n          description: `Allowance on ${token0.symbol} sufficient`,\n          status: 'DONE'\n        })\n      }\n\n      if(token1.address !== 'FTM') {\n        allowance1 = await this._getDepositAllowance(web3, token1, account)\n        if(BigNumber(allowance1).lt(amount1)) {\n          this.emitter.emit(ACTIONS.TX_STATUS, {\n            uuid: allowance1TXID,\n            description: `Allow the router to spend your ${token1.symbol}`\n          })\n        } else {\n          this.emitter.emit(ACTIONS.TX_STATUS, {\n            uuid: allowance1TXID,\n            description: `Allowance on ${token1.symbol} sufficient`,\n            status: 'DONE'\n          })\n        }\n      } else {\n        allowance1 = MAX_UINT256\n        this.emitter.emit(ACTIONS.TX_STATUS, {\n          uuid: allowance1TXID,\n          description: `Allowance on ${token1.symbol} sufficient`,\n          status: 'DONE'\n        })\n      }\n\n      const gasPrice = await stores.accountStore.getGasPrice()\n\n      const allowanceCallsPromises = []\n\n      // SUBMIT REQUIRED ALLOWANCE TRANSACTIONS\n      if(BigNumber(allowance0).lt(amount0)) {\n        const tokenContract = new web3.eth.Contract(CONTRACTS.ERC20_ABI, token0.address)\n\n        const tokenPromise = new Promise((resolve, reject) => {\n          context._callContractWait(web3, tokenContract, 'approve', [CONTRACTS.ROUTER_ADDRESS, MAX_UINT256], account, gasPrice, null, null, allowance0TXID, (err) => {\n            if (err) {\n              reject(err)\n              return\n            }\n\n            resolve()\n          })\n        })\n\n        allowanceCallsPromises.push(tokenPromise)\n      }\n\n\n      if(BigNumber(allowance1).lt(amount1)) {\n        const tokenContract = new web3.eth.Contract(CONTRACTS.ERC20_ABI, token1.address)\n\n        const tokenPromise = new Promise((resolve, reject) => {\n          context._callContractWait(web3, tokenContract, 'approve', [CONTRACTS.ROUTER_ADDRESS, MAX_UINT256], account, gasPrice, null, null, allowance1TXID, (err) => {\n            if (err) {\n              reject(err)\n              return\n            }\n\n            resolve()\n          })\n        })\n\n        allowanceCallsPromises.push(tokenPromise)\n      }\n\n      const done = await Promise.all(allowanceCallsPromises)\n\n\n      // SUBMIT DEPOSIT TRANSACTION\n      const sendSlippage = BigNumber(100).minus(slippage).div(100)\n      const sendAmount0 = BigNumber(amount0).times(10**token0.decimals).toFixed(0)\n      const sendAmount1 = BigNumber(amount1).times(10**token1.decimals).toFixed(0)\n      const deadline = ''+moment().add(600, 'seconds').unix()\n      const sendAmount0Min = BigNumber(amount0).times(sendSlippage).times(10**token0.decimals).toFixed(0)\n      const sendAmount1Min = BigNumber(amount1).times(sendSlippage).times(10**token1.decimals).toFixed(0)\n\n\n      let func = 'addLiquidity'\n      let params = [token0.address, token1.address, isStable, sendAmount0, sendAmount1, sendAmount0Min, sendAmount1Min, account.address, deadline]\n      let sendValue = null\n\n      if(token0.address === 'FTM') {\n        func = 'addLiquidityFTM'\n        params = [token1.address, isStable, sendAmount1, sendAmount1Min, sendAmount0Min, account.address, deadline]\n        sendValue = sendAmount0\n      }\n      if(token1.address === 'FTM') {\n        func = 'addLiquidityFTM'\n        params = [token0.address, isStable, sendAmount0, sendAmount0Min, sendAmount1Min, account.address, deadline]\n        sendValue = sendAmount1\n      }\n\n      const routerContract = new web3.eth.Contract(CONTRACTS.ROUTER_ABI, CONTRACTS.ROUTER_ADDRESS)\n      this._callContractWait(web3, routerContract, func, params, account, gasPrice, null, null, depositTXID, async (err) => {\n        if (err) {\n          return this.emitter.emit(ACTIONS.ERROR, err)\n        }\n\n        // GET PAIR FOR NEWLY CREATED LIQUIDITY POOL\n        let tok0 = token0.address\n        let tok1 = token1.address\n        if(token0.address === 'FTM') {\n          tok0 = CONTRACTS.WFTM_ADDRESS\n        }\n        if(token1.address === 'FTM') {\n          tok1 = CONTRACTS.WFTM_ADDRESS\n        }\n        const pairFor = await factoryContract.methods.getPair(tok0, tok1, isStable).call()\n\n        // SUBMIT CREATE GAUGE TRANSACTION\n        const gaugesContract = new web3.eth.Contract(CONTRACTS.VOTER_ABI, CONTRACTS.VOTER_ADDRESS)\n        this._callContractWait(web3, gaugesContract, 'createGauge', [pairFor], account, gasPrice, null, null, createGaugeTXID, async (err) => {\n          if (err) {\n            return this.emitter.emit(ACTIONS.ERROR, err)\n          }\n\n          const gaugeAddress = await gaugesContract.methods.gauges(pairFor).call()\n\n          const pairContract = new web3.eth.Contract(CONTRACTS.PAIR_ABI, pairFor)\n          const gaugeContract = new web3.eth.Contract(CONTRACTS.GAUGE_ABI, gaugeAddress)\n\n          const balanceOf = await pairContract.methods.balanceOf(account.address).call()\n\n          const pair = await this.getPairByAddress(pairFor)\n          const stakeAllowance = await this._getStakeAllowance(web3, pair, account)\n\n          if(BigNumber(stakeAllowance).lt( BigNumber(balanceOf).div(10**pair.decimals).toFixed(pair.decimals) )) {\n            this.emitter.emit(ACTIONS.TX_STATUS, {\n              uuid: stakeAllowanceTXID,\n              description: `Allow the router to spend your ${pair.symbol}`\n            })\n          } else {\n            this.emitter.emit(ACTIONS.TX_STATUS, {\n              uuid: stakeAllowanceTXID,\n              description: `Allowance on ${pair.symbol} sufficient`,\n              status: 'DONE'\n            })\n          }\n\n          const allowanceCallsPromise = []\n\n          if(BigNumber(stakeAllowance).lt( BigNumber(balanceOf).div(10**pair.decimals).toFixed(pair.decimals)  )) {\n            const stakePromise = new Promise((resolve, reject) => {\n              context._callContractWait(web3, pairContract, 'approve', [pair.gauge.address, MAX_UINT256], account, gasPrice, null, null, stakeAllowanceTXID, (err) => {\n                if (err) {\n                  reject(err)\n                  return\n                }\n\n                resolve()\n              })\n            })\n\n            allowanceCallsPromise.push(stakePromise)\n          }\n\n          const done = await Promise.all(allowanceCallsPromise)\n\n          let sendTok = '0'\n          if(token && token.id) {\n            sendTok = token.id\n          }\n\n          this._callContractWait(web3, gaugeContract, 'deposit', [balanceOf, sendTok], account, gasPrice, null, null, stakeTXID, async (err) => {\n            if (err) {\n              return this.emitter.emit(ACTIONS.ERROR, err)\n            }\n\n            await context.updatePairsCall(web3, account)\n\n            this.emitter.emit(ACTIONS.PAIR_CREATED, pairFor)\n          })\n\n        })\n      }, null, sendValue)\n    } catch(ex) {\n      console.error(ex)\n      this.emitter.emit(ACTIONS.ERROR, ex)\n    }\n  }\n\n  createPairDeposit = async (payload) => {\n    try {\n      const context = this\n\n      const account = stores.accountStore.getStore(\"account\")\n      if (!account) {\n        console.warn('account not found')\n        return null\n      }\n\n      const web3 = await stores.accountStore.getWeb3Provider()\n      if (!web3) {\n        console.warn('web3 not found')\n        return null\n      }\n\n      const { token0, token1, amount0, amount1, isStable, slippage } = payload.content\n\n      let toki0 = token0.address\n      let toki1 = token1.address\n      if(token0.address === 'FTM') {\n        toki0 = CONTRACTS.WFTM_ADDRESS\n      }\n      if(token1.address === 'FTM') {\n        toki1 = CONTRACTS.WFTM_ADDRESS\n      }\n\n\n      const factoryContract = new web3.eth.Contract(CONTRACTS.FACTORY_ABI, CONTRACTS.FACTORY_ADDRESS)\n      const pairFor = await factoryContract.methods.getPair(toki0, toki1, isStable).call()\n\n      if(pairFor && pairFor != ZERO_ADDRESS) {\n        await context.updatePairsCall(web3, account)\n        this.emitter.emit(ACTIONS.ERROR, 'Pair already exists')\n        return null\n      }\n\n      // ADD TRNASCTIONS TO TRANSACTION QUEUE DISPLAY\n      let allowance0TXID = this.getTXUUID()\n      let allowance1TXID = this.getTXUUID()\n      let depositTXID = this.getTXUUID()\n      let createGaugeTXID = this.getTXUUID()\n\n      //DOD A CHECK FOR IF THE POOL ALREADY EXISTS\n\n      this.emitter.emit(ACTIONS.TX_ADDED, { title: `Create liquidity pool for ${token0.symbol}/${token1.symbol}`, type: 'Liquidity', verb: 'Liquidity Pool Created', transactions: [\n        {\n          uuid: allowance0TXID,\n          description: `Checking your ${token0.symbol} allowance`,\n          status: 'WAITING'\n        },\n        {\n          uuid: allowance1TXID,\n          description: `Checking your ${token1.symbol} allowance`,\n          status: 'WAITING'\n        },\n        {\n          uuid: depositTXID,\n          description: `Create liquidity pool`,\n          status: 'WAITING'\n        },\n        {\n          uuid: createGaugeTXID,\n          description: `Create gauge`,\n          status: 'WAITING'\n        }\n      ]})\n\n      let allowance0 = 0\n      let allowance1 = 0\n\n      // CHECK ALLOWANCES AND SET TX DISPLAY\n      if(token0.address !== 'FTM') {\n        allowance0 = await this._getDepositAllowance(web3, token0, account)\n        if(BigNumber(allowance0).lt(amount0)) {\n          this.emitter.emit(ACTIONS.TX_STATUS, {\n            uuid: allowance0TXID,\n            description: `Allow the router to spend your ${token0.symbol}`\n          })\n        } else {\n          this.emitter.emit(ACTIONS.TX_STATUS, {\n            uuid: allowance0TXID,\n            description: `Allowance on ${token0.symbol} sufficient`,\n            status: 'DONE'\n          })\n        }\n      } else {\n        allowance0 = MAX_UINT256\n        this.emitter.emit(ACTIONS.TX_STATUS, {\n          uuid: allowance0TXID,\n          description: `Allowance on ${token0.symbol} sufficient`,\n          status: 'DONE'\n        })\n      }\n\n      if(token1.address !== 'FTM') {\n        allowance1 = await this._getDepositAllowance(web3, token1, account)\n        if(BigNumber(allowance1).lt(amount1)) {\n          this.emitter.emit(ACTIONS.TX_STATUS, {\n            uuid: allowance1TXID,\n            description: `Allow the router to spend your ${token1.symbol}`\n          })\n        } else {\n          this.emitter.emit(ACTIONS.TX_STATUS, {\n            uuid: allowance1TXID,\n            description: `Allowance on ${token1.symbol} sufficient`,\n            status: 'DONE'\n          })\n        }\n      } else {\n        allowance1 = MAX_UINT256\n        this.emitter.emit(ACTIONS.TX_STATUS, {\n          uuid: allowance1TXID,\n          description: `Allowance on ${token1.symbol} sufficient`,\n          status: 'DONE'\n        })\n      }\n\n      const gasPrice = await stores.accountStore.getGasPrice()\n\n      const allowanceCallsPromises = []\n\n\n      // SUBMIT REQUIRED ALLOWANCE TRANSACTIONS\n      if(BigNumber(allowance0).lt(amount0)) {\n        const tokenContract = new web3.eth.Contract(CONTRACTS.ERC20_ABI, token0.address)\n\n        const tokenPromise = new Promise((resolve, reject) => {\n          context._callContractWait(web3, tokenContract, 'approve', [CONTRACTS.ROUTER_ADDRESS, MAX_UINT256], account, gasPrice, null, null, allowance0TXID, (err) => {\n            if (err) {\n              reject(err)\n              return\n            }\n\n            resolve()\n          })\n        })\n\n        allowanceCallsPromises.push(tokenPromise)\n      }\n\n\n      if(BigNumber(allowance1).lt(amount1)) {\n        const tokenContract = new web3.eth.Contract(CONTRACTS.ERC20_ABI, token1.address)\n\n        const tokenPromise = new Promise((resolve, reject) => {\n          context._callContractWait(web3, tokenContract, 'approve', [CONTRACTS.ROUTER_ADDRESS, MAX_UINT256], account, gasPrice, null, null, allowance1TXID, (err) => {\n            if (err) {\n              reject(err)\n              return\n            }\n\n            resolve()\n          })\n        })\n\n        allowanceCallsPromises.push(tokenPromise)\n      }\n\n      const done = await Promise.all(allowanceCallsPromises)\n\n\n      // SUBMIT DEPOSIT TRANSACTION\n      const sendSlippage = BigNumber(100).minus(slippage).div(100)\n      const sendAmount0 = BigNumber(amount0).times(10**token0.decimals).toFixed(0)\n      const sendAmount1 = BigNumber(amount1).times(10**token1.decimals).toFixed(0)\n      const deadline = ''+moment().add(600, 'seconds').unix()\n      const sendAmount0Min = BigNumber(amount0).times(sendSlippage).times(10**token0.decimals).toFixed(0)\n      const sendAmount1Min = BigNumber(amount1).times(sendSlippage).times(10**token1.decimals).toFixed(0)\n\n\n      let func = 'addLiquidity'\n      let params = [token0.address, token1.address, isStable, sendAmount0, sendAmount1, sendAmount0Min, sendAmount1Min, account.address, deadline]\n      let sendValue = null\n\n      if(token0.address === 'FTM') {\n        func = 'addLiquidityFTM'\n        params = [token1.address, isStable, sendAmount1, sendAmount1Min, sendAmount0Min, account.address, deadline]\n        sendValue = sendAmount0\n      }\n      if(token1.address === 'FTM') {\n        func = 'addLiquidityFTM'\n        params = [token0.address, isStable, sendAmount0, sendAmount0Min, sendAmount1Min, account.address, deadline]\n        sendValue = sendAmount1\n      }\n\n      const routerContract = new web3.eth.Contract(CONTRACTS.ROUTER_ABI, CONTRACTS.ROUTER_ADDRESS)\n      this._callContractWait(web3, routerContract, func, params, account, gasPrice, null, null, depositTXID, async (err) => {\n        if (err) {\n          return this.emitter.emit(ACTIONS.ERROR, err)\n        }\n\n        // GET PAIR FOR NEWLY CREATED LIQUIDITY POOL\n        let tok0 = token0.address\n        let tok1 = token1.address\n        if(token0.address === 'FTM') {\n          tok0 = CONTRACTS.WFTM_ADDRESS\n        }\n        if(token1.address === 'FTM') {\n          tok1 = CONTRACTS.WFTM_ADDRESS\n        }\n        const pairFor = await factoryContract.methods.getPair(tok0, tok1, isStable).call()\n\n        // SUBMIT CREATE GAUGE TRANSACTION\n        const gaugesContract = new web3.eth.Contract(CONTRACTS.VOTER_ABI, CONTRACTS.VOTER_ADDRESS)\n        this._callContractWait(web3, gaugesContract, 'createGauge', [pairFor], account, gasPrice, null, null, createGaugeTXID, async (err) => {\n          if (err) {\n            return this.emitter.emit(ACTIONS.ERROR, err)\n          }\n\n          await context.updatePairsCall(web3, account)\n\n          this.emitter.emit(ACTIONS.PAIR_CREATED, pairFor)\n        })\n      }, null, sendValue)\n    } catch(ex) {\n      console.error(ex)\n      this.emitter.emit(ACTIONS.ERROR, ex)\n    }\n  }\n\n  updatePairsCall = async (web3, account) => {\n    try {\n      const response = await fetch(`${process.env.NEXT_PUBLIC_API}/api/v1/updatePairs`, {\n        method: 'get',\n        headers: {\n          'Authorization': `Basic ${process.env.NEXT_PUBLIC_API_TOKEN}`,\n        }\n      })\n      const pairsCall = await response.json()\n      this.setStore({ pairs: pairsCall.data })\n\n      await this._getPairInfo(web3, account, pairsCall.data)\n\n    } catch(ex) {\n      console.log(ex)\n    }\n  }\n\n  sleep = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms))\n  }\n\n  getTXUUID = () => {\n    return uuidv4()\n  }\n\n  addLiquidity = async (payload) => {\n    try {\n      const context = this\n\n      const account = stores.accountStore.getStore(\"account\")\n      if (!account) {\n        console.warn('account not found')\n        return null\n      }\n\n      const web3 = await stores.accountStore.getWeb3Provider()\n      if (!web3) {\n        console.warn('web3 not found')\n        return null\n      }\n\n      const { token0, token1, amount0, amount1, minLiquidity, pair, slippage } = payload.content\n\n      // ADD TRNASCTIONS TO TRANSACTION QUEUE DISPLAY\n      let allowance0TXID = this.getTXUUID()\n      let allowance1TXID = this.getTXUUID()\n      let depositTXID = this.getTXUUID()\n\n      this.emitter.emit(ACTIONS.TX_ADDED, { title: `Add liquidity to ${pair.symbol}`, verb: 'Liquidity Added', type: 'Liquidity', transactions: [\n        {\n          uuid: allowance0TXID,\n          description: `Checking your ${token0.symbol} allowance`,\n          status: 'WAITING'\n        },\n        {\n          uuid: allowance1TXID,\n          description: `Checking your ${token1.symbol} allowance`,\n          status: 'WAITING'\n        },\n        {\n          uuid: depositTXID,\n          description: `Deposit tokens in the pool`,\n          status: 'WAITING'\n        },\n      ]})\n\n      let allowance0 = 0\n      let allowance1 = 0\n\n      // CHECK ALLOWANCES AND SET TX DISPLAY\n      if(token0.address !== 'FTM') {\n        allowance0 = await this._getDepositAllowance(web3, token0, account)\n        if(BigNumber(allowance0).lt(amount0)) {\n          this.emitter.emit(ACTIONS.TX_STATUS, {\n            uuid: allowance0TXID,\n            description: `Allow the router to spend your ${token0.symbol}`\n          })\n        } else {\n          this.emitter.emit(ACTIONS.TX_STATUS, {\n            uuid: allowance0TXID,\n            description: `Allowance on ${token0.symbol} sufficient`,\n            status: 'DONE'\n          })\n        }\n      } else {\n        allowance0 = MAX_UINT256\n        this.emitter.emit(ACTIONS.TX_STATUS, {\n          uuid: allowance0TXID,\n          description: `Allowance on ${token0.symbol} sufficient`,\n          status: 'DONE'\n        })\n      }\n\n      if(token1.address !== 'FTM') {\n        allowance1 = await this._getDepositAllowance(web3, token1, account)\n        if(BigNumber(allowance1).lt(amount1)) {\n          this.emitter.emit(ACTIONS.TX_STATUS, {\n            uuid: allowance1TXID,\n            description: `Allow the router to spend your ${token1.symbol}`\n          })\n        } else {\n          this.emitter.emit(ACTIONS.TX_STATUS, {\n            uuid: allowance1TXID,\n            description: `Allowance on ${token1.symbol} sufficient`,\n            status: 'DONE'\n          })\n        }\n      } else {\n        allowance1 = MAX_UINT256\n        this.emitter.emit(ACTIONS.TX_STATUS, {\n          uuid: allowance1TXID,\n          description: `Allowance on ${token1.symbol} sufficient`,\n          status: 'DONE'\n        })\n      }\n\n      const gasPrice = await stores.accountStore.getGasPrice()\n\n      const allowanceCallsPromises = []\n\n\n      // SUBMIT REQUIRED ALLOWANCE TRANSACTIONS\n      if(BigNumber(allowance0).lt(amount0)) {\n        const tokenContract = new web3.eth.Contract(CONTRACTS.ERC20_ABI, token0.address)\n\n        const tokenPromise = new Promise((resolve, reject) => {\n          context._callContractWait(web3, tokenContract, 'approve', [CONTRACTS.ROUTER_ADDRESS, MAX_UINT256], account, gasPrice, null, null, allowance0TXID, (err) => {\n            if (err) {\n              console.log(err)\n              reject(err)\n              return\n            }\n\n            resolve()\n          })\n        })\n\n        allowanceCallsPromises.push(tokenPromise)\n      }\n\n\n      if(BigNumber(allowance1).lt(amount1)) {\n        const tokenContract = new web3.eth.Contract(CONTRACTS.ERC20_ABI, token1.address)\n\n        const tokenPromise = new Promise((resolve, reject) => {\n          context._callContractWait(web3, tokenContract, 'approve', [CONTRACTS.ROUTER_ADDRESS, MAX_UINT256], account, gasPrice, null, null, allowance1TXID, (err) => {\n            if (err) {\n              console.log(err)\n              reject(err)\n              return\n            }\n\n            resolve()\n          })\n        })\n\n        allowanceCallsPromises.push(tokenPromise)\n      }\n\n      const done = await Promise.all(allowanceCallsPromises)\n\n      // SUBMIT DEPOSIT TRANSACTION\n      const sendSlippage = BigNumber(100).minus(slippage).div(100)\n      const sendAmount0 = BigNumber(amount0).times(10**token0.decimals).toFixed(0)\n      const sendAmount1 = BigNumber(amount1).times(10**token1.decimals).toFixed(0)\n      const deadline = ''+moment().add(600, 'seconds').unix()\n      const sendAmount0Min = BigNumber(amount0).times(sendSlippage).times(10**token0.decimals).toFixed(0)\n      const sendAmount1Min = BigNumber(amount1).times(sendSlippage).times(10**token1.decimals).toFixed(0)\n\n      const routerContract = new web3.eth.Contract(CONTRACTS.ROUTER_ABI, CONTRACTS.ROUTER_ADDRESS)\n\n      let func = 'addLiquidity'\n      let params = [token0.address, token1.address, pair.isStable, sendAmount0, sendAmount1, sendAmount0Min, sendAmount1Min, account.address, deadline]\n      let sendValue = null\n\n      if(token0.address === 'FTM') {\n        func = 'addLiquidityFTM'\n        params = [token1.address, pair.isStable, sendAmount1, sendAmount1Min, sendAmount0Min, account.address, deadline]\n        sendValue = sendAmount0\n      }\n      if(token1.address === 'FTM') {\n        func = 'addLiquidityFTM'\n        params = [token0.address, pair.isStable, sendAmount0, sendAmount0Min, sendAmount1Min, account.address, deadline]\n        sendValue = sendAmount1\n      }\n\n      this._callContractWait(web3, routerContract, func, params, account, gasPrice, null, null, depositTXID, (err) => {\n        if (err) {\n          return this.emitter.emit(ACTIONS.ERROR, err)\n        }\n\n        this._getPairInfo(web3, account)\n\n        this.emitter.emit(ACTIONS.LIQUIDITY_ADDED)\n      }, null, sendValue)\n\n    } catch(ex) {\n      console.error(ex)\n      this.emitter.emit(ACTIONS.ERROR, ex)\n    }\n  }\n\n  stakeLiquidity = async (payload) => {\n    try {\n      const context = this\n\n      const account = stores.accountStore.getStore(\"account\")\n      if (!account) {\n        console.warn('account not found')\n        return null\n      }\n\n      const web3 = await stores.accountStore.getWeb3Provider()\n      if (!web3) {\n        console.warn('web3 not found')\n        return null\n      }\n\n      const { pair, token } = payload.content\n\n      let stakeAllowanceTXID = this.getTXUUID()\n      let stakeTXID = this.getTXUUID()\n\n\n      this.emitter.emit(ACTIONS.TX_ADDED, { title: `Stake ${pair.symbol} in the gauge`, type: 'Liquidity', verb: 'Liquidity Staked', transactions: [\n        {\n          uuid: stakeAllowanceTXID,\n          description: `Checking your ${pair.symbol} allowance`,\n          status: 'WAITING'\n        },\n        {\n          uuid: stakeTXID,\n          description: `Stake LP tokens in the gauge`,\n          status: 'WAITING'\n        }\n      ]})\n\n      const stakeAllowance = await this._getStakeAllowance(web3, pair, account)\n\n      const pairContract = new web3.eth.Contract(CONTRACTS.PAIR_ABI, pair.address)\n      const balanceOf = await pairContract.methods.balanceOf(account.address).call()\n\n      if(BigNumber(stakeAllowance).lt( BigNumber(balanceOf).div(10**pair.decimals).toFixed(pair.decimals) )) {\n        this.emitter.emit(ACTIONS.TX_STATUS, {\n          uuid: stakeAllowanceTXID,\n          description: `Allow the router to spend your ${pair.symbol}`\n        })\n      } else {\n        this.emitter.emit(ACTIONS.TX_STATUS, {\n          uuid: stakeAllowanceTXID,\n          description: `Allowance on ${pair.symbol} sufficient`,\n          status: 'DONE'\n        })\n      }\n\n\n      const gasPrice = await stores.accountStore.getGasPrice()\n\n      const allowanceCallsPromises = []\n\n      if(BigNumber(stakeAllowance).lt( BigNumber(balanceOf).div(10**pair.decimals).toFixed(pair.decimals)  )) {\n        const stakePromise = new Promise((resolve, reject) => {\n          context._callContractWait(web3, pairContract, 'approve', [pair.gauge.address, MAX_UINT256], account, gasPrice, null, null, stakeAllowanceTXID, (err) => {\n            if (err) {\n              reject(err)\n              return\n            }\n\n            resolve()\n          })\n        })\n\n        allowanceCallsPromises.push(stakePromise)\n      }\n\n      const done = await Promise.all(allowanceCallsPromises)\n\n\n      const gaugeContract = new web3.eth.Contract(CONTRACTS.GAUGE_ABI, pair.gauge.address)\n\n      let sendTok = '0'\n      if(token && token.id) {\n        sendTok = token.id\n      }\n\n      this._callContractWait(web3, gaugeContract, 'deposit', [balanceOf, sendTok], account, gasPrice, null, null, stakeTXID, (err) => {\n        if (err) {\n          return this.emitter.emit(ACTIONS.ERROR, err)\n        }\n\n        this._getPairInfo(web3, account)\n\n        this.emitter.emit(ACTIONS.LIQUIDITY_STAKED)\n      })\n\n    } catch(ex) {\n      console.error(ex)\n      this.emitter.emit(ACTIONS.ERROR, ex)\n    }\n  }\n\n  addLiquidityAndStake = async (payload) => {\n    try {\n      const context = this\n\n      const account = stores.accountStore.getStore(\"account\")\n      if (!account) {\n        console.warn('account not found')\n        return null\n      }\n\n      const web3 = await stores.accountStore.getWeb3Provider()\n      if (!web3) {\n        console.warn('web3 not found')\n        return null\n      }\n\n      const { token0, token1, amount0, amount1, minLiquidity, pair, token, slippage } = payload.content\n\n      // ADD TRNASCTIONS TO TRANSACTION QUEUE DISPLAY\n      let allowance0TXID = this.getTXUUID()\n      let allowance1TXID = this.getTXUUID()\n      let stakeAllowanceTXID = this.getTXUUID()\n      let depositTXID = this.getTXUUID()\n      let stakeTXID = this.getTXUUID()\n\n\n      this.emitter.emit(ACTIONS.TX_ADDED, { title: `Add liquidity to ${pair.symbol}`, type: 'Liquidity', verb: 'Liquidity Added', transactions: [\n        {\n          uuid: allowance0TXID,\n          description: `Checking your ${token0.symbol} allowance`,\n          status: 'WAITING'\n        },\n        {\n          uuid: allowance1TXID,\n          description: `Checking your ${token1.symbol} allowance`,\n          status: 'WAITING'\n        },\n        {\n          uuid: stakeAllowanceTXID,\n          description: `Checking your ${pair.symbol} allowance`,\n          status: 'WAITING'\n        },\n        {\n          uuid: depositTXID,\n          description: `Deposit tokens in the pool`,\n          status: 'WAITING'\n        },\n        {\n          uuid: stakeTXID,\n          description: `Stake LP tokens in the gauge`,\n          status: 'WAITING'\n        }\n      ]})\n\n      let allowance0 = 0\n      let allowance1 = 0\n\n      // CHECK ALLOWANCES AND SET TX DISPLAY\n      if(token0.address !== 'FTM') {\n        allowance0 = await this._getDepositAllowance(web3, token0, account)\n        if(BigNumber(allowance0).lt(amount0)) {\n          this.emitter.emit(ACTIONS.TX_STATUS, {\n            uuid: allowance0TXID,\n            description: `Allow the router to spend your ${token0.symbol}`\n          })\n        } else {\n          this.emitter.emit(ACTIONS.TX_STATUS, {\n            uuid: allowance0TXID,\n            description: `Allowance on ${token0.symbol} sufficient`,\n            status: 'DONE'\n          })\n        }\n      } else {\n        allowance0 = MAX_UINT256\n        this.emitter.emit(ACTIONS.TX_STATUS, {\n          uuid: allowance0TXID,\n          description: `Allowance on ${token0.symbol} sufficient`,\n          status: 'DONE'\n        })\n      }\n\n      if(token1.address !== 'FTM') {\n        allowance1 = await this._getDepositAllowance(web3, token1, account)\n        if(BigNumber(allowance1).lt(amount1)) {\n          this.emitter.emit(ACTIONS.TX_STATUS, {\n            uuid: allowance1TXID,\n            description: `Allow the router to spend your ${token1.symbol}`\n          })\n        } else {\n          this.emitter.emit(ACTIONS.TX_STATUS, {\n            uuid: allowance1TXID,\n            description: `Allowance on ${token1.symbol} sufficient`,\n            status: 'DONE'\n          })\n        }\n      } else {\n        allowance1 = MAX_UINT256\n        this.emitter.emit(ACTIONS.TX_STATUS, {\n          uuid: allowance1TXID,\n          description: `Allowance on ${token1.symbol} sufficient`,\n          status: 'DONE'\n        })\n      }\n\n\n      const stakeAllowance = await this._getStakeAllowance(web3, pair, account)\n\n      if(BigNumber(stakeAllowance).lt(minLiquidity)) {\n        this.emitter.emit(ACTIONS.TX_STATUS, {\n          uuid: stakeAllowanceTXID,\n          description: `Allow the router to spend your ${pair.symbol}`\n        })\n      } else {\n        this.emitter.emit(ACTIONS.TX_STATUS, {\n          uuid: stakeAllowanceTXID,\n          description: `Allowance on ${pair.symbol} sufficient`,\n          status: 'DONE'\n        })\n      }\n\n      const gasPrice = await stores.accountStore.getGasPrice()\n\n      const allowanceCallsPromises = []\n\n\n      // SUBMIT REQUIRED ALLOWANCE TRANSACTIONS\n      if(BigNumber(allowance0).lt(amount0)) {\n        const tokenContract = new web3.eth.Contract(CONTRACTS.ERC20_ABI, token0.address)\n\n        const tokenPromise = new Promise((resolve, reject) => {\n          context._callContractWait(web3, tokenContract, 'approve', [CONTRACTS.ROUTER_ADDRESS, MAX_UINT256], account, gasPrice, null, null, allowance0TXID, (err) => {\n            if (err) {\n              reject(err)\n              return\n            }\n\n            resolve()\n          })\n        })\n\n        allowanceCallsPromises.push(tokenPromise)\n      }\n\n\n      if(BigNumber(allowance1).lt(amount1)) {\n        const tokenContract = new web3.eth.Contract(CONTRACTS.ERC20_ABI, token1.address)\n\n        const tokenPromise = new Promise((resolve, reject) => {\n          context._callContractWait(web3, tokenContract, 'approve', [CONTRACTS.ROUTER_ADDRESS, MAX_UINT256], account, gasPrice, null, null, allowance1TXID, (err) => {\n            if (err) {\n              reject(err)\n              return\n            }\n\n            resolve()\n          })\n        })\n\n        allowanceCallsPromises.push(tokenPromise)\n      }\n\n\n      if(BigNumber(stakeAllowance).lt(minLiquidity)) {\n        const pairContract = new web3.eth.Contract(CONTRACTS.ERC20_ABI, pair.address)\n\n        const stakePromise = new Promise((resolve, reject) => {\n          context._callContractWait(web3, pairContract, 'approve', [pair.gauge.address, MAX_UINT256], account, gasPrice, null, null, stakeAllowanceTXID, (err) => {\n            if (err) {\n              reject(err)\n              return\n            }\n\n            resolve()\n          })\n        })\n\n        allowanceCallsPromises.push(stakePromise)\n      }\n\n      const done = await Promise.all(allowanceCallsPromises)\n\n\n      // SUBMIT DEPOSIT TRANSACTION\n      const sendSlippage = BigNumber(100).minus(slippage).div(100)\n      const sendAmount0 = BigNumber(amount0).times(10**token0.decimals).toFixed(0)\n      const sendAmount1 = BigNumber(amount1).times(10**token1.decimals).toFixed(0)\n      const deadline = ''+moment().add(600, 'seconds').unix()\n      const sendAmount0Min = BigNumber(amount0).times(sendSlippage).times(10**token0.decimals).toFixed(0)\n      const sendAmount1Min = BigNumber(amount1).times(sendSlippage).times(10**token1.decimals).toFixed(0)\n\n      const routerContract = new web3.eth.Contract(CONTRACTS.ROUTER_ABI, CONTRACTS.ROUTER_ADDRESS)\n      const gaugeContract = new web3.eth.Contract(CONTRACTS.GAUGE_ABI, pair.gauge.address)\n      const pairContract = new web3.eth.Contract(CONTRACTS.PAIR_ABI, pair.address)\n\n      let func = 'addLiquidity'\n      let params = [token0.address, token1.address, pair.isStable, sendAmount0, sendAmount1, sendAmount0Min, sendAmount1Min, account.address, deadline]\n      let sendValue = null\n\n      if(token0.address === 'FTM') {\n        func = 'addLiquidityFTM'\n        params = [token1.address, pair.isStable, sendAmount1, sendAmount1Min, sendAmount0Min, account.address, deadline]\n        sendValue = sendAmount0\n      }\n      if(token1.address === 'FTM') {\n        func = 'addLiquidityFTM'\n        params = [token0.address, pair.isStable, sendAmount0, sendAmount0Min, sendAmount1Min, account.address, deadline]\n        sendValue = sendAmount1\n      }\n\n      this._callContractWait(web3, routerContract, func, params, account, gasPrice, null, null, depositTXID, async (err) => {\n        if (err) {\n          return this.emitter.emit(ACTIONS.ERROR, err)\n        }\n\n        const balanceOf = await pairContract.methods.balanceOf(account.address).call()\n\n        let sendTok = '0'\n        if(token && token.id) {\n          sendTok = token.id\n        }\n\n        this._callContractWait(web3, gaugeContract, 'deposit', [balanceOf, sendTok], account, gasPrice, null, null, stakeTXID, (err) => {\n          if (err) {\n            return this.emitter.emit(ACTIONS.ERROR, err)\n          }\n\n          this._getPairInfo(web3, account)\n\n          this.emitter.emit(ACTIONS.ADD_LIQUIDITY_AND_STAKED)\n        })\n      }, null, sendValue)\n\n    } catch(ex) {\n      console.error(ex)\n      this.emitter.emit(ACTIONS.ERROR, ex)\n    }\n  }\n\n  _getDepositAllowance = async (web3, token, account) => {\n    try {\n      const tokenContract = new web3.eth.Contract(CONTRACTS.ERC20_ABI, token.address)\n      const allowance = await tokenContract.methods.allowance(account.address, CONTRACTS.ROUTER_ADDRESS).call()\n      return BigNumber(allowance).div(10**token.decimals).toFixed(token.decimals)\n    } catch (ex) {\n      console.error(ex)\n      return null\n    }\n  }\n\n  _getStakeAllowance = async (web3, pair, account) => {\n    try {\n      const tokenContract = new web3.eth.Contract(CONTRACTS.ERC20_ABI, pair.address)\n      const allowance = await tokenContract.methods.allowance(account.address, pair.gauge.address).call()\n      return BigNumber(allowance).div(10**pair.decimals).toFixed(pair.decimals)\n    } catch (ex) {\n      console.error(ex)\n      return null\n    }\n  }\n\n  _getWithdrawAllowance = async (web3, pair, account) => {\n    try {\n      const tokenContract = new web3.eth.Contract(CONTRACTS.ERC20_ABI, pair.address)\n      const allowance = await tokenContract.methods.allowance(account.address, CONTRACTS.ROUTER_ADDRESS).call()\n      return BigNumber(allowance).div(10**pair.decimals).toFixed(pair.decimals)\n    } catch (ex) {\n      console.error(ex)\n      return null\n    }\n  }\n\n  quoteAddLiquidity = async (payload) => {\n    try {\n      const account = stores.accountStore.getStore(\"account\")\n      if (!account) {\n        console.warn('account not found')\n        return null\n      }\n\n      const web3 = await stores.accountStore.getWeb3Provider()\n      if (!web3) {\n        console.warn('web3 not found')\n        return null\n      }\n\n      const { pair, token0, token1, amount0, amount1 } = payload.content\n\n      if(!pair || !token0 || !token1 || amount0 == '' || amount1 == '') {\n        return null\n      }\n\n      const gasPrice = await stores.accountStore.getGasPrice()\n      const routerContract = new web3.eth.Contract(CONTRACTS.ROUTER_ABI, CONTRACTS.ROUTER_ADDRESS)\n\n      const sendAmount0 = BigNumber(amount0).times(10**token0.decimals).toFixed(0)\n      const sendAmount1 = BigNumber(amount1).times(10**token1.decimals).toFixed(0)\n\n      let addy0 = token0.address\n      let addy1 = token1.address\n\n      if(token0.address === 'FTM') {\n        addy0 = CONTRACTS.WFTM_ADDRESS\n      }\n      if(token1.address === 'FTM') {\n        addy1 = CONTRACTS.WFTM_ADDRESS\n      }\n\n      const res = await routerContract.methods.quoteAddLiquidity(addy0, addy1, pair.isStable, sendAmount0, sendAmount1).call()\n\n      const returnVal = {\n        inputs: {\n          token0,\n          token1,\n          amount0,\n          amount1,\n        },\n        output: BigNumber(res.liquidity).div(10**(pair.decimals)).toFixed(pair.decimals)\n      }\n      this.emitter.emit(ACTIONS.QUOTE_ADD_LIQUIDITY_RETURNED, returnVal)\n\n    } catch(ex) {\n      console.error(ex)\n      this.emitter.emit(ACTIONS.ERROR, ex)\n    }\n  }\n\n  getLiquidityBalances = async (payload) => {\n    try {\n      const account = stores.accountStore.getStore(\"account\")\n      if (!account) {\n        console.warn('account not found')\n        return null\n      }\n\n      const web3 = await stores.accountStore.getWeb3Provider()\n      if (!web3) {\n        console.warn('web3 not found')\n        return null\n      }\n\n      const { pair } = payload.content\n\n      if(!pair) {\n        return\n      }\n\n      const token0Contract = new web3.eth.Contract(CONTRACTS.ERC20_ABI, pair.token0.address)\n      const token1Contract = new web3.eth.Contract(CONTRACTS.ERC20_ABI, pair.token1.address)\n      const pairContract = new web3.eth.Contract(CONTRACTS.ERC20_ABI, pair.address)\n\n      const balanceCalls = [\n        token0Contract.methods.balanceOf(account.address).call(),\n        token1Contract.methods.balanceOf(account.address).call(),\n        pairContract.methods.balanceOf(account.address).call()\n      ]\n\n      if(pair.gauge) {\n        const gaugeContract = new web3.eth.Contract(CONTRACTS.ERC20_ABI, pair.gauge.address)\n        balanceCalls.push(gaugeContract.methods.balanceOf(account.address).call())\n        // balanceCalls.push(gaugeContract.methods.earned(incentiveAddress, account.address).call())\n      }\n\n      const [ token0Balance, token1Balance, poolBalance, gaugeBalance/*, earned*/ ] = await Promise.all(balanceCalls)\n\n      const returnVal = {\n        token0: BigNumber(token0Balance).div(10**pair.token0.decimals).toFixed(pair.token0.decimals),\n        token1: BigNumber(token1Balance).div(10**pair.token1.decimals).toFixed(pair.token1.decimals),\n        pool: BigNumber(poolBalance).div(10**18).toFixed(18),\n      }\n\n      if(pair.gauge) {\n        returnVal.gauge = gaugeBalance ? BigNumber(gaugeBalance).div(10**18).toFixed(18) : null\n        // returnVal.earned = BigNumber(earned).div(10**incentiveAsset.decimals).toFixed(incentiveAsset.decimals),\n      }\n\n      this.emitter.emit(ACTIONS.GET_LIQUIDITY_BALANCES_RETURNED, returnVal)\n    } catch(ex) {\n      console.error(ex)\n      this.emitter.emit(ACTIONS.ERROR, ex)\n    }\n  }\n\n  removeLiquidity = async (payload) => {\n    try {\n      const context = this\n\n      const account = stores.accountStore.getStore(\"account\")\n      if (!account) {\n        console.warn('account not found')\n        return null\n      }\n\n      const web3 = await stores.accountStore.getWeb3Provider()\n      if (!web3) {\n        console.warn('web3 not found')\n        return null\n      }\n\n      const { token0, token1, pair, slippage } = payload.content\n\n      // ADD TRNASCTIONS TO TRANSACTION QUEUE DISPLAY\n      let allowanceTXID = this.getTXUUID()\n      let withdrawTXID = this.getTXUUID()\n\n      this.emitter.emit(ACTIONS.TX_ADDED, { title: `Remove liquidity from ${pair.symbol}`, type: 'Liquidity', verb: 'Liquidity Removed', transactions: [\n        {\n          uuid: allowanceTXID,\n          description: `Checking your ${pair.symbol} allowance`,\n          status: 'WAITING'\n        },\n        {\n          uuid: withdrawTXID,\n          description: `Withdraw tokens from the pool`,\n          status: 'WAITING'\n        },\n      ]})\n\n      // CHECK ALLOWANCES AND SET TX DISPLAY\n      const allowance = await this._getWithdrawAllowance(web3, pair, account)\n\n      if(BigNumber(allowance).lt(pair.balance)) {\n        this.emitter.emit(ACTIONS.TX_STATUS, {\n          uuid: allowanceTXID,\n          description: `Allow the router to spend your ${pair.symbol}`\n        })\n      } else {\n        this.emitter.emit(ACTIONS.TX_STATUS, {\n          uuid: allowanceTXID,\n          description: `Allowance on ${pair.symbol} sufficient`,\n          status: 'DONE'\n        })\n      }\n\n      const gasPrice = await stores.accountStore.getGasPrice()\n\n      const allowanceCallsPromises = []\n\n\n      // SUBMIT REQUIRED ALLOWANCE TRANSACTIONS\n      if(BigNumber(allowance).lt(pair.balance)) {\n        const tokenContract = new web3.eth.Contract(CONTRACTS.ERC20_ABI, pair.address)\n\n        const tokenPromise = new Promise((resolve, reject) => {\n          context._callContractWait(web3, tokenContract, 'approve', [CONTRACTS.ROUTER_ADDRESS, MAX_UINT256], account, gasPrice, null, null, allowanceTXID, (err) => {\n            if (err) {\n              console.log(err)\n              reject(err)\n              return\n            }\n\n            resolve()\n          })\n        })\n\n        allowanceCallsPromises.push(tokenPromise)\n      }\n\n\n      const done = await Promise.all(allowanceCallsPromises)\n\n      // SUBMIT WITHDRAW TRANSACTION\n      const sendAmount = BigNumber(pair.balance).times(10**pair.decimals).toFixed(0)\n\n      const routerContract = new web3.eth.Contract(CONTRACTS.ROUTER_ABI, CONTRACTS.ROUTER_ADDRESS)\n\n      const quoteRemove = await routerContract.methods.quoteRemoveLiquidity(token0.address, token1.address, pair.isStable, sendAmount).call()\n\n      const sendSlippage = BigNumber(100).minus(slippage).div(100)\n      const deadline = ''+moment().add(600, 'seconds').unix()\n      const sendAmount0Min = BigNumber(quoteRemove.amountA).times(sendSlippage).toFixed(0)\n      const sendAmount1Min = BigNumber(quoteRemove.amountB).times(sendSlippage).toFixed(0)\n\n\n      this._callContractWait(web3, routerContract, 'removeLiquidity', [token0.address, token1.address, pair.isStable, sendAmount, sendAmount0Min, sendAmount1Min, account.address, deadline], account, gasPrice, null, null, withdrawTXID, (err) => {\n        if (err) {\n          return this.emitter.emit(ACTIONS.ERROR, err)\n        }\n\n        this._getPairInfo(web3, account)\n\n        this.emitter.emit(ACTIONS.LIQUIDITY_REMOVED)\n      })\n\n    } catch(ex) {\n      console.error(ex)\n      this.emitter.emit(ACTIONS.ERROR, ex)\n    }\n  }\n\n  unstakeAndRemoveLiquidity = async (payload) => {\n    try {\n      const context = this\n\n      const account = stores.accountStore.getStore(\"account\")\n      if (!account) {\n        console.warn('account not found')\n        return null\n      }\n\n      const web3 = await stores.accountStore.getWeb3Provider()\n      if (!web3) {\n        console.warn('web3 not found')\n        return null\n      }\n\n      const { token0, token1, amount, amount0, amount1, pair, slippage } = payload.content\n\n      // ADD TRNASCTIONS TO TRANSACTION QUEUE DISPLAY\n      let allowanceTXID = this.getTXUUID()\n      let withdrawTXID = this.getTXUUID()\n      let unstakeTXID = this.getTXUUID()\n\n\n      this.emitter.emit(ACTIONS.TX_ADDED, { title: `Remove liquidity from ${pair.symbol}`, type: 'Liquidity', verb: 'Liquidity Removed', transactions: [\n        {\n          uuid: allowanceTXID,\n          description: `Checking your ${pair.symbol} allowance`,\n          status: 'WAITING'\n        },\n        {\n          uuid: unstakeTXID,\n          description: `Unstake LP tokens from the gauge`,\n          status: 'WAITING'\n        },\n        {\n          uuid: withdrawTXID,\n          description: `Withdraw tokens from the pool`,\n          status: 'WAITING'\n        }\n      ]})\n\n\n      // CHECK ALLOWANCES AND SET TX DISPLAY\n      const allowance = await this._getWithdrawAllowance(web3, pair, account)\n\n      if(BigNumber(allowance).lt(amount)) {\n        this.emitter.emit(ACTIONS.TX_STATUS, {\n          uuid: allowanceTXID,\n          description: `Allow the router to spend your ${pair.symbol}`\n        })\n      } else {\n        this.emitter.emit(ACTIONS.TX_STATUS, {\n          uuid: allowanceTXID,\n          description: `Allowance on ${pair.symbol} sufficient`,\n          status: 'DONE'\n        })\n      }\n\n      const gasPrice = await stores.accountStore.getGasPrice()\n\n      const allowanceCallsPromises = []\n\n\n      // SUBMIT REQUIRED ALLOWANCE TRANSACTIONS\n      if(BigNumber(allowance).lt(amount)) {\n        const tokenContract = new web3.eth.Contract(CONTRACTS.ERC20_ABI, pair.address)\n\n        const tokenPromise = new Promise((resolve, reject) => {\n          context._callContractWait(web3, tokenContract, 'approve', [CONTRACTS.ROUTER_ADDRESS, MAX_UINT256], account, gasPrice, null, null, allowanceTXID, (err) => {\n            if (err) {\n              reject(err)\n              return\n            }\n\n            resolve()\n          })\n        })\n\n        allowanceCallsPromises.push(tokenPromise)\n      }\n\n      const done = await Promise.all(allowanceCallsPromises)\n\n\n      // SUBMIT DEPOSIT TRANSACTION\n      const sendSlippage = BigNumber(100).minus(slippage).div(100)\n      const sendAmount = BigNumber(amount).times(10**pair.decimals).toFixed(0)\n      const deadline = ''+moment().add(600, 'seconds').unix()\n      const sendAmount0Min = BigNumber(amount0).times(sendSlippage).times(10**token0.decimals).toFixed(0)\n      const sendAmount1Min = BigNumber(amount1).times(sendSlippage).times(10**token1.decimals).toFixed(0)\n\n      const routerContract = new web3.eth.Contract(CONTRACTS.ROUTER_ABI, CONTRACTS.ROUTER_ADDRESS)\n      const gaugeContract = new web3.eth.Contract(CONTRACTS.GAUGE_ABI, pair.gauge.address)\n      const pairContract = new web3.eth.Contract(CONTRACTS.PAIR_ABI, pair.address)\n\n      this._callContractWait(web3, gaugeContract, 'withdraw', [sendAmount], account, gasPrice, null, null, unstakeTXID, async (err) => {\n        if (err) {\n          return this.emitter.emit(ACTIONS.ERROR, err)\n        }\n\n        const balanceOf = await pairContract.methods.balanceOf(account.address).call()\n\n        this._callContractWait(web3, routerContract, 'removeLiquidity', [token0.address, token1.address, pair.isStable, balanceOf, sendAmount0Min, sendAmount1Min, account.address, deadline], account, gasPrice, null, null, withdrawTXID, (err) => {\n          if (err) {\n            return this.emitter.emit(ACTIONS.ERROR, err)\n          }\n\n          this._getPairInfo(web3, account)\n\n          this.emitter.emit(ACTIONS.REMOVE_LIQUIDITY_AND_UNSTAKED)\n        })\n      })\n    } catch(ex) {\n      console.error(ex)\n      this.emitter.emit(ACTIONS.ERROR, ex)\n    }\n  }\n\n  unstakeLiquidity = async (payload) => {\n    try {\n      const context = this\n\n      const account = stores.accountStore.getStore(\"account\")\n      if (!account) {\n        console.warn('account not found')\n        return null\n      }\n\n      const web3 = await stores.accountStore.getWeb3Provider()\n      if (!web3) {\n        console.warn('web3 not found')\n        return null\n      }\n\n      const { token0, token1, amount, amount0, amount1, pair } = payload.content\n\n      // ADD TRNASCTIONS TO TRANSACTION QUEUE DISPLAY\n      let unstakeTXID = this.getTXUUID()\n\n\n      this.emitter.emit(ACTIONS.TX_ADDED, { title: `Unstake liquidity from gauge`, type: 'Liquidity', verb: 'Liquidity Unstaked', transactions: [\n        {\n          uuid: unstakeTXID,\n          description: `Unstake LP tokens from the gauge`,\n          status: 'WAITING'\n        }\n      ]})\n\n      const gasPrice = await stores.accountStore.getGasPrice()\n\n\n      // SUBMIT DEPOSIT TRANSACTION\n      const sendAmount = BigNumber(amount).times(10**pair.decimals).toFixed(0)\n\n      const gaugeContract = new web3.eth.Contract(CONTRACTS.GAUGE_ABI, pair.gauge.address)\n\n      this._callContractWait(web3, gaugeContract, 'withdraw', [sendAmount], account, gasPrice, null, null, unstakeTXID, async (err) => {\n        if (err) {\n          return this.emitter.emit(ACTIONS.ERROR, err)\n        }\n\n        this._getPairInfo(web3, account)\n\n        this.emitter.emit(ACTIONS.LIQUIDITY_UNSTAKED)\n      })\n    } catch(ex) {\n      console.error(ex)\n      this.emitter.emit(ACTIONS.ERROR, ex)\n    }\n  }\n\n  quoteRemoveLiquidity = async (payload) => {\n    try {\n      const account = stores.accountStore.getStore(\"account\")\n      if (!account) {\n        console.warn('account not found')\n        return null\n      }\n\n      const web3 = await stores.accountStore.getWeb3Provider()\n      if (!web3) {\n        console.warn('web3 not found')\n        return null\n      }\n\n      const { pair, token0, token1, withdrawAmount } = payload.content\n\n      if(!pair || !token0 || !token1 || withdrawAmount == '') {\n        return null\n      }\n\n      const gasPrice = await stores.accountStore.getGasPrice()\n      const routerContract = new web3.eth.Contract(CONTRACTS.ROUTER_ABI, CONTRACTS.ROUTER_ADDRESS)\n\n      const sendWithdrawAmount = BigNumber(withdrawAmount).times(10**pair.decimals).toFixed(0)\n\n      const res = await routerContract.methods.quoteRemoveLiquidity(token0.address, token1.address, pair.isStable, sendWithdrawAmount).call()\n\n      const returnVal = {\n        inputs: {\n          token0,\n          token1,\n          withdrawAmount\n        },\n        output: {\n          amount0: BigNumber(res.amountA).div(10**(token0.decimals)).toFixed(token0.decimals),\n          amount1: BigNumber(res.amountB).div(10**(token1.decimals)).toFixed(token1.decimals)\n        }\n      }\n      this.emitter.emit(ACTIONS.QUOTE_REMOVE_LIQUIDITY_RETURNED, returnVal)\n\n    } catch(ex) {\n      console.error(ex)\n      this.emitter.emit(ACTIONS.ERROR, ex)\n    }\n  }\n\n  createGauge = async (payload) => {\n    try {\n      const context = this\n\n      const account = stores.accountStore.getStore(\"account\")\n      if (!account) {\n        console.warn('account not found')\n        return null\n      }\n\n      const web3 = await stores.accountStore.getWeb3Provider()\n      if (!web3) {\n        console.warn('web3 not found')\n        return null\n      }\n\n      const { pair } = payload.content\n\n      // ADD TRNASCTIONS TO TRANSACTION QUEUE DISPLAY\n      let createGaugeTXID = this.getTXUUID()\n\n      this.emitter.emit(ACTIONS.TX_ADDED, { title: `Create liquidity gauge for ${pair.token0.symbol}/${pair.token1.symbol}`, type: 'Liquidity', verb: 'Gauge Created', transactions: [\n        {\n          uuid: createGaugeTXID,\n          description: `Create gauge`,\n          status: 'WAITING'\n        }\n      ]})\n\n      const gasPrice = await stores.accountStore.getGasPrice()\n\n      const gaugesContract = new web3.eth.Contract(CONTRACTS.VOTER_ABI, CONTRACTS.VOTER_ADDRESS)\n      this._callContractWait(web3, gaugesContract, 'createGauge', [pair.address], account, gasPrice, null, null, createGaugeTXID, async (err) => {\n        if (err) {\n          return this.emitter.emit(ACTIONS.ERROR, err)\n        }\n\n        await this.updatePairsCall(web3, account)\n\n        this.emitter.emit(ACTIONS.CREATE_GAUGE_RETURNED)\n      })\n\n    } catch(ex) {\n      console.error(ex)\n      this.emitter.emit(ACTIONS.ERROR, ex)\n    }\n  }\n\n  quoteSwap = async (payload) => {\n    const txUUID = this.getTXUUID()\n    console.log(`Entered Quote: ${txUUID}`)\n    try {\n      const web3 = await stores.accountStore.getWeb3Provider()\n      if (!web3) {\n        console.warn('web3 not found')\n        return null\n      }\n\n      // some path logic. Have a base asset (FTM) swap from start asset to FTM, swap from FTM back to out asset. Don't know.\n      const routeAssets = this.getStore('routeAssets')\n      const { fromAsset, toAsset, fromAmount } = payload.content\n\n      const routerContract = new web3.eth.Contract(CONTRACTS.ROUTER_ABI, CONTRACTS.ROUTER_ADDRESS)\n      const sendFromAmount = BigNumber(fromAmount).times(10**fromAsset.decimals).toFixed()\n\n      if (!fromAsset || !toAsset || !fromAmount || !fromAsset.address || !toAsset.address || fromAmount === '') {\n        return null\n      }\n\n      let addy0 = fromAsset.address\n      let addy1 = toAsset.address\n\n      if(fromAsset.address === 'FTM') {\n        addy0 = CONTRACTS.WFTM_ADDRESS\n      }\n      if(toAsset.address === 'FTM') {\n        addy1 = CONTRACTS.WFTM_ADDRESS\n      }\n\n      const includesRouteAddress = routeAssets.filter((asset) => {\n        return (asset.address.toLowerCase() == addy0.toLowerCase() || asset.address.toLowerCase() == addy1.toLowerCase())\n      })\n\n      let amountOuts = []\n\n      if(includesRouteAddress.length === 0) {\n        amountOuts = routeAssets.map((routeAsset) => {\n          return [\n            {\n              routes: [{\n                from: addy0,\n                to: routeAsset.address,\n                stable: true\n              },{\n                from: routeAsset.address,\n                to: addy1,\n                stable: true\n              }],\n              routeAsset: routeAsset\n            },\n            {\n              routes: [{\n                from: addy0,\n                to: routeAsset.address,\n                stable: false\n              },{\n                from: routeAsset.address,\n                to: addy1,\n                stable: false\n              }],\n              routeAsset: routeAsset\n            },\n            {\n              routes: [{\n                from: addy0,\n                to: routeAsset.address,\n                stable: true\n              },{\n                from: routeAsset.address,\n                to: addy1,\n                stable: false\n              }],\n              routeAsset: routeAsset\n            },\n            {\n              routes: [{\n                from: addy0,\n                to: routeAsset.address,\n                stable: false\n              },{\n                from: routeAsset.address,\n                to: addy1,\n                stable: true\n              }],\n              routeAsset: routeAsset\n            }\n          ]\n        }).flat()\n      }\n\n      amountOuts.push({\n        routes: [{\n          from: addy0,\n          to: addy1,\n          stable: true\n        }],\n        routeAsset: null\n      })\n\n      amountOuts.push({\n        routes: [{\n          from: addy0,\n          to: addy1,\n          stable: false\n        }],\n        routeAsset: null\n      })\n\n      const multicall = await stores.accountStore.getMulticall()\n      const receiveAmounts = await multicall.aggregate(amountOuts.map((route) => {\n        return routerContract.methods.getAmountsOut(sendFromAmount, route.routes)\n      }))\n\n      for(let i = 0; i < receiveAmounts.length; i++) {\n        amountOuts[i].receiveAmounts = receiveAmounts[i]\n        amountOuts[i].finalValue = BigNumber(receiveAmounts[i][receiveAmounts[i].length-1]).div(10**toAsset.decimals).toFixed(toAsset.decimals)\n      }\n\n      const bestAmountOut = amountOuts.filter((ret) => {\n        return ret != null\n      }).reduce((best, current) => {\n        if(!best) {\n          return current\n        }\n        return (BigNumber(best.finalValue).gt(current.finalValue) ? best : current)\n      }, 0)\n\n      if(!bestAmountOut) {\n        this.emitter.emit(ACTIONS.ERROR, 'No valid route found to complete swap')\n        return null\n      }\n\n      let totalRatio = 1\n\n      for(let i = 0; i < bestAmountOut.routes.length; i++) {\n        if(bestAmountOut.routes[i].stable == true) {\n\n        } else {\n          const reserves = await routerContract.methods.getReserves(bestAmountOut.routes[i].from, bestAmountOut.routes[i].to, bestAmountOut.routes[i].stable).call()\n          let amountIn = 0\n          let amountOut = 0\n          if(i == 0) {\n            amountIn = sendFromAmount\n            amountOut = bestAmountOut.receiveAmounts[i+1]\n          } else {\n            amountIn = bestAmountOut.receiveAmounts[i]\n            amountOut = bestAmountOut.receiveAmounts[i+1]\n          }\n\n          const amIn = BigNumber(amountIn).div(reserves.reserveA)\n          const amOut = BigNumber(amountOut).div(reserves.reserveB)\n          const ratio = BigNumber(amOut).div(amIn)\n\n          totalRatio = BigNumber(totalRatio).times(ratio).toFixed(18)\n        }\n      }\n\n      const priceImpact = BigNumber(1).minus(totalRatio).times(100).toFixed(18)\n\n      const returnValue = {\n        inputs: {\n          fromAmount: fromAmount,\n          fromAsset: fromAsset,\n          toAsset: toAsset\n        },\n        output: bestAmountOut,\n        priceImpact: priceImpact\n      }\n\n      console.log(`Returned Quote: ${txUUID} : ${JSON.stringify(returnValue)}`)\n      this.emitter.emit(ACTIONS.QUOTE_SWAP_RETURNED, returnValue)\n\n    } catch(ex) {\n    console.log(`Exception Quote: ${txUUID}`)\n      console.error(ex)\n      this.emitter.emit(ACTIONS.QUOTE_SWAP_RETURNED, null)\n      this.emitter.emit(ACTIONS.ERROR, ex)\n    }\n  }\n\n  swap = async (payload) => {\n    try {\n      const context = this\n\n      const account = stores.accountStore.getStore(\"account\")\n      if (!account) {\n        console.warn('account not found')\n        return null\n      }\n\n      const web3 = await stores.accountStore.getWeb3Provider()\n      if (!web3) {\n        console.warn('web3 not found')\n        return null\n      }\n\n      const { fromAsset, toAsset, fromAmount, toAmount, quote, slippage } = payload.content\n\n      // ADD TRNASCTIONS TO TRANSACTION QUEUE DISPLAY\n      let allowanceTXID = this.getTXUUID()\n      let swapTXID = this.getTXUUID()\n\n\n      this.emitter.emit(ACTIONS.TX_ADDED, { title: `Swap ${fromAsset.symbol} for ${toAsset.symbol}`, type: 'Swap', verb: 'Swap Successful', transactions: [\n        {\n          uuid: allowanceTXID,\n          description: `Checking your ${fromAsset.symbol} allowance`,\n          status: 'WAITING'\n        },\n        {\n          uuid: swapTXID,\n          description: `Swap ${formatCurrency(fromAmount)} ${fromAsset.symbol} for ${toAsset.symbol}`,\n          status: 'WAITING'\n        }\n      ]})\n\n      let allowance = 0\n\n      // CHECK ALLOWANCES AND SET TX DISPLAY\n      if(fromAsset.address !== 'FTM') {\n        allowance = await this._getSwapAllowance(web3, fromAsset, account)\n\n        if(BigNumber(allowance).lt(fromAmount)) {\n          this.emitter.emit(ACTIONS.TX_STATUS, {\n            uuid: allowanceTXID,\n            description: `Allow the router to spend your ${fromAsset.symbol}`\n          })\n        } else {\n          this.emitter.emit(ACTIONS.TX_STATUS, {\n            uuid: allowanceTXID,\n            description: `Allowance on ${fromAsset.symbol} sufficient`,\n            status: 'DONE'\n          })\n        }\n      } else {\n        allowance = MAX_UINT256\n        this.emitter.emit(ACTIONS.TX_STATUS, {\n          uuid: allowanceTXID,\n          description: `Allowance on ${fromAsset.symbol} sufficient`,\n          status: 'DONE'\n        })\n      }\n\n\n      const gasPrice = await stores.accountStore.getGasPrice()\n\n      const allowanceCallsPromises = []\n\n      // SUBMIT REQUIRED ALLOWANCE TRANSACTIONS\n      if(BigNumber(allowance).lt(fromAmount)) {\n        const tokenContract = new web3.eth.Contract(CONTRACTS.ERC20_ABI, fromAsset.address)\n\n        const tokenPromise = new Promise((resolve, reject) => {\n          context._callContractWait(web3, tokenContract, 'approve', [CONTRACTS.ROUTER_ADDRESS, MAX_UINT256], account, gasPrice, null, null, allowanceTXID, (err) => {\n            if (err) {\n              reject(err)\n              return\n            }\n\n            resolve()\n          })\n        })\n\n        allowanceCallsPromises.push(tokenPromise)\n      }\n\n      const done = await Promise.all(allowanceCallsPromises)\n\n      // SUBMIT SWAP TRANSACTION\n      const sendSlippage = BigNumber(100).minus(slippage).div(100)\n      const sendFromAmount = BigNumber(fromAmount).times(10**fromAsset.decimals).toFixed(0)\n      const sendMinAmountOut = BigNumber(quote.output.finalValue).times(10**toAsset.decimals).times(sendSlippage).toFixed(0)\n      const deadline = ''+moment().add(600, 'seconds').unix()\n\n      const routerContract = new web3.eth.Contract(CONTRACTS.ROUTER_ABI, CONTRACTS.ROUTER_ADDRESS)\n\n\n      let func = 'swapExactTokensForTokens'\n      let params = [sendFromAmount, sendMinAmountOut, quote.output.routes, account.address, deadline]\n      let sendValue = null\n\n      if(fromAsset.address === 'FTM') {\n        func = 'swapExactFTMForTokens'\n        params = [sendMinAmountOut, quote.output.routes, account.address, deadline]\n        sendValue = sendFromAmount\n      }\n      if(toAsset.address === 'FTM') {\n        func = 'swapExactTokensForFTM'\n      }\n\n      this._callContractWait(web3, routerContract, func, params, account, gasPrice, null, null, swapTXID, (err) => {\n        if (err) {\n          return this.emitter.emit(ACTIONS.ERROR, err)\n        }\n\n        this._getSpecificAssetInfo(web3, account, fromAsset.address)\n        this._getSpecificAssetInfo(web3, account, toAsset.address)\n        this._getPairInfo(web3, account)\n\n        this.emitter.emit(ACTIONS.SWAP_RETURNED)\n      }, null, sendValue)\n\n    } catch(ex) {\n      console.error(ex)\n      this.emitter.emit(ACTIONS.ERROR, ex)\n    }\n  }\n\n  _getSpecificAssetInfo = async (web3, account, assetAddress) => {\n    try {\n      const baseAssets = this.getStore(\"baseAssets\")\n      if (!baseAssets) {\n        console.warn('baseAssets not found')\n        return null\n      }\n\n      const ba = await Promise.all(\n        baseAssets.map(async (asset) => {\n          if(asset.address.toLowerCase() === assetAddress.toLowerCase()) {\n            if(asset.address === 'FTM') {\n              let bal = await web3.eth.getBalance(account.address)\n              asset.balance = BigNumber(bal).div(10 ** asset.decimals).toFixed(asset.decimals)\n            } else {\n              const assetContract = new web3.eth.Contract(CONTRACTS.ERC20_ABI, asset.address)\n\n              const [ balanceOf ] = await Promise.all([\n                assetContract.methods.balanceOf(account.address).call(),\n              ])\n\n              asset.balance = BigNumber(balanceOf).div(10 ** asset.decimals).toFixed(asset.decimals)\n            }\n          }\n\n          return asset\n        })\n      )\n\n      this.setStore({ baseAssets: ba })\n      this.emitter.emit(ACTIONS.UPDATED)\n\n    } catch (ex) {\n      console.log(ex)\n      return null\n    }\n  }\n\n  _getSwapAllowance = async (web3, token, account) => {\n    try {\n      const tokenContract = new web3.eth.Contract(CONTRACTS.ERC20_ABI, token.address)\n      const allowance = await tokenContract.methods.allowance(account.address, CONTRACTS.ROUTER_ADDRESS).call()\n      return BigNumber(allowance).div(10**token.decimals).toFixed(token.decimals)\n    } catch (ex) {\n      console.error(ex)\n      return null\n    }\n  }\n\n  getVestNFTs = async (payload) => {\n    try {\n      const account = stores.accountStore.getStore(\"account\")\n      if (!account) {\n        console.warn('account not found')\n        return null\n      }\n\n      const web3 = await stores.accountStore.getWeb3Provider()\n      if (!web3) {\n        console.warn('web3 not found')\n        return null\n      }\n\n      const veToken = this.getStore('veToken')\n      const govToken = this.getStore('govToken')\n\n      const vestingContract = new web3.eth.Contract(CONTRACTS.VE_TOKEN_ABI, CONTRACTS.VE_TOKEN_ADDRESS)\n\n      const nftsLength = await vestingContract.methods.balanceOf(account.address).call()\n      const arr = Array.from({length: parseInt(nftsLength)}, (v, i) => i)\n\n      const nfts = await Promise.all(\n        arr.map(async (idx) => {\n\n          const tokenIndex = await vestingContract.methods.tokenOfOwnerByIndex(account.address, idx).call()\n          const locked = await vestingContract.methods.locked(tokenIndex).call()\n          const lockValue = await vestingContract.methods.balanceOfNFT(tokenIndex).call()\n\n          // probably do some decimals math before returning info. Maybe get more info. I don't know what it returns.\n          return {\n            id: tokenIndex,\n            lockEnds: locked.end,\n            lockAmount: BigNumber(locked.amount).div(10**govToken.decimals).toFixed(govToken.decimals),\n            lockValue: BigNumber(lockValue).div(10**veToken.decimals).toFixed(veToken.decimals)\n          }\n        })\n      )\n\n      this.setStore({ vestNFTs: nfts })\n      this.emitter.emit(ACTIONS.VEST_NFTS_RETURNED, nfts)\n\n    } catch(ex) {\n      console.error(ex)\n      this.emitter.emit(ACTIONS.ERROR, ex)\n    }\n  }\n\n  createVest = async (payload) => {\n    try {\n      const account = stores.accountStore.getStore(\"account\")\n      if (!account) {\n        console.warn('account not found')\n        return null\n      }\n\n      const web3 = await stores.accountStore.getWeb3Provider()\n      if (!web3) {\n        console.warn('web3 not found')\n        return null\n      }\n\n      const govToken = this.getStore('govToken')\n      const { amount, unlockTime } = payload.content\n\n      // ADD TRNASCTIONS TO TRANSACTION QUEUE DISPLAY\n      let allowanceTXID = this.getTXUUID()\n      let vestTXID = this.getTXUUID()\n\n      const unlockString = moment().add(unlockTime, 'seconds').format('YYYY-MM-DD')\n\n      this.emitter.emit(ACTIONS.TX_ADDED, { title: `Vest ${govToken.symbol} until ${unlockString}`, type: 'Vest', verb: 'Vest Created', transactions: [\n        {\n          uuid: allowanceTXID,\n          description: `Checking your ${govToken.symbol} allowance`,\n          status: 'WAITING'\n        },\n        {\n          uuid: vestTXID,\n          description: `Vesting your tokens`,\n          status: 'WAITING'\n        }\n      ]})\n\n\n      // CHECK ALLOWANCES AND SET TX DISPLAY\n      const allowance = await this._getVestAllowance(web3, govToken, account)\n\n      if(BigNumber(allowance).lt(amount)) {\n        this.emitter.emit(ACTIONS.TX_STATUS, {\n          uuid: allowanceTXID,\n          description: `Allow the vesting contract to use your ${govToken.symbol}`\n        })\n      } else {\n        this.emitter.emit(ACTIONS.TX_STATUS, {\n          uuid: allowanceTXID,\n          description: `Allowance on ${govToken.symbol} sufficient`,\n          status: 'DONE'\n        })\n      }\n\n      const gasPrice = await stores.accountStore.getGasPrice()\n\n      const allowanceCallsPromises = []\n\n      // SUBMIT REQUIRED ALLOWANCE TRANSACTIONS\n      if(BigNumber(allowance).lt(amount)) {\n        const tokenContract = new web3.eth.Contract(CONTRACTS.ERC20_ABI, govToken.address)\n\n        const tokenPromise = new Promise((resolve, reject) => {\n          this._callContractWait(web3, tokenContract, 'approve', [CONTRACTS.VE_TOKEN_ADDRESS, MAX_UINT256], account, gasPrice, null, null, allowanceTXID, (err) => {\n            if (err) {\n              reject(err)\n              return\n            }\n\n            resolve()\n          })\n        })\n\n        allowanceCallsPromises.push(tokenPromise)\n      }\n\n      const done = await Promise.all(allowanceCallsPromises)\n\n      // SUBMIT VEST TRANSACTION\n      const sendAmount = BigNumber(amount).times(10**govToken.decimals).toFixed(0)\n\n      const veTokenContract = new web3.eth.Contract(CONTRACTS.VE_TOKEN_ABI, CONTRACTS.VE_TOKEN_ADDRESS)\n\n      this._callContractWait(web3, veTokenContract, 'create_lock', [sendAmount, unlockTime+''], account, gasPrice, null, null, vestTXID, (err) => {\n        if (err) {\n          return this.emitter.emit(ACTIONS.ERROR, err)\n        }\n\n        this._getGovTokenInfo(web3, account)\n        this.getNFTByID('fetchAll')\n\n        this.emitter.emit(ACTIONS.CREATE_VEST_RETURNED)\n      })\n\n    } catch(ex) {\n      console.error(ex)\n      this.emitter.emit(ACTIONS.ERROR, ex)\n    }\n  }\n\n  _getVestAllowance = async (web3, token, account) => {\n    try {\n      const tokenContract = new web3.eth.Contract(CONTRACTS.ERC20_ABI, token.address)\n      const allowance = await tokenContract.methods.allowance(account.address, CONTRACTS.VE_TOKEN_ADDRESS).call()\n      return BigNumber(allowance).div(10**token.decimals).toFixed(token.decimals)\n    } catch (ex) {\n      console.error(ex)\n      return null\n    }\n  }\n\n  increaseVestAmount = async (payload) => {\n    try {\n      const account = stores.accountStore.getStore(\"account\")\n      if (!account) {\n        console.warn('account not found')\n        return null\n      }\n\n      const web3 = await stores.accountStore.getWeb3Provider()\n      if (!web3) {\n        console.warn('web3 not found')\n        return null\n      }\n\n      const govToken = this.getStore('govToken')\n      const { amount, tokenID } = payload.content\n\n      // ADD TRNASCTIONS TO TRANSACTION QUEUE DISPLAY\n      let allowanceTXID = this.getTXUUID()\n      let vestTXID = this.getTXUUID()\n\n      this.emitter.emit(ACTIONS.TX_ADDED, { title: `Increase vest amount on token #${tokenID}`, type: 'Vest', verb: 'Vest Increased', transactions: [\n        {\n          uuid: allowanceTXID,\n          description: `Checking your ${govToken.symbol} allowance`,\n          status: 'WAITING'\n        },\n        {\n          uuid: vestTXID,\n          description: `Increasing your vest amount`,\n          status: 'WAITING'\n        }\n      ]})\n\n\n      // CHECK ALLOWANCES AND SET TX DISPLAY\n      const allowance = await this._getVestAllowance(web3, govToken, account)\n\n      if(BigNumber(allowance).lt(amount)) {\n        this.emitter.emit(ACTIONS.TX_STATUS, {\n          uuid: allowanceTXID,\n          description: `Allow vesting contract to use your ${govToken.symbol}`\n        })\n      } else {\n        this.emitter.emit(ACTIONS.TX_STATUS, {\n          uuid: allowanceTXID,\n          description: `Allowance on ${govToken.symbol} sufficient`,\n          status: 'DONE'\n        })\n      }\n\n      const gasPrice = await stores.accountStore.getGasPrice()\n\n      const allowanceCallsPromises = []\n\n      // SUBMIT REQUIRED ALLOWANCE TRANSACTIONS\n      if(BigNumber(allowance).lt(amount)) {\n        const tokenContract = new web3.eth.Contract(CONTRACTS.ERC20_ABI, govToken.address)\n\n        const tokenPromise = new Promise((resolve, reject) => {\n          this._callContractWait(web3, tokenContract, 'approve', [CONTRACTS.VE_TOKEN_ADDRESS, MAX_UINT256], account, gasPrice, null, null, allowanceTXID, (err) => {\n            if (err) {\n              reject(err)\n              return\n            }\n\n            resolve()\n          })\n        })\n\n        allowanceCallsPromises.push(tokenPromise)\n      }\n\n      const done = await Promise.all(allowanceCallsPromises)\n\n      // SUBMIT INCREASE TRANSACTION\n      const sendAmount = BigNumber(amount).times(10**govToken.decimals).toFixed(0)\n\n      const veTokenContract = new web3.eth.Contract(CONTRACTS.VE_TOKEN_ABI, CONTRACTS.VE_TOKEN_ADDRESS)\n\n      this._callContractWait(web3, veTokenContract, 'increase_amount', [tokenID, sendAmount], account, gasPrice, null, null, vestTXID, (err) => {\n        if (err) {\n          return this.emitter.emit(ACTIONS.ERROR, err)\n        }\n\n        this._getGovTokenInfo(web3, account)\n        this._updateVestNFTByID(tokenID)\n\n        this.emitter.emit(ACTIONS.INCREASE_VEST_AMOUNT_RETURNED)\n      })\n\n    } catch(ex) {\n      console.error(ex)\n      this.emitter.emit(ACTIONS.ERROR, ex)\n    }\n  }\n\n  increaseVestDuration = async (payload) => {\n    try {\n      const account = stores.accountStore.getStore(\"account\")\n      if (!account) {\n        console.warn('account not found')\n        return null\n      }\n\n      const web3 = await stores.accountStore.getWeb3Provider()\n      if (!web3) {\n        console.warn('web3 not found')\n        return null\n      }\n\n      const govToken = this.getStore('govToken')\n      const { tokenID, unlockTime } = payload.content\n\n      // ADD TRNASCTIONS TO TRANSACTION QUEUE DISPLAY\n      let vestTXID = this.getTXUUID()\n\n      this.emitter.emit(ACTIONS.TX_ADDED, { title: `Increase unlock time on token #${tokenID}`, type: 'Vest', verb: 'Vest Increased', transactions: [\n        {\n          uuid: vestTXID,\n          description: `Increasing your vest duration`,\n          status: 'WAITING'\n        }\n      ]})\n\n\n      const gasPrice = await stores.accountStore.getGasPrice()\n\n      // SUBMIT INCREASE TRANSACTION\n      const veTokenContract = new web3.eth.Contract(CONTRACTS.VE_TOKEN_ABI, CONTRACTS.VE_TOKEN_ADDRESS)\n\n      this._callContractWait(web3, veTokenContract, 'increase_unlock_time', [tokenID, unlockTime+''], account, gasPrice, null, null, vestTXID, (err) => {\n        if (err) {\n          return this.emitter.emit(ACTIONS.ERROR, err)\n        }\n\n        this._updateVestNFTByID(tokenID)\n\n        this.emitter.emit(ACTIONS.INCREASE_VEST_DURATION_RETURNED)\n      })\n\n    } catch(ex) {\n      console.error(ex)\n      this.emitter.emit(ACTIONS.ERROR, ex)\n    }\n  }\n\n  withdrawVest = async (payload) => {\n    try {\n      const account = stores.accountStore.getStore(\"account\")\n      if (!account) {\n        console.warn('account not found')\n        return null\n      }\n\n      const web3 = await stores.accountStore.getWeb3Provider()\n      if (!web3) {\n        console.warn('web3 not found')\n        return null\n      }\n\n      const govToken = this.getStore('govToken')\n      const { tokenID } = payload.content\n\n      // ADD TRNASCTIONS TO TRANSACTION QUEUE DISPLAY\n      let vestTXID = this.getTXUUID()\n\n      this.emitter.emit(ACTIONS.TX_ADDED, { title: `Withdraw vest amount on token #${tokenID}`, type: 'Vest', verb: 'Vest Withdrawn', transactions: [\n        {\n          uuid: vestTXID,\n          description: `Withdrawing your expired tokens`,\n          status: 'WAITING'\n        }\n      ]})\n\n\n      const gasPrice = await stores.accountStore.getGasPrice()\n\n      // SUBMIT INCREASE TRANSACTION\n      const veTokenContract = new web3.eth.Contract(CONTRACTS.VE_TOKEN_ABI, CONTRACTS.VE_TOKEN_ADDRESS)\n\n      this._callContractWait(web3, veTokenContract, 'withdraw', [tokenID], account, gasPrice, null, null, vestTXID, (err) => {\n        if (err) {\n          return this.emitter.emit(ACTIONS.ERROR, err)\n        }\n\n        this._updateVestNFTByID(tokenID)\n\n        this.emitter.emit(ACTIONS.WITHDRAW_VEST_RETURNED)\n      })\n\n    } catch(ex) {\n      console.error(ex)\n      this.emitter.emit(ACTIONS.ERROR, ex)\n    }\n  }\n\n  vote = async (payload) => {\n    try {\n      const account = stores.accountStore.getStore(\"account\")\n      if (!account) {\n        console.warn('account not found')\n        return null\n      }\n\n      const web3 = await stores.accountStore.getWeb3Provider()\n      if (!web3) {\n        console.warn('web3 not found')\n        return null\n      }\n\n      const govToken = this.getStore('govToken')\n      const { tokenID, votes } = payload.content\n\n      // ADD TRNASCTIONS TO TRANSACTION QUEUE DISPLAY\n      let voteTXID = this.getTXUUID()\n\n      this.emitter.emit(ACTIONS.TX_ADDED, { title: `Cast vote using token #${tokenID}`, verb: 'Votes Cast', transactions: [\n        {\n          uuid: voteTXID,\n          description: `Cast votes`,\n          status: 'WAITING'\n        }\n      ]})\n\n      const gasPrice = await stores.accountStore.getGasPrice()\n\n      // SUBMIT INCREASE TRANSACTION\n      const gaugesContract = new web3.eth.Contract(CONTRACTS.VOTER_ABI, CONTRACTS.VOTER_ADDRESS)\n\n      let onlyVotes = votes.filter((vote) => {\n        return (BigNumber(vote.value).gt(0) || BigNumber(vote.value).lt(0))\n      })\n\n      let tokens = onlyVotes.map((vote) => {\n        return vote.address\n      })\n\n      let voteCounts = onlyVotes.map((vote) => {\n        return BigNumber(vote.value).times(100).toFixed(0)\n      })\n\n      this._callContractWait(web3, gaugesContract, 'vote', [tokenID, tokens, voteCounts], account, gasPrice, null, null, voteTXID, (err) => {\n        if (err) {\n          return this.emitter.emit(ACTIONS.ERROR, err)\n        }\n\n        this.emitter.emit(ACTIONS.VOTE_RETURNED)\n      })\n\n    } catch(ex) {\n      console.error(ex)\n      this.emitter.emit(ACTIONS.ERROR, ex)\n    }\n  }\n\n  getVestVotes = async (payload) => {\n    try {\n      const account = stores.accountStore.getStore(\"account\")\n      if (!account) {\n        console.warn('account not found')\n        return null\n      }\n\n      const web3 = await stores.accountStore.getWeb3Provider()\n      if (!web3) {\n        console.warn('web3 not found')\n        return null\n      }\n\n      const { tokenID } = payload.content\n      const pairs = this.getStore('pairs')\n\n      if(!pairs) {\n        return null\n      }\n\n      if(!tokenID) {\n        return\n      }\n\n      const filteredPairs = pairs.filter((pair) => {\n        return pair && pair.gauge && pair.gauge.address\n      })\n\n      const gaugesContract = new web3.eth.Contract(CONTRACTS.VOTER_ABI, CONTRACTS.VOTER_ADDRESS)\n\n      const multicall = await stores.accountStore.getMulticall()\n\n      const calls = filteredPairs.map((pair) => {\n        return gaugesContract.methods.votes(tokenID, pair.address)\n      })\n\n      const voteCounts = await multicall.aggregate(calls);\n\n      let votes = []\n\n      const totalVotes = voteCounts.reduce((curr, acc) => {\n        let num = BigNumber(acc).gt(0) ? acc : BigNumber(acc).times(-1).toNumber(0)\n        return BigNumber(curr).plus(num)\n      }, 0)\n\n      for(let i = 0; i < voteCounts.length; i++) {\n        votes.push({\n          address: filteredPairs[i].address,\n          votePercent: (BigNumber(totalVotes).gt(0) || BigNumber(totalVotes).lt(0)) ? BigNumber(voteCounts[i]).times(100).div(totalVotes).toFixed(0) : '0'\n        })\n      }\n\n      this.emitter.emit(ACTIONS.VEST_VOTES_RETURNED, votes)\n    } catch(ex) {\n      console.error(ex)\n      this.emitter.emit(ACTIONS.ERROR, ex)\n    }\n  }\n\n  createBribe = async (payload) => {\n    try {\n      const account = stores.accountStore.getStore(\"account\")\n      if (!account) {\n        console.warn('account not found')\n        return null\n      }\n\n      const web3 = await stores.accountStore.getWeb3Provider()\n      if (!web3) {\n        console.warn('web3 not found')\n        return null\n      }\n\n      const { asset, amount, gauge } = payload.content\n\n      // ADD TRNASCTIONS TO TRANSACTION QUEUE DISPLAY\n      let allowanceTXID = this.getTXUUID()\n      let bribeTXID = this.getTXUUID()\n\n      this.emitter.emit(ACTIONS.TX_ADDED, { title: `Create bribe on ${gauge.token0.symbol}/${gauge.token1.symbol}`, verb: 'Bribe Created', transactions: [\n        {\n          uuid: allowanceTXID,\n          description: `Checking your ${asset.symbol} allowance`,\n          status: 'WAITING'\n        },\n        {\n          uuid: bribeTXID,\n          description: `Create bribe`,\n          status: 'WAITING'\n        }\n      ]})\n\n\n      // CHECK ALLOWANCES AND SET TX DISPLAY\n      const allowance = await this._getBribeAllowance(web3, asset, gauge, account)\n\n      if(BigNumber(allowance).lt(amount)) {\n        this.emitter.emit(ACTIONS.TX_STATUS, {\n          uuid: allowanceTXID,\n          description: `Allow the bribe contract to spend your ${asset.symbol}`\n        })\n      } else {\n        this.emitter.emit(ACTIONS.TX_STATUS, {\n          uuid: allowanceTXID,\n          description: `Allowance on ${asset.symbol} sufficient`,\n          status: 'DONE'\n        })\n      }\n\n      const gasPrice = await stores.accountStore.getGasPrice()\n\n      const allowanceCallsPromises = []\n\n      // SUBMIT REQUIRED ALLOWANCE TRANSACTIONS\n      if(BigNumber(allowance).lt(amount)) {\n        const tokenContract = new web3.eth.Contract(CONTRACTS.ERC20_ABI, asset.address)\n\n        const tokenPromise = new Promise((resolve, reject) => {\n          this._callContractWait(web3, tokenContract, 'approve', [gauge.gauge.bribeAddress, MAX_UINT256], account, gasPrice, null, null, allowanceTXID, (err) => {\n            if (err) {\n              reject(err)\n              return\n            }\n\n            resolve()\n          })\n        })\n\n        allowanceCallsPromises.push(tokenPromise)\n      }\n\n      const done = await Promise.all(allowanceCallsPromises)\n\n      // SUBMIT BRIBE TRANSACTION\n      const bribeContract = new web3.eth.Contract(CONTRACTS.BRIBE_ABI, gauge.gauge.bribeAddress)\n\n      const sendAmount = BigNumber(amount).times(10**asset.decimals).toFixed(0)\n\n      this._callContractWait(web3, bribeContract, 'notifyRewardAmount', [asset.address, sendAmount], account, gasPrice, null, null, bribeTXID, async (err) => {\n        if (err) {\n          return this.emitter.emit(ACTIONS.ERROR, err)\n        }\n\n        await this.updatePairsCall(web3, account)\n\n        this.emitter.emit(ACTIONS.BRIBE_CREATED)\n      })\n    } catch(ex) {\n      console.error(ex)\n      this.emitter.emit(ACTIONS.ERROR, ex)\n    }\n  }\n\n  _getBribeAllowance = async (web3, token, pair, account) => {\n    try {\n      const tokenContract = new web3.eth.Contract(CONTRACTS.ERC20_ABI, token.address)\n      const allowance = await tokenContract.methods.allowance(account.address, pair.gauge.bribeAddress).call()\n      return BigNumber(allowance).div(10**token.decimals).toFixed(token.decimals)\n    } catch (ex) {\n      console.error(ex)\n      return null\n    }\n  }\n\n  getVestBalances = async (payload) => {\n    try {\n      const account = stores.accountStore.getStore(\"account\")\n      if (!account) {\n        console.warn('account not found')\n        return null\n      }\n\n      const web3 = await stores.accountStore.getWeb3Provider()\n      if (!web3) {\n        console.warn('web3 not found')\n        return null\n      }\n\n      const { tokenID } = payload.content\n      const pairs = this.getStore('pairs')\n\n      if(!pairs) {\n        return null\n      }\n\n      if(!tokenID) {\n        return\n      }\n\n      const filteredPairs = pairs.filter((pair) => {\n        return pair && pair.gauge\n      })\n\n      const bribesEarned = await Promise.all(\n        filteredPairs.map(async (pair) => {\n\n          const bribesEarned = await Promise.all(\n            pair.gauge.bribes.map(async (bribe) => {\n              const bribeContract = new web3.eth.Contract(CONTRACTS.BRIBE_ABI, pair.gauge.bribeAddress)\n\n              const [ earned ] = await Promise.all([\n                bribeContract.methods.earned(bribe.token.address, tokenID).call(),\n              ])\n\n              return {\n                earned: BigNumber(earned).div(10**bribe.token.decimals).toFixed(bribe.token.decimals),\n              }\n            })\n          )\n\n          pair.gauge.bribesEarned = bribesEarned\n\n          return pair\n        })\n      )\n\n      this.emitter.emit(ACTIONS.VEST_BALANCES_RETURNED, bribesEarned)\n    } catch(ex) {\n      console.error(ex)\n      this.emitter.emit(ACTIONS.ERROR, ex)\n    }\n  }\n\n  getRewardBalances = async (payload) => {\n    try {\n      const account = stores.accountStore.getStore(\"account\")\n      if (!account) {\n        console.warn('account not found')\n        return null\n      }\n\n      const web3 = await stores.accountStore.getWeb3Provider()\n      if (!web3) {\n        console.warn('web3 not found')\n        return null\n      }\n\n      const { tokenID } = payload.content\n\n      const pairs = this.getStore('pairs')\n\n      const filteredPairs = [...pairs.filter((pair) => {\n        return pair && pair.gauge\n      })]\n\n      const filteredPairs2 = [...pairs.filter((pair) => {\n        return pair && pair.gauge\n      })]\n\n      let filteredBribes = []\n\n      if(tokenID) {\n        const bribesEarned = await Promise.all(\n          filteredPairs.map(async (pair) => {\n\n            const bribesEarned = await Promise.all(\n              pair.gauge.bribes.map(async (bribe) => {\n                const bribeContract = new web3.eth.Contract(CONTRACTS.BRIBE_ABI, pair.gauge.bribeAddress)\n\n                const [ earned ] = await Promise.all([\n                  bribeContract.methods.earned(bribe.token.address, tokenID).call(),\n                ])\n\n                bribe.earned = BigNumber(earned).div(10**bribe.token.decimals).toFixed(bribe.token.decimals)\n                return bribe\n              })\n            )\n            pair.gauge.bribesEarned = bribesEarned\n\n            return pair\n          })\n        )\n\n        filteredBribes = bribesEarned.filter((pair) => {\n          if(pair.gauge && pair.gauge.bribesEarned && pair.gauge.bribesEarned.length > 0) {\n            let shouldReturn = false\n\n            for(let i = 0; i < pair.gauge.bribesEarned.length; i++) {\n              if(BigNumber(pair.gauge.bribesEarned[i].earned).gt(0)) {\n                shouldReturn = true\n              }\n            }\n\n            return shouldReturn\n          }\n\n          return false\n        }).map((pair) => {\n          pair.rewardType = 'Bribe'\n          return pair\n        })\n      }\n\n      const filteredFees = []\n      for(let i = 0; i < pairs.length; i++) {\n        let pair = Object.assign({}, pairs[i])\n        if(BigNumber(pair.claimable0).gt(0) || BigNumber(pair.claimable1).gt(0)) {\n          pair.rewardType = 'Fees'\n          filteredFees.push(pair)\n        }\n      }\n\n      const rewardsEarned = await Promise.all(\n        filteredPairs2.map(async (pair) => {\n\n          const gaugeContract = new web3.eth.Contract(CONTRACTS.GAUGE_ABI, pair.gauge.address)\n\n          const [ earned ] = await Promise.all([\n            gaugeContract.methods.earned(CONTRACTS.GOV_TOKEN_ADDRESS, account.address).call(),\n          ])\n\n          pair.gauge.rewardsEarned = BigNumber(earned).div(10**18).toFixed(18)\n          return pair\n        })\n      )\n\n      const filteredRewards = []\n      for(let j = 0; j < rewardsEarned.length; j++) {\n        let pair = Object.assign({}, rewardsEarned[j])\n        if(pair.gauge && pair.gauge.rewardsEarned && BigNumber(pair.gauge.rewardsEarned).gt(0)) {\n          pair.rewardType = 'Reward'\n          filteredRewards.push(pair)\n        }\n      }\n\n      console.log(filteredBribes)\n      console.log(filteredFees)\n      console.log(filteredRewards)\n\n      const rewards = {\n        bribes: filteredBribes,\n        fees: filteredFees,\n        rewards: filteredRewards,\n      }\n\n      this.setStore({\n        rewards\n      })\n\n      this.emitter.emit(ACTIONS.REWARD_BALANCES_RETURNED, rewards)\n    } catch(ex) {\n      console.error(ex)\n      this.emitter.emit(ACTIONS.ERROR, ex)\n    }\n  }\n\n  claimBribes = async (payload) => {\n    try {\n      const account = stores.accountStore.getStore(\"account\")\n      if (!account) {\n        console.warn('account not found')\n        return null\n      }\n\n      const web3 = await stores.accountStore.getWeb3Provider()\n      if (!web3) {\n        console.warn('web3 not found')\n        return null\n      }\n\n      const { pair, tokenID } = payload.content\n\n      // ADD TRNASCTIONS TO TRANSACTION QUEUE DISPLAY\n      let claimTXID = this.getTXUUID()\n\n      this.emitter.emit(ACTIONS.TX_ADDED, { title: `Claim rewards for ${pair.token0.symbol}/${pair.token1.symbol}`, verb: 'Rewards Claimed', transactions: [\n        {\n          uuid: claimTXID,\n          description: `Claiming your bribes`,\n          status: 'WAITING'\n        }\n      ]})\n\n      const gasPrice = await stores.accountStore.getGasPrice()\n\n      // SUBMIT CLAIM TRANSACTION\n      const gaugesContract = new web3.eth.Contract(CONTRACTS.VOTER_ABI, CONTRACTS.VOTER_ADDRESS)\n\n      const sendGauges = [ pair.gauge.bribeAddress ]\n      const sendTokens = [ pair.gauge.bribesEarned.map((bribe) => {\n        return bribe.token.address\n      }) ]\n\n      this._callContractWait(web3, gaugesContract, 'claimBribes', [sendGauges, sendTokens, tokenID], account, gasPrice, null, null, claimTXID, async (err) => {\n        if (err) {\n          return this.emitter.emit(ACTIONS.ERROR, err)\n        }\n\n        this.getRewardBalances({ content: { tokenID } })\n        this.emitter.emit(ACTIONS.CLAIM_REWARD_RETURNED)\n      })\n    } catch(ex) {\n      console.error(ex)\n      this.emitter.emit(ACTIONS.ERROR, ex)\n    }\n  }\n\n  claimAllRewards = async (payload) => {\n    try {\n      const context = this\n      const account = stores.accountStore.getStore(\"account\")\n      if (!account) {\n        console.warn('account not found')\n        return null\n      }\n\n      const web3 = await stores.accountStore.getWeb3Provider()\n      if (!web3) {\n        console.warn('web3 not found')\n        return null\n      }\n\n      const { pairs, tokenID } = payload.content\n\n      // ADD TRNASCTIONS TO TRANSACTION QUEUE DISPLAY\n      let claimTXID = this.getTXUUID()\n      let feeClaimTXIDs = []\n      let rewardClaimTXIDs = []\n\n\n      let bribePairs = pairs.filter((pair) => {\n        return pair.rewardType === 'Bribe'\n      })\n\n      let feePairs = pairs.filter((pair) => {\n        return pair.rewardType === 'Fees'\n      })\n\n      let rewardPairs = pairs.filter((pair) => {\n        return pair.rewardType === 'Reward'\n      })\n\n      const sendGauges = bribePairs.map((pair) => {\n        return pair.gauge.bribeAddress\n      })\n      const sendTokens = bribePairs.map((pair) => {\n        return pair.gauge.bribesEarned.map((bribe) => {\n          return bribe.token.address\n        })\n      })\n\n      if(bribePairs.length == 0 && feePairs.length == 0 && rewardPairs.length == 0) {\n        this.emitter.emit(ACTIONS.ERROR, 'Nothing to claim')\n        this.emitter.emit(ACTIONS.CLAIM_ALL_REWARDS_RETURNED)\n        return\n      }\n\n      let sendOBJ = { title: `Claim all rewards`, verb: 'Rewards Claimed', transactions: [ ]}\n\n      if(bribePairs.length > 0) {\n        sendOBJ.transactions.push({\n          uuid: claimTXID,\n          description: `Claiming all your available bribes`,\n          status: 'WAITING'\n        })\n      }\n\n      if(feePairs.length > 0) {\n        for(let i = 0; i < feePairs.length; i++) {\n          const newClaimTX = this.getTXUUID()\n\n          feeClaimTXIDs.push(newClaimTX)\n          sendOBJ.transactions.push({\n            uuid: newClaimTX,\n            description: `Claiming fees for ${feePairs[i].symbol}`,\n            status: 'WAITING'\n          })\n        }\n      }\n\n      if(rewardPairs.length > 0) {\n        for(let i = 0; i < rewardPairs.length; i++) {\n          const newClaimTX = this.getTXUUID()\n\n          rewardClaimTXIDs.push(newClaimTX)\n          sendOBJ.transactions.push({\n            uuid: newClaimTX,\n            description: `Claiming reward for ${rewardPairs[i].symbol}`,\n            status: 'WAITING'\n          })\n        }\n      }\n\n      this.emitter.emit(ACTIONS.TX_ADDED, sendOBJ)\n\n      const gasPrice = await stores.accountStore.getGasPrice()\n\n      if(bribePairs.length > 0) {\n        // SUBMIT CLAIM TRANSACTION\n        const gaugesContract = new web3.eth.Contract(CONTRACTS.VOTER_ABI, CONTRACTS.VOTER_ADDRESS)\n\n        const claimPromise = new Promise((resolve, reject) => {\n          context._callContractWait(web3, gaugesContract, 'claimBribes', [sendGauges, sendTokens, tokenID], account, gasPrice, null, null, claimTXID, (err) => {\n            if (err) {\n              reject(err)\n              return\n            }\n\n            resolve()\n          })\n        })\n\n        await Promise.all([claimPromise])\n      }\n\n      if(feePairs.length > 0) {\n        for(let i = 0; i < feePairs.length; i++) {\n          const pairContract = new web3.eth.Contract(CONTRACTS.PAIR_ABI, feePairs[i].address)\n\n          const claimPromise = new Promise((resolve, reject) => {\n            context._callContractWait(web3, pairContract, 'claimFees', [], account, gasPrice, null, null, feeClaimTXIDs[i], (err) => {\n              if (err) {\n                reject(err)\n                return\n              }\n\n              resolve()\n            })\n          })\n\n          await Promise.all([claimPromise])\n        }\n      }\n\n      if(rewardPairs.length > 0) {\n        for(let i = 0; i < rewardPairs.length; i++) {\n          const gaugeContract = new web3.eth.Contract(CONTRACTS.GAUGE_ABI, rewardPairs[i].gauge.address)\n          const sendTok = [ CONTRACTS.GOV_TOKEN_ADDRESS ]\n\n          const rewardPromise = new Promise((resolve, reject) => {\n            context._callContractWait(web3, gaugeContract, 'getReward', [account.address, sendTok], account, gasPrice, null, null, rewardClaimTXIDs[i], (err) => {\n              if (err) {\n                reject(err)\n                return\n              }\n\n              resolve()\n            })\n          })\n\n          await Promise.all([rewardPromise])\n        }\n      }\n\n      this.getRewardBalances({ content: { tokenID } })\n      this.emitter.emit(ACTIONS.CLAIM_ALL_REWARDS_RETURNED)\n\n    } catch(ex) {\n      console.error(ex)\n      this.emitter.emit(ACTIONS.ERROR, ex)\n    }\n  }\n\n  claimRewards = async (payload) => {\n    try {\n      const account = stores.accountStore.getStore(\"account\")\n      if (!account) {\n        console.warn('account not found')\n        return null\n      }\n\n      const web3 = await stores.accountStore.getWeb3Provider()\n      if (!web3) {\n        console.warn('web3 not found')\n        return null\n      }\n\n      const { pair, tokenID } = payload.content\n\n      // ADD TRNASCTIONS TO TRANSACTION QUEUE DISPLAY\n      let claimTXID = this.getTXUUID()\n\n      this.emitter.emit(ACTIONS.TX_ADDED, { title: `Claim rewards for ${pair.token0.symbol}/${pair.token1.symbol}`, verb: 'Rewards Claimed', transactions: [\n        {\n          uuid: claimTXID,\n          description: `Claiming your rewards`,\n          status: 'WAITING'\n        }\n      ]})\n\n      const gasPrice = await stores.accountStore.getGasPrice()\n\n      // SUBMIT CLAIM TRANSACTION\n      const gaugeContract = new web3.eth.Contract(CONTRACTS.GAUGE_ABI, pair.gauge.address)\n\n      const sendTokens = [ CONTRACTS.GOV_TOKEN_ADDRESS ]\n\n      this._callContractWait(web3, gaugeContract, 'getReward', [account.address, sendTokens], account, gasPrice, null, null, claimTXID, async (err) => {\n        if (err) {\n          return this.emitter.emit(ACTIONS.ERROR, err)\n        }\n\n        this.getRewardBalances({ content: { tokenID } })\n        this.emitter.emit(ACTIONS.CLAIM_REWARD_RETURNED)\n      })\n    } catch(ex) {\n      console.error(ex)\n      this.emitter.emit(ACTIONS.ERROR, ex)\n    }\n  }\n\n  claimPairFees = async (payload) => {\n    try {\n      const account = stores.accountStore.getStore(\"account\")\n      if (!account) {\n        console.warn('account not found')\n        return null\n      }\n\n      const web3 = await stores.accountStore.getWeb3Provider()\n      if (!web3) {\n        console.warn('web3 not found')\n        return null\n      }\n\n      const { pair, tokenID } = payload.content\n\n      // ADD TRNASCTIONS TO TRANSACTION QUEUE DISPLAY\n      let claimTXID = this.getTXUUID()\n\n      this.emitter.emit(ACTIONS.TX_ADDED, { title: `Claim fees for ${pair.token0.symbol}/${pair.token1.symbol}`, verb: 'Fees Claimed', transactions: [\n        {\n          uuid: claimTXID,\n          description: `Claiming your fees`,\n          status: 'WAITING'\n        }\n      ]})\n\n      const gasPrice = await stores.accountStore.getGasPrice()\n\n      // SUBMIT CLAIM TRANSACTION\n      const pairContract = new web3.eth.Contract(CONTRACTS.PAIR_ABI, pair.address)\n\n      this._callContractWait(web3, pairContract, 'claimFees', [], account, gasPrice, null, null, claimTXID, async (err) => {\n        if (err) {\n          return this.emitter.emit(ACTIONS.ERROR, err)\n        }\n\n        this.getRewardBalances({ content: { tokenID } })\n        this.emitter.emit(ACTIONS.CLAIM_REWARD_RETURNED)\n      })\n    } catch(ex) {\n      console.error(ex)\n      this.emitter.emit(ACTIONS.ERROR, ex)\n    }\n  }\n\n\n  searchWhitelist = async (payload) => {\n    try {\n      const account = stores.accountStore.getStore(\"account\")\n      if (!account) {\n        console.warn('account not found')\n        return null\n      }\n\n      const web3 = await stores.accountStore.getWeb3Provider()\n      if (!web3) {\n        console.warn('web3 not found')\n        return null\n      }\n      const veToken = this.getStore('veToken')\n\n      const { search } = payload.content\n\n\n      const voterContract = new web3.eth.Contract(CONTRACTS.VOTER_ABI, CONTRACTS.VOTER_ADDRESS)\n\n      const [ isWhitelisted, listingFee ] = await Promise.all([\n        voterContract.methods.isWhitelisted(search).call(),\n        voterContract.methods.listing_fee().call()\n      ])\n\n      const token = await this.getBaseAsset(search)\n      token.isWhitelisted = isWhitelisted\n      token.listingFee = BigNumber(listingFee).div(10**veToken.decimals).toFixed(veToken.decimals)\n\n      this.emitter.emit(ACTIONS.SEARCH_WHITELIST_RETURNED, token)\n    } catch(ex) {\n      console.error(ex)\n      this.emitter.emit(ACTIONS.ERROR, ex)\n    }\n  }\n\n  whitelistToken = async (payload) => {\n    try {\n      const account = stores.accountStore.getStore(\"account\")\n      if (!account) {\n        console.warn('account not found')\n        return null\n      }\n\n      const web3 = await stores.accountStore.getWeb3Provider()\n      if (!web3) {\n        console.warn('web3 not found')\n        return null\n      }\n\n      const { token, nft } = payload.content\n\n      // ADD TRNASCTIONS TO TRANSACTION QUEUE DISPLAY\n      let whitelistTXID = this.getTXUUID()\n\n      this.emitter.emit(ACTIONS.TX_ADDED, { title: `WHITELIST ${token.symbol}`, verb: 'Token Whitelisted', transactions: [\n        {\n          uuid: whitelistTXID,\n          description: `Whitelisting ${token.symbol}`,\n          status: 'WAITING'\n        }\n      ]})\n\n      const gasPrice = await stores.accountStore.getGasPrice()\n\n      // SUBMIT WHITELIST TRANSACTION\n      const voterContract = new web3.eth.Contract(CONTRACTS.VOTER_ABI, CONTRACTS.VOTER_ADDRESS)\n\n      this._callContractWait(web3, voterContract, 'whitelist', [token.address, nft.id], account, gasPrice, null, null, whitelistTXID, async (err) => {\n        if (err) {\n          return this.emitter.emit(ACTIONS.ERROR, err)\n        }\n\n        window.setTimeout(() => {\n          this.dispatcher.dispatch({ type: ACTIONS.SEARCH_WHITELIST, content: { search: token.address } })\n        }, 2)\n\n        this.emitter.emit(ACTIONS.WHITELIST_TOKEN_RETURNED)\n      })\n    } catch(ex) {\n      console.error(ex)\n      this.emitter.emit(ACTIONS.ERROR, ex)\n    }\n  }\n\n  _callContractWait = (web3, contract, method, params, account, gasPrice, dispatchEvent, dispatchContent, uuid, callback, paddGasCost, sendValue = null) => {\n    // console.log(method)\n    // console.log(params)\n    // if(sendValue) {\n    //   console.log(sendValue)\n    // }\n    // console.log(uuid)\n    //estimate gas\n    this.emitter.emit(ACTIONS.TX_PENDING, { uuid })\n\n    const gasCost = contract.methods[method](...params)\n      .estimateGas({ from: account.address, value: sendValue })\n      .then((gasAmount) => {\n        const context = this\n\n        let sendGasAmount = BigNumber(gasAmount).times(1.5).toFixed(0)\n        // if (paddGasCost) {\n        //   sendGasAmount = BigNumber(sendGasAmount).times(1.15).toFixed(0)\n        // }\n        //\n        // const sendGasAmount = '3000000'\n        // const context = this\n        //\n        contract.methods[method](...params)\n          .send({\n            from: account.address,\n            gasPrice: web3.utils.toWei(gasPrice, 'gwei'),\n            gas: sendGasAmount,\n            value: sendValue,\n            // maxFeePerGas: web3.utils.toWei(gasPrice, \"gwei\"),\n            // maxPriorityFeePerGas: web3.utils.toWei(\"2\", \"gwei\"),\n          })\n          .on(\"transactionHash\", function (txHash) {\n            context.emitter.emit(ACTIONS.TX_SUBMITTED, { uuid, txHash })\n          })\n          .on(\"receipt\", function (receipt) {\n            context.emitter.emit(ACTIONS.TX_CONFIRMED, { uuid, txHash: receipt.transactionHash })\n            callback(null, receipt.transactionHash)\n            if (dispatchEvent) {\n              context.dispatcher.dispatch({ type: dispatchEvent, content: dispatchContent })\n            }\n          })\n          .on(\"error\", function (error) {\n            if (!error.toString().includes(\"-32601\")) {\n              if (error.message) {\n                context.emitter.emit(ACTIONS.TX_REJECTED, { uuid, error: error.message })\n                return callback(error.message)\n              }\n              context.emitter.emit(ACTIONS.TX_REJECTED, { uuid, error: error })\n              callback(error)\n            }\n          })\n          .catch((error) => {\n            if (!error.toString().includes(\"-32601\")) {\n              if (error.message) {\n                context.emitter.emit(ACTIONS.TX_REJECTED, { uuid, error: error.message })\n                return callback(error.message)\n              }\n              context.emitter.emit(ACTIONS.TX_REJECTED, { uuid, error: error })\n              callback(error)\n            }\n          })\n      })\n      .catch((ex) => {\n        console.log(ex)\n        if (ex.message) {\n          this.emitter.emit(ACTIONS.TX_REJECTED, { uuid, error: ex.message })\n          return callback(ex.message)\n        }\n        this.emitter.emit(ACTIONS.TX_REJECTED, { uuid, error: 'Error estimating gas' })\n        callback(ex)\n      })\n  }\n\n  _makeBatchRequest = (web3, callFrom, calls) => {\n    let batch = new web3.BatchRequest();\n\n    let promises = calls.map(call => {\n      return new Promise((res, rej) => {\n        let req = call.request({from: callFrom}, (err, data) => {\n          if(err) rej(err);\n          else res(data)\n        });\n        batch.add(req)\n      })\n    })\n    batch.execute()\n\n    return Promise.all(promises)\n  }\n  //\n  // _getMulticallWatcher = (web3, calls) => {\n  //\n  // }\n}\n\nexport default Store\n"]},"metadata":{},"sourceType":"module"}