{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pierremarieriviere/Code/solidly-master/components/snackbar/snackbarController.jsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Snackbar from \"./snackbar.jsx\";\nimport { ACTIONS } from '../../stores/constants';\nimport stores from \"../../stores\";\nconst emitter = stores.emitter;\n\nconst styles = theme => ({\n  root: {}\n});\n\nclass SnackbarController extends Component {\n  constructor(props) {\n    super();\n\n    _defineProperty(this, \"showError\", error => {\n      const snackbarObj = {\n        snackbarMessage: null,\n        snackbarType: null,\n        open: false\n      };\n      this.setState(snackbarObj);\n      const that = this;\n      setTimeout(() => {\n        const snackbarObj = {\n          snackbarMessage: error.toString(),\n          snackbarType: \"Error\",\n          open: true\n        };\n        that.setState(snackbarObj);\n      });\n    });\n\n    _defineProperty(this, \"showHash\", ({\n      txHash\n    }) => {\n      const snackbarObj = {\n        snackbarMessage: null,\n        snackbarType: null,\n        open: false\n      };\n      this.setState(snackbarObj);\n      const that = this;\n      setTimeout(() => {\n        const snackbarObj = {\n          snackbarMessage: txHash,\n          snackbarType: \"Hash\",\n          open: true\n        };\n        that.setState(snackbarObj);\n      });\n    });\n\n    this.state = {\n      open: false,\n      snackbarType: null,\n      snackbarMessage: null\n    };\n  }\n\n  componentWillMount() {\n    emitter.on(ACTIONS.ERROR, this.showError); // emitter.on(ACTIONS.TX_SUBMITTED, this.showHash);\n  }\n\n  componentWillUnmount() {\n    emitter.removeListener(ACTIONS.ERROR, this.showError); // emitter.removeListener(ACTIONS.TX_SUBMITTED, this.showHash);\n  }\n\n  render() {\n    const {\n      snackbarType,\n      snackbarMessage,\n      open\n    } = this.state;\n\n    if (open) {\n      return /*#__PURE__*/_jsxDEV(Snackbar, {\n        type: snackbarType,\n        message: snackbarMessage,\n        open: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 14\n      }, this);\n    }\n  }\n\n}\n\nexport default withStyles(styles)(SnackbarController);","map":{"version":3,"sources":["/Users/pierremarieriviere/Code/solidly-master/components/snackbar/snackbarController.jsx"],"names":["React","Component","withStyles","Snackbar","ACTIONS","stores","emitter","styles","theme","root","SnackbarController","constructor","props","error","snackbarObj","snackbarMessage","snackbarType","open","setState","that","setTimeout","toString","txHash","state","componentWillMount","on","ERROR","showError","componentWillUnmount","removeListener","render"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,OAAOC,QAAP,MAAqB,gBAArB;AAEA,SAASC,OAAT,QAAwB,wBAAxB;AAEA,OAAOC,MAAP,MAAmB,cAAnB;AACA,MAAMC,OAAO,GAAGD,MAAM,CAACC,OAAvB;;AAEA,MAAMC,MAAM,GAAGC,KAAK,KAAK;AACvBC,EAAAA,IAAI,EAAE;AADiB,CAAL,CAApB;;AAIA,MAAMC,kBAAN,SAAiCT,SAAjC,CAA2C;AACzCU,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB;;AADiB,uCAoBPC,KAAK,IAAI;AACnB,YAAMC,WAAW,GAAG;AAClBC,QAAAA,eAAe,EAAE,IADC;AAElBC,QAAAA,YAAY,EAAE,IAFI;AAGlBC,QAAAA,IAAI,EAAE;AAHY,OAApB;AAKA,WAAKC,QAAL,CAAcJ,WAAd;AAEA,YAAMK,IAAI,GAAG,IAAb;AACAC,MAAAA,UAAU,CAAC,MAAM;AACf,cAAMN,WAAW,GAAG;AAClBC,UAAAA,eAAe,EAAEF,KAAK,CAACQ,QAAN,EADC;AAElBL,UAAAA,YAAY,EAAE,OAFI;AAGlBC,UAAAA,IAAI,EAAE;AAHY,SAApB;AAKAE,QAAAA,IAAI,CAACD,QAAL,CAAcJ,WAAd;AACD,OAPS,CAAV;AAQD,KArCkB;;AAAA,sCAuCR,CAAC;AAAEQ,MAAAA;AAAF,KAAD,KAAgB;AACzB,YAAMR,WAAW,GAAG;AAClBC,QAAAA,eAAe,EAAE,IADC;AAElBC,QAAAA,YAAY,EAAE,IAFI;AAGlBC,QAAAA,IAAI,EAAE;AAHY,OAApB;AAKA,WAAKC,QAAL,CAAcJ,WAAd;AAEA,YAAMK,IAAI,GAAG,IAAb;AACAC,MAAAA,UAAU,CAAC,MAAM;AACf,cAAMN,WAAW,GAAG;AAClBC,UAAAA,eAAe,EAAEO,MADC;AAElBN,UAAAA,YAAY,EAAE,MAFI;AAGlBC,UAAAA,IAAI,EAAE;AAHY,SAApB;AAKAE,QAAAA,IAAI,CAACD,QAAL,CAAcJ,WAAd;AACD,OAPS,CAAV;AAQD,KAxDkB;;AAGjB,SAAKS,KAAL,GAAa;AACXN,MAAAA,IAAI,EAAE,KADK;AAEXD,MAAAA,YAAY,EAAE,IAFH;AAGXD,MAAAA,eAAe,EAAE;AAHN,KAAb;AAKD;;AAEDS,EAAAA,kBAAkB,GAAG;AACnBlB,IAAAA,OAAO,CAACmB,EAAR,CAAWrB,OAAO,CAACsB,KAAnB,EAA0B,KAAKC,SAA/B,EADmB,CAEnB;AACD;;AAEDC,EAAAA,oBAAoB,GAAG;AACrBtB,IAAAA,OAAO,CAACuB,cAAR,CAAuBzB,OAAO,CAACsB,KAA/B,EAAsC,KAAKC,SAA3C,EADqB,CAErB;AACD;;AAwCDG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEd,MAAAA,YAAF;AAAgBD,MAAAA,eAAhB;AAAiCE,MAAAA;AAAjC,QAA0C,KAAKM,KAArD;;AAEA,QAAIN,IAAJ,EAAU;AACR,0BACE,QAAC,QAAD;AAAU,QAAA,IAAI,EAAED,YAAhB;AAA8B,QAAA,OAAO,EAAED,eAAvC;AAAwD,QAAA,IAAI,EAAE;AAA9D;AAAA;AAAA;AAAA;AAAA,cADF;AAGD,KAJD,MAIO;AACL,0BAAO;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AACF;;AArEwC;;AAwE3C,eAAeb,UAAU,CAACK,MAAD,CAAV,CAAmBG,kBAAnB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport Snackbar from \"./snackbar.jsx\";\n\nimport { ACTIONS } from '../../stores/constants';\n\nimport stores from \"../../stores\";\nconst emitter = stores.emitter;\n\nconst styles = theme => ({\n  root: {}\n});\n\nclass SnackbarController extends Component {\n  constructor(props) {\n    super();\n\n    this.state = {\n      open: false,\n      snackbarType: null,\n      snackbarMessage: null\n    };\n  }\n\n  componentWillMount() {\n    emitter.on(ACTIONS.ERROR, this.showError);\n    // emitter.on(ACTIONS.TX_SUBMITTED, this.showHash);\n  }\n\n  componentWillUnmount() {\n    emitter.removeListener(ACTIONS.ERROR, this.showError);\n    // emitter.removeListener(ACTIONS.TX_SUBMITTED, this.showHash);\n  }\n\n  showError = error => {\n    const snackbarObj = {\n      snackbarMessage: null,\n      snackbarType: null,\n      open: false\n    };\n    this.setState(snackbarObj);\n\n    const that = this;\n    setTimeout(() => {\n      const snackbarObj = {\n        snackbarMessage: error.toString(),\n        snackbarType: \"Error\",\n        open: true\n      };\n      that.setState(snackbarObj);\n    });\n  };\n\n  showHash = ({ txHash }) => {\n    const snackbarObj = {\n      snackbarMessage: null,\n      snackbarType: null,\n      open: false\n    };\n    this.setState(snackbarObj);\n\n    const that = this;\n    setTimeout(() => {\n      const snackbarObj = {\n        snackbarMessage: txHash,\n        snackbarType: \"Hash\",\n        open: true\n      };\n      that.setState(snackbarObj);\n    });\n  };\n\n  render() {\n    const { snackbarType, snackbarMessage, open } = this.state;\n\n    if (open) {\n      return (\n        <Snackbar type={snackbarType} message={snackbarMessage} open={true} />\n      );\n    } else {\n      return <div></div>;\n    }\n  }\n}\n\nexport default withStyles(styles)(SnackbarController);\n"]},"metadata":{},"sourceType":"module"}