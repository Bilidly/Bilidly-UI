{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pierremarieriviere/Code/solidly-master/components/ssLiquidityPairs/ssLiquidityPairs.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport classes from './ssLiquidityPairs.module.css';\nimport PairsTable from './ssLiquidityPairsTable.js';\nimport stores from '../../stores';\nimport { ACTIONS } from '../../stores/constants';\nexport default function ssLiquidityPairs() {\n  _s();\n\n  var _useState = useState(),\n      updateState = _useState[1];\n\n  var forceUpdate = useCallback(function () {\n    return updateState({});\n  }, []);\n\n  var _useState2 = useState([]),\n      pairs = _useState2[0],\n      setPairs = _useState2[1];\n\n  var _useState3 = useState(false),\n      pairBalancesLoading = _useState3[0],\n      setPairBalancesLoading = _useState3[1];\n\n  useEffect(function () {\n    var stableSwapUpdated = function stableSwapUpdated() {\n      setPairs(stores.stableSwapStore.getStore('pairs'));\n      forceUpdate();\n    };\n\n    setPairs(stores.stableSwapStore.getStore('pairs'));\n    stores.emitter.on(ACTIONS.UPDATED, stableSwapUpdated);\n    return function () {\n      stores.emitter.removeListener(ACTIONS.UPDATED, stableSwapUpdated);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: /*#__PURE__*/_jsxDEV(PairsTable, {\n      pairs: pairs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ssLiquidityPairs, \"+HVgfziwmGorH5tjd0qFvJ56AVA=\");","map":{"version":3,"sources":["/Users/pierremarieriviere/Code/solidly-master/components/ssLiquidityPairs/ssLiquidityPairs.js"],"names":["React","useState","useEffect","useCallback","classes","PairsTable","stores","ACTIONS","ssLiquidityPairs","updateState","forceUpdate","pairs","setPairs","pairBalancesLoading","setPairBalancesLoading","stableSwapUpdated","stableSwapStore","getStore","emitter","on","UPDATED","removeListener","container"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AAEA,OAAOC,OAAP,MAAoB,+BAApB;AAEA,OAAOC,UAAP,MAAuB,4BAAvB;AAEA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,OAAT,QAAwB,wBAAxB;AAEA,eAAe,SAASC,gBAAT,GAA4B;AAAA;;AAAA,kBAEjBP,QAAQ,EAFS;AAAA,MAEhCQ,WAFgC;;AAGzC,MAAMC,WAAW,GAAGP,WAAW,CAAC;AAAA,WAAMM,WAAW,CAAC,EAAD,CAAjB;AAAA,GAAD,EAAwB,EAAxB,CAA/B;;AAHyC,mBAKfR,QAAQ,CAAC,EAAD,CALO;AAAA,MAKlCU,KALkC;AAAA,MAK3BC,QAL2B;;AAAA,mBAMaX,QAAQ,CAAC,KAAD,CANrB;AAAA,MAMlCY,mBANkC;AAAA,MAMbC,sBANa;;AAQzCZ,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMa,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC9BH,MAAAA,QAAQ,CAACN,MAAM,CAACU,eAAP,CAAuBC,QAAvB,CAAgC,OAAhC,CAAD,CAAR;AACAP,MAAAA,WAAW;AACZ,KAHD;;AAKAE,IAAAA,QAAQ,CAACN,MAAM,CAACU,eAAP,CAAuBC,QAAvB,CAAgC,OAAhC,CAAD,CAAR;AAEAX,IAAAA,MAAM,CAACY,OAAP,CAAeC,EAAf,CAAkBZ,OAAO,CAACa,OAA1B,EAAmCL,iBAAnC;AACA,WAAO,YAAM;AACXT,MAAAA,MAAM,CAACY,OAAP,CAAeG,cAAf,CAA8Bd,OAAO,CAACa,OAAtC,EAA+CL,iBAA/C;AACD,KAFD;AAGD,GAZQ,EAYN,EAZM,CAAT;AAcA,sBACE;AAAK,IAAA,SAAS,EAAGX,OAAO,CAACkB,SAAzB;AAAA,2BACE,QAAC,UAAD;AAAY,MAAA,KAAK,EAAEX;AAAnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GA3BuBH,gB","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\n\nimport classes from './ssLiquidityPairs.module.css';\n\nimport PairsTable from './ssLiquidityPairsTable.js'\n\nimport stores from '../../stores'\nimport { ACTIONS } from '../../stores/constants';\n\nexport default function ssLiquidityPairs() {\n\n  const [, updateState] = useState();\n  const forceUpdate = useCallback(() => updateState({}), []);\n\n  const [pairs, setPairs] = useState([])\n  const [pairBalancesLoading, setPairBalancesLoading] = useState(false)\n\n  useEffect(() => {\n    const stableSwapUpdated = () => {\n      setPairs(stores.stableSwapStore.getStore('pairs'))\n      forceUpdate()\n    }\n\n    setPairs(stores.stableSwapStore.getStore('pairs'))\n\n    stores.emitter.on(ACTIONS.UPDATED, stableSwapUpdated);\n    return () => {\n      stores.emitter.removeListener(ACTIONS.UPDATED, stableSwapUpdated);\n    };\n  }, []);\n\n  return (\n    <div className={ classes.container}>\n      <PairsTable pairs={pairs} />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}