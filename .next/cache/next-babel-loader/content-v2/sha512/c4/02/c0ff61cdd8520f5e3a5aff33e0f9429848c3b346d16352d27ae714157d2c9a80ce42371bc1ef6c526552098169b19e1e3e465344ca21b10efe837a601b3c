{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"/Users/pierremarieriviere/Code/solidly-master/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/pierremarieriviere/Code/solidly-master/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pierremarieriviere/Code/solidly-master/components/transactionQueue/transactionQueue.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Typography, Button, CircularProgress, DialogContent, Dialog, Slide, IconButton } from \"@material-ui/core\";\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Lottie from \"lottie-react\";\nimport successAnim from \"../../public/lottiefiles/successAnim.json\";\nimport swapSuccessAnim from \"../../public/lottiefiles/swapSuccess.json\";\nimport lockSuccessAnim from \"../../public/lottiefiles/lockSuccess.json\";\nimport pairSuccessAnim from \"../../public/lottiefiles/pairSuccess.json\";\nimport Transaction from './transaction';\n\nfunction Transition(props) {\n  return /*#__PURE__*/_jsxDEV(Slide, _objectSpread({\n    direction: \"up\"\n  }, props), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 10\n  }, this);\n}\n\n_c = Transition;\nimport classes from './transactionQueue.module.css';\nimport stores from '../../stores';\nimport { ACTIONS, ETHERSCAN_URL } from '../../stores/constants';\nexport default function TransactionQueue(_ref) {\n  _s();\n\n  var _this = this;\n\n  var setQueueLength = _ref.setQueueLength;\n\n  var _useState = useState(false),\n      open = _useState[0],\n      setOpen = _useState[1];\n\n  var _useState2 = useState([]),\n      transactions = _useState2[0],\n      setTransactions = _useState2[1];\n\n  var _useState3 = useState(null),\n      purpose = _useState3[0],\n      setPurpose = _useState3[1];\n\n  var _useState4 = useState(null),\n      type = _useState4[0],\n      setType = _useState4[1];\n\n  var _useState5 = useState(null),\n      action = _useState5[0],\n      setAction = _useState5[1];\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  };\n\n  var fullScreen = window.innerWidth < 576;\n  useEffect(function () {\n    var clearTransactions = function clearTransactions() {\n      setTransactions([]);\n      setQueueLength(0);\n    };\n\n    var openQueue = function openQueue() {\n      setOpen(true);\n    };\n\n    var transactionAdded = function transactionAdded(params) {\n      setPurpose(params.title);\n      setType(params.type);\n      setAction(params.verb);\n      setOpen(true);\n\n      var txs = _toConsumableArray(params.transactions);\n\n      setTransactions(txs);\n      setQueueLength(params.transactions.length);\n    };\n\n    var transactionPending = function transactionPending(params) {\n      var txs = transactions.map(function (tx) {\n        if (tx.uuid === params.uuid) {\n          tx.status = 'PENDING';\n          tx.description = params.description ? params.description : tx.description;\n        }\n\n        return tx;\n      });\n      setTransactions(txs);\n    };\n\n    var transactionSubmitted = function transactionSubmitted(params) {\n      var txs = transactions.map(function (tx) {\n        if (tx.uuid === params.uuid) {\n          tx.status = 'SUBMITTED';\n          tx.txHash = params.txHash;\n          tx.description = params.description ? params.description : tx.description;\n        }\n\n        return tx;\n      });\n      setTransactions(txs);\n    };\n\n    var transactionConfirmed = function transactionConfirmed(params) {\n      var txs = transactions.map(function (tx) {\n        if (tx.uuid === params.uuid) {\n          tx.status = 'CONFIRMED';\n          tx.txHash = params.txHash;\n          tx.description = params.description ? params.description : tx.description;\n        }\n\n        return tx;\n      });\n      setTransactions(txs);\n    };\n\n    var transactionRejected = function transactionRejected(params) {\n      var txs = transactions.map(function (tx) {\n        if (tx.uuid === params.uuid) {\n          tx.status = 'REJECTED';\n          tx.description = params.description ? params.description : tx.description;\n          tx.error = params.error;\n        }\n\n        return tx;\n      });\n      setTransactions(txs);\n    };\n\n    var transactionStatus = function transactionStatus(params) {\n      var txs = transactions.map(function (tx) {\n        if (tx.uuid === params.uuid) {\n          tx.status = params.status ? params.status : tx.status;\n          tx.description = params.description ? params.description : tx.description;\n        }\n\n        return tx;\n      });\n      setTransactions(txs);\n    };\n\n    stores.emitter.on(ACTIONS.CLEAR_TRANSACTION_QUEUE, clearTransactions);\n    stores.emitter.on(ACTIONS.TX_ADDED, transactionAdded);\n    stores.emitter.on(ACTIONS.TX_PENDING, transactionPending);\n    stores.emitter.on(ACTIONS.TX_SUBMITTED, transactionSubmitted);\n    stores.emitter.on(ACTIONS.TX_CONFIRMED, transactionConfirmed);\n    stores.emitter.on(ACTIONS.TX_REJECTED, transactionRejected);\n    stores.emitter.on(ACTIONS.TX_STATUS, transactionStatus);\n    stores.emitter.on(ACTIONS.TX_OPEN, openQueue);\n    return function () {\n      stores.emitter.removeListener(ACTIONS.CLEAR_TRANSACTION_QUEUE, clearTransactions);\n      stores.emitter.removeListener(ACTIONS.TX_ADDED, transactionAdded);\n      stores.emitter.removeListener(ACTIONS.TX_PENDING, transactionPending);\n      stores.emitter.removeListener(ACTIONS.TX_SUBMITTED, transactionSubmitted);\n      stores.emitter.removeListener(ACTIONS.TX_CONFIRMED, transactionConfirmed);\n      stores.emitter.removeListener(ACTIONS.TX_REJECTED, transactionRejected);\n      stores.emitter.removeListener(ACTIONS.TX_STATUS, transactionStatus);\n      stores.emitter.removeListener(ACTIONS.TX_OPEN, openQueue);\n    };\n  }, [transactions]);\n\n  var renderDone = function renderDone(txs) {\n    if (!(transactions && transactions.filter(function (tx) {\n      return ['DONE', 'CONFIRMED'].includes(tx.status);\n    }).length === transactions.length)) {\n      return null;\n    }\n\n    var lottie = /*#__PURE__*/_jsxDEV(Lottie, {\n      loop: false,\n      className: classes.animClass,\n      animationData: successAnim\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 18\n    }, _this);\n\n    if (type === 'Liquidity') {\n      lottie = /*#__PURE__*/_jsxDEV(Lottie, {\n        loop: false,\n        className: classes.animClass,\n        animationData: pairSuccessAnim\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 16\n      }, _this);\n    } else if (type === 'Swap') {\n      lottie = /*#__PURE__*/_jsxDEV(Lottie, {\n        loop: false,\n        className: classes.animClass,\n        animationData: swapSuccessAnim\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 16\n      }, _this);\n    } else if (type === 'Vest') {\n      lottie = /*#__PURE__*/_jsxDEV(Lottie, {\n        loop: false,\n        className: classes.animClass,\n        animationData: lockSuccessAnim\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 16\n      }, _this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.successDialog,\n      children: [lottie, /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.successTitle,\n        children: action ? action : 'Transaction Successful!'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.successText,\n        children: \"Transaction has been confirmed by the blockchain.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, _this), txs && txs.length > 0 && txs.filter(function (tx) {\n        return tx.txHash != null;\n      }).map(function (tx, idx) {\n        return /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.viewDetailsText,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"\".concat(ETHERSCAN_URL, \"tx/\").concat(tx === null || tx === void 0 ? void 0 : tx.txHash),\n            target: \"_blank\",\n            children: [tx && tx.description ? tx.description : 'View in Explorer', \" \", /*#__PURE__*/_jsxDEV(OpenInNewIcon, {\n              className: classes.newWindowIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 139\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, _this)\n        }, \"tx_key_\".concat(idx), false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, _this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, _this);\n  };\n\n  var renderTransactions = function renderTransactions(transactions) {\n    if (transactions && transactions.filter(function (tx) {\n      return ['DONE', 'CONFIRMED'].includes(tx.status);\n    }).length === transactions.length) {\n      return null;\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.headingContainer,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.heading,\n          children: purpose ? purpose : 'Pending Transactions'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.transactionsContainer,\n        children: transactions && transactions.map(function (tx, idx) {\n          return /*#__PURE__*/_jsxDEV(Transaction, {\n            transaction: tx\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 22\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    className: classes.dialogScale,\n    open: open,\n    onClose: handleClose,\n    fullWidth: true,\n    maxWidth: \"sm\",\n    TransitionComponent: Transition,\n    fullScreen: fullScreen,\n    children: /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        className: classes.closeIconbutton,\n        onClick: handleClose,\n        children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), renderTransactions(transactions), renderDone(transactions)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TransactionQueue, \"EtKcvQOexohx3GMnPH3wmRtpCys=\");\n\n_c2 = TransactionQueue;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Transition\");\n$RefreshReg$(_c2, \"TransactionQueue\");","map":{"version":3,"sources":["/Users/pierremarieriviere/Code/solidly-master/components/transactionQueue/transactionQueue.js"],"names":["React","useState","useEffect","useRef","Typography","Button","CircularProgress","DialogContent","Dialog","Slide","IconButton","OpenInNewIcon","CloseIcon","Lottie","successAnim","swapSuccessAnim","lockSuccessAnim","pairSuccessAnim","Transaction","Transition","props","classes","stores","ACTIONS","ETHERSCAN_URL","TransactionQueue","setQueueLength","open","setOpen","transactions","setTransactions","purpose","setPurpose","type","setType","action","setAction","handleClose","fullScreen","window","innerWidth","clearTransactions","openQueue","transactionAdded","params","title","verb","txs","length","transactionPending","map","tx","uuid","status","description","transactionSubmitted","txHash","transactionConfirmed","transactionRejected","error","transactionStatus","emitter","on","CLEAR_TRANSACTION_QUEUE","TX_ADDED","TX_PENDING","TX_SUBMITTED","TX_CONFIRMED","TX_REJECTED","TX_STATUS","TX_OPEN","removeListener","renderDone","filter","includes","lottie","animClass","successDialog","successTitle","successText","idx","viewDetailsText","newWindowIcon","renderTransactions","headingContainer","heading","transactionsContainer","dialogScale","closeIconbutton"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { Typography, Button, CircularProgress, DialogContent, Dialog, Slide, IconButton } from \"@material-ui/core\";\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport Lottie from \"lottie-react\";\nimport successAnim from \"../../public/lottiefiles/successAnim.json\";\nimport swapSuccessAnim from \"../../public/lottiefiles/swapSuccess.json\";\nimport lockSuccessAnim from \"../../public/lottiefiles/lockSuccess.json\";\nimport pairSuccessAnim from \"../../public/lottiefiles/pairSuccess.json\";\n\nimport Transaction from './transaction'\n\nfunction Transition(props) {\n  return <Slide direction=\"up\" {...props} />;\n}\n\nimport classes from './transactionQueue.module.css';\nimport stores from '../../stores'\nimport { ACTIONS, ETHERSCAN_URL } from '../../stores/constants';\n\nexport default function TransactionQueue({ setQueueLength }) {\n\n  const [open, setOpen] = useState(false)\n  const [ transactions, setTransactions ] = useState([])\n  const [ purpose, setPurpose ] = useState(null)\n  const [ type, setType ] = useState(null)\n  const [ action, setAction ] = useState(null)\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const fullScreen = window.innerWidth < 576;\n\n  useEffect(() => {\n    const clearTransactions = () => {\n      setTransactions([])\n      setQueueLength(0)\n    }\n\n    const openQueue = () => {\n      setOpen(true)\n    }\n\n    const transactionAdded = (params) => {\n      setPurpose(params.title)\n      setType(params.type)\n      setAction(params.verb)\n      setOpen(true)\n      const txs = [...params.transactions]\n      setTransactions(txs)\n\n      setQueueLength(params.transactions.length)\n    }\n\n    const transactionPending = (params) => {\n      let txs = transactions.map((tx) => {\n        if(tx.uuid === params.uuid) {\n          tx.status = 'PENDING'\n          tx.description = params.description ? params.description : tx.description\n        }\n        return tx\n      })\n      setTransactions(txs)\n    }\n\n    const transactionSubmitted = (params) => {\n      let txs = transactions.map((tx) => {\n        if(tx.uuid === params.uuid) {\n          tx.status = 'SUBMITTED'\n          tx.txHash = params.txHash\n          tx.description = params.description ? params.description : tx.description\n        }\n        return tx\n      })\n      setTransactions(txs)\n    }\n\n    const transactionConfirmed = (params) => {\n      let txs = transactions.map((tx) => {\n        if(tx.uuid === params.uuid) {\n          tx.status = 'CONFIRMED'\n          tx.txHash = params.txHash\n          tx.description = params.description ? params.description : tx.description\n        }\n        return tx\n      })\n      setTransactions(txs)\n    }\n\n    const transactionRejected = (params) => {\n      let txs = transactions.map((tx) => {\n        if(tx.uuid === params.uuid) {\n          tx.status = 'REJECTED'\n          tx.description = params.description ? params.description : tx.description\n          tx.error = params.error\n        }\n        return tx\n      })\n      setTransactions(txs)\n    }\n\n    const transactionStatus = (params) => {\n      let txs = transactions.map((tx) => {\n        if(tx.uuid === params.uuid) {\n          tx.status = params.status ? params.status : tx.status\n          tx.description = params.description ? params.description : tx.description\n        }\n        return tx\n      })\n      setTransactions(txs)\n    }\n\n    stores.emitter.on(ACTIONS.CLEAR_TRANSACTION_QUEUE, clearTransactions)\n    stores.emitter.on(ACTIONS.TX_ADDED, transactionAdded)\n    stores.emitter.on(ACTIONS.TX_PENDING, transactionPending)\n    stores.emitter.on(ACTIONS.TX_SUBMITTED, transactionSubmitted)\n    stores.emitter.on(ACTIONS.TX_CONFIRMED, transactionConfirmed)\n    stores.emitter.on(ACTIONS.TX_REJECTED, transactionRejected)\n    stores.emitter.on(ACTIONS.TX_STATUS, transactionStatus)\n    stores.emitter.on(ACTIONS.TX_OPEN, openQueue)\n\n    return () => {\n      stores.emitter.removeListener(ACTIONS.CLEAR_TRANSACTION_QUEUE, clearTransactions)\n      stores.emitter.removeListener(ACTIONS.TX_ADDED, transactionAdded)\n      stores.emitter.removeListener(ACTIONS.TX_PENDING, transactionPending)\n      stores.emitter.removeListener(ACTIONS.TX_SUBMITTED, transactionSubmitted)\n      stores.emitter.removeListener(ACTIONS.TX_CONFIRMED, transactionConfirmed)\n      stores.emitter.removeListener(ACTIONS.TX_REJECTED, transactionRejected)\n      stores.emitter.removeListener(ACTIONS.TX_STATUS, transactionStatus)\n      stores.emitter.removeListener(ACTIONS.TX_OPEN, openQueue)\n    };\n  }, [transactions]);\n\n  const renderDone = (txs) => {\n    if(!(transactions && transactions.filter((tx) => { return ['DONE', 'CONFIRMED'].includes(tx.status) }).length === transactions.length)) {\n      return null\n    }\n\n    let lottie = <Lottie loop={false} className={classes.animClass} animationData={successAnim} />\n    if(type === 'Liquidity') {\n      lottie = <Lottie loop={false} className={classes.animClass} animationData={pairSuccessAnim} />\n    } else if (type === 'Swap') {\n      lottie = <Lottie loop={false} className={classes.animClass} animationData={swapSuccessAnim} />\n    } else if (type === 'Vest') {\n      lottie = <Lottie loop={false} className={classes.animClass} animationData={lockSuccessAnim} />\n    }\n\n    return (\n      <div className={classes.successDialog}>\n        { lottie }\n        <Typography className={ classes.successTitle }>{ action ? action : 'Transaction Successful!' }</Typography>\n        <Typography className={ classes.successText }>Transaction has been confirmed by the blockchain.</Typography>\n        {\n          txs && txs.length > 0 && txs.filter((tx) => {\n            return tx.txHash != null\n          }).map((tx, idx) => {\n            return (<Typography className={ classes.viewDetailsText } key={`tx_key_${idx}`}>\n              <a href={`${ETHERSCAN_URL}tx/${tx?.txHash}`} target=\"_blank\">{ tx && tx.description ? tx.description : 'View in Explorer' } <OpenInNewIcon className={classes.newWindowIcon} /></a>\n            </Typography>)\n          })\n        }\n      </div>\n    )\n  }\n\n  const renderTransactions = (transactions) => {\n    if((transactions && transactions.filter((tx) => { return ['DONE', 'CONFIRMED'].includes(tx.status) }).length === transactions.length)) {\n      return null\n    }\n\n    return (\n      <>\n        <div className={ classes.headingContainer }>\n          <Typography className={ classes.heading }>{ purpose ? purpose : 'Pending Transactions'}</Typography>\n        </div>\n        <div className={ classes.transactionsContainer}>\n          {\n            transactions && transactions.map((tx, idx) => {\n              return <Transaction transaction={tx} />\n            })\n          }\n        </div>\n      </>\n    )\n  }\n\n  return (\n    <Dialog\n      className={classes.dialogScale}\n      open={open}\n      onClose={handleClose}\n      fullWidth={true}\n      maxWidth={\"sm\"}\n      TransitionComponent={Transition}\n      fullScreen={fullScreen}\n    >\n      <DialogContent>\n        <IconButton className={ classes.closeIconbutton }\n          onClick={handleClose}>\n          <CloseIcon />\n        </IconButton>\n        { renderTransactions(transactions) }\n        { renderDone(transactions) }\n      </DialogContent>\n    </Dialog>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}