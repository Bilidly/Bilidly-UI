{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pierremarieriviere/Code/solidly-master/components/ssRewards/ssRewards.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Button, Typography, Tooltip, IconButton, TextField, InputAdornment, Popper, Fade, Grid, Switch, Select, MenuItem } from '@material-ui/core';\nimport classes from './ssRewards.module.css';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport SearchIcon from '@material-ui/icons/Search';\nimport RewardsTable from './ssRewardsTable.js';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport { formatCurrency } from '../../utils';\nimport stores from '../../stores';\nimport { ACTIONS } from '../../stores/constants';\nexport default function ssRewards() {\n  const {\n    1: updateState\n  } = useState();\n  const forceUpdate = useCallback(() => updateState({}), []);\n  const {\n    0: rewards,\n    1: setRewards\n  } = useState([]);\n  const {\n    0: vestNFTs,\n    1: setVestNFTs\n  } = useState([]);\n  const {\n    0: search,\n    1: setSearch\n  } = useState('');\n  const {\n    0: anchorEl,\n    1: setAnchorEl\n  } = useState(null);\n  const {\n    0: token,\n    1: setToken\n  } = useState(null);\n  const {\n    0: veToken,\n    1: setVeToken\n  } = useState(null);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n\n  const stableSwapUpdated = rew => {\n    const nfts = stores.stableSwapStore.getStore('vestNFTs');\n    setVestNFTs(nfts);\n    setVeToken(stores.stableSwapStore.getStore('veToken'));\n\n    if (nfts && nfts.length > 0) {\n      if (!token) {\n        setToken(nfts[0]);\n        window.setTimeout(() => {\n          stores.dispatcher.dispatch({\n            type: ACTIONS.GET_REWARD_BALANCES,\n            content: {\n              tokenID: nfts[0].id\n            }\n          });\n        });\n      } else {\n        window.setTimeout(() => {\n          stores.dispatcher.dispatch({\n            type: ACTIONS.GET_REWARD_BALANCES,\n            content: {\n              tokenID: token.id\n            }\n          });\n        });\n      }\n    } else {\n      window.setTimeout(() => {\n        stores.dispatcher.dispatch({\n          type: ACTIONS.GET_REWARD_BALANCES,\n          content: {\n            tokenID: 0\n          }\n        });\n      });\n    }\n\n    forceUpdate();\n  };\n\n  const rewardBalancesReturned = rew => {\n    if (rew) {\n      if (rew && rew.bribes && rew.fees && rew.bribes.length >= 0 && rew.fees.length >= 0 && rew.rewards.length >= 0) {\n        setRewards([...rew.bribes, ...rew.fees, ...rew.rewards]);\n      }\n    } else {\n      let re = stores.stableSwapStore.getStore('rewards');\n\n      if (re && re.bribes && re.fees && re.bribes.length >= 0 && re.fees.length >= 0 && re.rewards.length >= 0) {\n        setRewards([...re.bribes, ...re.fees, ...re.rewards]);\n      }\n    }\n  };\n\n  useEffect(() => {\n    rewardBalancesReturned();\n    stableSwapUpdated();\n    stores.emitter.on(ACTIONS.UPDATED, stableSwapUpdated);\n    stores.emitter.on(ACTIONS.REWARD_BALANCES_RETURNED, rewardBalancesReturned);\n    return () => {\n      stores.emitter.removeListener(ACTIONS.UPDATED, stableSwapUpdated);\n      stores.emitter.removeListener(ACTIONS.REWARD_BALANCES_RETURNED, rewardBalancesReturned);\n    };\n  }, [token]);\n  useEffect(() => {\n    const claimReturned = () => {\n      setLoading(false);\n    };\n\n    const claimAllReturned = () => {\n      setLoading(false);\n    };\n\n    stableSwapUpdated();\n    stores.emitter.on(ACTIONS.CLAIM_BRIBE_RETURNED, claimReturned);\n    stores.emitter.on(ACTIONS.CLAIM_REWARD_RETURNED, claimReturned);\n    stores.emitter.on(ACTIONS.CLAIM_PAIR_FEES_RETURNED, claimReturned);\n    stores.emitter.on(ACTIONS.CLAIM_ALL_REWARDS_RETURNED, claimAllReturned);\n    return () => {\n      stores.emitter.removeListener(ACTIONS.CLAIM_BRIBE_RETURNED, claimReturned);\n      stores.emitter.removeListener(ACTIONS.CLAIM_REWARD_RETURNED, claimReturned);\n      stores.emitter.removeListener(ACTIONS.CLAIM_PAIR_FEES_RETURNED, claimReturned);\n      stores.emitter.removeListener(ACTIONS.CLAIM_ALL_REWARDS_RETURNED, claimAllReturned);\n    };\n  }, []);\n\n  const onSearchChanged = event => {\n    setSearch(event.target.value);\n  };\n\n  const onClaimAll = () => {\n    setLoading(true);\n    let sendTokenID = 0;\n\n    if (token && token.id) {\n      sendTokenID = token.id;\n    }\n\n    stores.dispatcher.dispatch({\n      type: ACTIONS.CLAIM_ALL_REWARDS,\n      content: {\n        pairs: rewards,\n        tokenID: sendTokenID\n      }\n    });\n  };\n\n  const handleClick = event => {\n    setAnchorEl(anchorEl ? null : event.currentTarget);\n  };\n\n  const handleChange = event => {\n    setToken(event.target.value);\n    stores.dispatcher.dispatch({\n      type: ACTIONS.GET_REWARD_BALANCES,\n      content: {\n        tokenID: event.target.value.id\n      }\n    });\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'transitions-popper' : undefined;\n\n  const renderMediumInput = (value, options) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.textField,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.mediumInputContainer,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            lg: \"auto\",\n            md: \"auto\",\n            sm: 12,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              className: classes.helpText,\n              children: \"Please select your veNFT:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            lg: 6,\n            md: 6,\n            sm: 12,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.mediumInputAmount,\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                fullWidth: true,\n                value: value,\n                onChange: handleChange,\n                InputProps: {\n                  className: classes.mediumInput\n                },\n                children: options && options.map(option => {\n                  return /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: option,\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: classes.menuOption,\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        children: [\"Token #\", option.id]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 161,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(Typography, {\n                          align: \"right\",\n                          className: classes.smallerText,\n                          children: formatCurrency(option.lockValue)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 163,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                          color: \"textSecondary\",\n                          className: classes.smallerText,\n                          children: veToken === null || veToken === void 0 ? void 0 : veToken.symbol\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 164,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 162,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 160,\n                      columnNumber: 23\n                    }, this)\n                  }, option.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 21\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.toolbarContainer,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 1,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          lg: \"auto\",\n          md: \"auto\",\n          sm: 12,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.tokenIDContainer,\n            children: renderMediumInput(token, vestNFTs)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          lg: true,\n          md: true,\n          sm: false,\n          xs: false,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.disclaimerContainer,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.disclaimer,\n              children: \"Rewards are an estimation that aren't exact till the supply -> rewardPerToken calculations have run\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          lg: \"auto\",\n          md: \"auto\",\n          sm: \"12\",\n          xs: \"12\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"secondary\",\n            startIcon: /*#__PURE__*/_jsxDEV(AddCircleOutlineIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 26\n            }, this),\n            size: \"large\",\n            className: classes.buttonOverride,\n            color: \"primary\",\n            onClick: onClaimAll,\n            disabled: loading,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.actionButtonText,\n              children: \"Claim All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RewardsTable, {\n      rewards: rewards,\n      vestNFTs: vestNFTs,\n      tokenID: token === null || token === void 0 ? void 0 : token.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/pierremarieriviere/Code/solidly-master/components/ssRewards/ssRewards.js"],"names":["React","useState","useEffect","useCallback","Button","Typography","Tooltip","IconButton","TextField","InputAdornment","Popper","Fade","Grid","Switch","Select","MenuItem","classes","FilterListIcon","SearchIcon","RewardsTable","AddCircleOutlineIcon","formatCurrency","stores","ACTIONS","ssRewards","updateState","forceUpdate","rewards","setRewards","vestNFTs","setVestNFTs","search","setSearch","anchorEl","setAnchorEl","token","setToken","veToken","setVeToken","loading","setLoading","stableSwapUpdated","rew","nfts","stableSwapStore","getStore","length","window","setTimeout","dispatcher","dispatch","type","GET_REWARD_BALANCES","content","tokenID","id","rewardBalancesReturned","bribes","fees","re","emitter","on","UPDATED","REWARD_BALANCES_RETURNED","removeListener","claimReturned","claimAllReturned","CLAIM_BRIBE_RETURNED","CLAIM_REWARD_RETURNED","CLAIM_PAIR_FEES_RETURNED","CLAIM_ALL_REWARDS_RETURNED","onSearchChanged","event","target","value","onClaimAll","sendTokenID","CLAIM_ALL_REWARDS","pairs","handleClick","currentTarget","handleChange","open","Boolean","undefined","renderMediumInput","options","textField","mediumInputContainer","helpText","mediumInputAmount","className","mediumInput","map","option","menuOption","smallerText","lockValue","symbol","container","toolbarContainer","tokenIDContainer","disclaimerContainer","disclaimer","buttonOverride","actionButtonText"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport {\n  Button,\n  Typography,\n  Tooltip,\n  IconButton,\n  TextField,\n  InputAdornment,\n  Popper,\n  Fade,\n  Grid,\n  Switch,\n  Select,\n  MenuItem\n} from '@material-ui/core';\nimport classes from './ssRewards.module.css';\n\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport SearchIcon from '@material-ui/icons/Search';\nimport RewardsTable from './ssRewardsTable.js'\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\n\nimport { formatCurrency } from '../../utils';\nimport stores from '../../stores'\nimport { ACTIONS } from '../../stores/constants';\n\nexport default function ssRewards() {\n\n  const [, updateState] = useState();\n  const forceUpdate = useCallback(() => updateState({}), []);\n\n  const [ rewards, setRewards ] = useState([])\n  const [ vestNFTs, setVestNFTs ] = useState([])\n  const [ search, setSearch ] = useState('')\n  const [ anchorEl, setAnchorEl ] = useState(null)\n  const [ token, setToken ] = useState(null)\n  const [ veToken, setVeToken ] = useState(null)\n  const [ loading, setLoading ] = useState(false)\n\n  const stableSwapUpdated = (rew) => {\n    const nfts = stores.stableSwapStore.getStore('vestNFTs')\n    setVestNFTs(nfts)\n    setVeToken(stores.stableSwapStore.getStore('veToken'))\n\n    if(nfts && nfts.length > 0) {\n      if(!token) {\n        setToken(nfts[0])\n        window.setTimeout(() => {\n          stores.dispatcher.dispatch({ type: ACTIONS.GET_REWARD_BALANCES, content: { tokenID: nfts[0].id } })\n        })\n      } else {\n        window.setTimeout(() => {\n          stores.dispatcher.dispatch({ type: ACTIONS.GET_REWARD_BALANCES, content: { tokenID: token.id } })\n        })\n      }\n    } else {\n      window.setTimeout(() => {\n        stores.dispatcher.dispatch({ type: ACTIONS.GET_REWARD_BALANCES, content: { tokenID: 0 } })\n      })\n    }\n\n    forceUpdate()\n  }\n\n  const rewardBalancesReturned = (rew) => {\n    if(rew) {\n      if(rew && rew.bribes && rew.fees && rew.bribes.length >= 0 && rew.fees.length >= 0 && rew.rewards.length >= 0) {\n        setRewards([...rew.bribes, ...rew.fees, ...rew.rewards])\n      }\n    } else {\n      let re = stores.stableSwapStore.getStore('rewards')\n      if(re && re.bribes && re.fees && re.bribes.length >= 0 && re.fees.length >= 0 && re.rewards.length >= 0) {\n        setRewards([...re.bribes, ...re.fees, ...re.rewards])\n      }\n    }\n  }\n\n  useEffect(() => {\n    rewardBalancesReturned()\n    stableSwapUpdated()\n\n    stores.emitter.on(ACTIONS.UPDATED, stableSwapUpdated);\n    stores.emitter.on(ACTIONS.REWARD_BALANCES_RETURNED, rewardBalancesReturned);\n    return () => {\n      stores.emitter.removeListener(ACTIONS.UPDATED, stableSwapUpdated);\n      stores.emitter.removeListener(ACTIONS.REWARD_BALANCES_RETURNED, rewardBalancesReturned);\n    };\n  }, [token]);\n\n  useEffect(() => {\n\n    const claimReturned = () => {\n      setLoading(false)\n    }\n\n    const claimAllReturned = () => {\n      setLoading(false)\n    }\n\n    stableSwapUpdated()\n\n    stores.emitter.on(ACTIONS.CLAIM_BRIBE_RETURNED, claimReturned);\n    stores.emitter.on(ACTIONS.CLAIM_REWARD_RETURNED, claimReturned);\n    stores.emitter.on(ACTIONS.CLAIM_PAIR_FEES_RETURNED, claimReturned);\n    stores.emitter.on(ACTIONS.CLAIM_ALL_REWARDS_RETURNED, claimAllReturned);\n    return () => {\n      stores.emitter.removeListener(ACTIONS.CLAIM_BRIBE_RETURNED, claimReturned);\n      stores.emitter.removeListener(ACTIONS.CLAIM_REWARD_RETURNED, claimReturned);\n      stores.emitter.removeListener(ACTIONS.CLAIM_PAIR_FEES_RETURNED, claimReturned);\n      stores.emitter.removeListener(ACTIONS.CLAIM_ALL_REWARDS_RETURNED, claimAllReturned);\n    };\n  }, [])\n\n  const onSearchChanged = (event) => {\n    setSearch(event.target.value);\n  };\n\n  const onClaimAll = () => {\n    setLoading(true)\n    let sendTokenID = 0\n    if(token && token.id) {\n      sendTokenID = token.id\n    }\n    stores.dispatcher.dispatch({ type: ACTIONS.CLAIM_ALL_REWARDS, content: { pairs: rewards, tokenID: sendTokenID } })\n  }\n\n  const handleClick = (event) => {\n    setAnchorEl(anchorEl ? null : event.currentTarget);\n  };\n\n  const handleChange = (event) => {\n    setToken(event.target.value);\n    stores.dispatcher.dispatch({ type: ACTIONS.GET_REWARD_BALANCES, content: { tokenID: event.target.value.id } })\n  }\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'transitions-popper' : undefined;\n\n  const renderMediumInput = (value, options) => {\n    return (\n      <div className={ classes.textField}>\n        <div className={ classes.mediumInputContainer}>\n          <Grid container>\n            <Grid item lg='auto' md='auto' sm={12} xs={12}>\n              <Typography variant=\"body2\" className={ classes.helpText }>Please select your veNFT:</Typography>\n            </Grid>\n            <Grid item lg={6} md={6} sm={12} xs={12}>\n            <div className={ classes.mediumInputAmount }>\n              <Select\n                fullWidth\n                value={ value }\n                onChange={handleChange}\n                InputProps={{\n                  className: classes.mediumInput,\n                }}\n              >\n                { options && options.map((option) => {\n                  return (\n                    <MenuItem key={option.id} value={option}>\n                      <div className={ classes.menuOption }>\n                        <Typography>Token #{option.id}</Typography>\n                        <div>\n                          <Typography align='right' className={ classes.smallerText }>{ formatCurrency(option.lockValue) }</Typography>\n                          <Typography color='textSecondary' className={ classes.smallerText }>{veToken?.symbol}</Typography>\n                        </div>\n                      </div>\n                    </MenuItem>\n                  )\n                })}\n              </Select>\n            </div>\n            </Grid>\n          </Grid>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className={ classes.container}>\n      <div className={ classes.toolbarContainer }>\n        <Grid container spacing={1}>\n          <Grid item lg='auto' md='auto' sm={12} xs={12}>\n            <div className={ classes.tokenIDContainer }>\n              { renderMediumInput(token, vestNFTs) }\n            </div>\n          </Grid>\n          <Grid item lg={true} md={true} sm={false} xs={false}>\n            <div className={ classes.disclaimerContainer }>\n              <Typography className={ classes.disclaimer }>Rewards are an estimation that aren't exact till the supply -> rewardPerToken calculations have run</Typography>\n            </div>\n          </Grid>\n          <Grid item lg='auto' md='auto' sm='12' xs='12'>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              startIcon={<AddCircleOutlineIcon />}\n              size='large'\n              className={ classes.buttonOverride }\n              color='primary'\n              onClick={ onClaimAll }\n              disabled={ loading }\n            >\n              <Typography className={ classes.actionButtonText }>Claim All</Typography>\n            </Button>\n          </Grid>\n        </Grid>\n      </div>\n      <RewardsTable rewards={rewards} vestNFTs={ vestNFTs } tokenID={ token?.id } />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}