{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pierremarieriviere/Code/solidly-master/components/transactionQueue/transaction.js\";\nimport React, { Component, useState, useEffect } from \"react\";\nimport { Typography, Button, CircularProgress, Tooltip } from \"@material-ui/core\";\nimport classes from './transactionQueue.module.css';\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\nimport HourglassFullIcon from '@material-ui/icons/HourglassFull';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport { ACTIONS, ETHERSCAN_URL } from '../../stores/constants';\nimport { formatAddress } from '../../utils';\nexport default function Transaction({\n  transaction\n}) {\n  const {\n    0: expanded,\n    1: setExpanded\n  } = useState(false);\n\n  const mapStatusToIcon = status => {\n    switch (status) {\n      case 'WAITING':\n        return /*#__PURE__*/_jsxDEV(PauseIcon, {\n          className: classes.orangeIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 16\n        }, this);\n\n      case 'PENDING':\n        return /*#__PURE__*/_jsxDEV(HourglassEmptyIcon, {\n          className: classes.greenIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 16\n        }, this);\n\n      case 'SUBMITTED':\n        return /*#__PURE__*/_jsxDEV(HourglassFullIcon, {\n          className: classes.greenIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 16\n        }, this);\n\n      case 'CONFIRMED':\n        return /*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n          className: classes.greenIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 16\n        }, this);\n\n      case 'REJECTED':\n        return /*#__PURE__*/_jsxDEV(ErrorIcon, {\n          className: classes.redIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 16\n        }, this);\n\n      case 'DONE':\n        return /*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n          className: classes.greenIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 16\n        }, this);\n\n      default:\n    }\n  };\n\n  const mapStatusToTootip = status => {\n    switch (status) {\n      case 'WAITING':\n        return 'Transaction will be submitted once ready';\n\n      case 'PENDING':\n        return 'Transaction is pending your approval in your wallet';\n\n      case 'SUBMITTED':\n        return 'Transaction has been submitted to the blockchain and we are waiting on confirmation.';\n\n      case 'CONFIRMED':\n        return 'Transaction has been confirmed by the blockchain.';\n\n      case 'REJECTED':\n        return 'Transaction has been rejected.';\n\n      default:\n        return '';\n    }\n  };\n\n  const onExpendTransaction = () => {\n    setExpanded(!expanded);\n  };\n\n  const onViewTX = () => {\n    window.open(`${ETHERSCAN_URL}tx/${transaction.txHash}`, '_blank');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.transaction,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.transactionInfo,\n      onClick: onExpendTransaction,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.transactionDescription,\n        children: transaction.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: mapStatusToTootip(transaction.status),\n        children: mapStatusToIcon(transaction.status)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), expanded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.transactionExpanded,\n      children: [transaction.txHash && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.transaactionHash,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          color: \"textSecondary\",\n          children: formatAddress(transaction.txHash, 'long')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: onViewTX,\n          children: \"View in Explorer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), transaction.error && /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.errorText,\n        children: transaction.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)]\n  }, transaction.uuid, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/pierremarieriviere/Code/solidly-master/components/transactionQueue/transaction.js"],"names":["React","Component","useState","useEffect","Typography","Button","CircularProgress","Tooltip","classes","HourglassEmptyIcon","HourglassFullIcon","CheckCircleIcon","ErrorIcon","PauseIcon","ACTIONS","ETHERSCAN_URL","formatAddress","Transaction","transaction","expanded","setExpanded","mapStatusToIcon","status","orangeIcon","greenIcon","redIcon","mapStatusToTootip","onExpendTransaction","onViewTX","window","open","txHash","transactionInfo","transactionDescription","description","transactionExpanded","transaactionHash","error","errorText","uuid"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,gBAA7B,EAA+CC,OAA/C,QAA8D,mBAA9D;AACA,OAAOC,OAAP,MAAoB,+BAApB;AAEA,OAAOC,kBAAP,MAA+B,mCAA/B;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AAEA,SAASC,OAAT,EAAkBC,aAAlB,QAAuC,wBAAvC;AACA,SAASC,aAAT,QAA8B,aAA9B;AAEA,eAAe,SAASC,WAAT,CAAqB;AAAEC,EAAAA;AAAF,CAArB,EAAsC;AAEnD,QAAM;AAAA,OAAEC,QAAF;AAAA,OAAYC;AAAZ,MAA4BlB,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMmB,eAAe,GAAIC,MAAD,IAAY;AAClC,YAAQA,MAAR;AACE,WAAK,SAAL;AACE,4BAAO,QAAC,SAAD;AAAW,UAAA,SAAS,EAAGd,OAAO,CAACe;AAA/B;AAAA;AAAA;AAAA;AAAA,gBAAP;;AACF,WAAK,SAAL;AACE,4BAAO,QAAC,kBAAD;AAAoB,UAAA,SAAS,EAAGf,OAAO,CAACgB;AAAxC;AAAA;AAAA;AAAA;AAAA,gBAAP;;AACF,WAAK,WAAL;AACE,4BAAO,QAAC,iBAAD;AAAmB,UAAA,SAAS,EAAGhB,OAAO,CAACgB;AAAvC;AAAA;AAAA;AAAA;AAAA,gBAAP;;AACF,WAAK,WAAL;AACE,4BAAO,QAAC,eAAD;AAAiB,UAAA,SAAS,EAAGhB,OAAO,CAACgB;AAArC;AAAA;AAAA;AAAA;AAAA,gBAAP;;AACF,WAAK,UAAL;AACE,4BAAO,QAAC,SAAD;AAAW,UAAA,SAAS,EAAGhB,OAAO,CAACiB;AAA/B;AAAA;AAAA;AAAA;AAAA,gBAAP;;AACF,WAAK,MAAL;AACE,4BAAO,QAAC,eAAD;AAAiB,UAAA,SAAS,EAAGjB,OAAO,CAACgB;AAArC;AAAA;AAAA;AAAA;AAAA,gBAAP;;AACF;AAbF;AAeD,GAhBD;;AAkBA,QAAME,iBAAiB,GAAIJ,MAAD,IAAY;AACpC,YAAQA,MAAR;AACE,WAAK,SAAL;AACE,eAAO,0CAAP;;AACF,WAAK,SAAL;AACE,eAAO,qDAAP;;AACF,WAAK,WAAL;AACE,eAAO,sFAAP;;AACF,WAAK,WAAL;AACE,eAAO,mDAAP;;AACF,WAAK,UAAL;AACE,eAAO,gCAAP;;AACF;AACE,eAAO,EAAP;AAZJ;AAcD,GAfD;;AAiBA,QAAMK,mBAAmB,GAAG,MAAM;AAChCP,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACD,GAFD;;AAIA,QAAMS,QAAQ,GAAG,MAAM;AACrBC,IAAAA,MAAM,CAACC,IAAP,CAAa,GAAEf,aAAc,MAAKG,WAAW,CAACa,MAAO,EAArD,EAAwD,QAAxD;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAGvB,OAAO,CAACU,WAAzB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAGV,OAAO,CAACwB,eAAzB;AAA2C,MAAA,OAAO,EAAGL,mBAArD;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,SAAS,EAAGnB,OAAO,CAACyB,sBAAhC;AAAA,kBAA2Df,WAAW,CAACgB;AAAvE;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,OAAD;AAAS,QAAA,KAAK,EAAGR,iBAAiB,CAACR,WAAW,CAACI,MAAb,CAAlC;AAAA,kBACID,eAAe,CAACH,WAAW,CAACI,MAAb;AADnB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAOIH,QAAQ,iBACR;AAAK,MAAA,SAAS,EAAGX,OAAO,CAAC2B,mBAAzB;AAAA,iBACIjB,WAAW,CAACa,MAAZ,iBACA;AAAK,QAAA,SAAS,EAAGvB,OAAO,CAAC4B,gBAAzB;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,KAAK,EAAC,eAAlB;AAAA,oBAAoCpB,aAAa,CAACE,WAAW,CAACa,MAAb,EAAqB,MAArB;AAAjD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AACE,UAAA,OAAO,EAAGH,QADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAUIV,WAAW,CAACmB,KAAZ,iBACA,QAAC,UAAD;AAAY,QAAA,SAAS,EAAG7B,OAAO,CAAC8B,SAAhC;AAAA,kBAA4CpB,WAAW,CAACmB;AAAxD;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA,KAA6CnB,WAAW,CAACqB,IAAzD;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\nimport { Typography, Button, CircularProgress, Tooltip } from \"@material-ui/core\";\nimport classes from './transactionQueue.module.css';\n\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\nimport HourglassFullIcon from '@material-ui/icons/HourglassFull';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport PauseIcon from '@material-ui/icons/Pause';\n\nimport { ACTIONS, ETHERSCAN_URL } from '../../stores/constants';\nimport { formatAddress } from '../../utils'\n\nexport default function Transaction({ transaction }) {\n\n  const [ expanded, setExpanded ] = useState(false)\n\n  const mapStatusToIcon = (status) => {\n    switch (status) {\n      case 'WAITING':\n        return <PauseIcon className={ classes.orangeIcon }  />\n      case 'PENDING':\n        return <HourglassEmptyIcon className={ classes.greenIcon }  />\n      case 'SUBMITTED':\n        return <HourglassFullIcon className={ classes.greenIcon }  />\n      case 'CONFIRMED':\n        return <CheckCircleIcon className={ classes.greenIcon }  />\n      case 'REJECTED':\n        return <ErrorIcon className={ classes.redIcon }  />\n      case 'DONE':\n        return <CheckCircleIcon className={ classes.greenIcon } />\n      default:\n    }\n  }\n\n  const mapStatusToTootip = (status) => {\n    switch (status) {\n      case 'WAITING':\n        return 'Transaction will be submitted once ready'\n      case 'PENDING':\n        return 'Transaction is pending your approval in your wallet'\n      case 'SUBMITTED':\n        return 'Transaction has been submitted to the blockchain and we are waiting on confirmation.'\n      case 'CONFIRMED':\n        return 'Transaction has been confirmed by the blockchain.'\n      case 'REJECTED':\n        return 'Transaction has been rejected.'\n      default:\n        return ''\n    }\n  }\n\n  const onExpendTransaction = () => {\n    setExpanded(!expanded)\n  }\n\n  const onViewTX = () => {\n    window.open(`${ETHERSCAN_URL}tx/${transaction.txHash}`, '_blank')\n  }\n\n  return (\n    <div className={ classes.transaction } key={ transaction.uuid }>\n      <div className={ classes.transactionInfo } onClick={ onExpendTransaction }>\n        <Typography className={ classes.transactionDescription }>{ transaction.description }</Typography>\n        <Tooltip title={ mapStatusToTootip(transaction.status) }>\n          { mapStatusToIcon(transaction.status) }\n        </Tooltip>\n      </div>\n      { expanded &&\n        <div className={ classes.transactionExpanded }>\n          { transaction.txHash &&\n            <div className={ classes.transaactionHash }>\n              <Typography color='textSecondary'>{ formatAddress(transaction.txHash, 'long') }</Typography>\n              <Button\n                onClick={ onViewTX }>\n                View in Explorer\n              </Button>\n            </div>\n          }\n          { transaction.error &&\n            <Typography className={ classes.errorText}>{transaction.error}</Typography>\n          }\n        </div>\n      }\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}